{"version":3,"sources":["components/GlobalSetting/LoadingComponent/LoadingComponent.module.css","assets/imgLoading/loading.gif","assets/img/download.jfif","templates/HomeTemplate/UserLoginTemplate.js","redux/constants/Cyberbugs/Cyberbugs.js","components/ModalSignUp/ModalSignUp.js","redux/actions/CyberbugsActions.js","pages/CyberBugs/LoginCyberBugs/LoginCyberBugs.js","components/GlobalSetting/LoadingComponent/LoadingComponent.js","components/Cyberbugs/Main/ContentMain.js","components/Cyberbugs/Main/HeaderMain.js","components/Cyberbugs/Main/InfoMain.js","pages/ProjectDetail/ProjectDetail.js","components/Cyberbugs/MenuCyberbugs.js","util/constants/settingSystem.js","components/Cyberbugs/ModalCyberbugs/ModalCyberbugs.js","components/Forms/FormCreateTask/FormCreateTask.js","util/history.js","components/Cyberbugs/SidebarCyberbugs.js","templates/HomeTemplate/CyberbugsTemplate.js","pages/CyberBugs/CreateProject/CreateProject.js","components/Forms/FormEditProject/FormEditProject.js","pages/ProjectManagement/ProjectManagement.js","HOC/CyberbugsHOC/DrawerCyberBugs.js","pages/NotFound/NotFound.js","components/Forms/FormEditUser/FormEditUser.js","components/Forms/FormCreateUser/FormCreateUser.js","pages/UserManagement/UserManagement.js","templates/HomeTemplate/HomeTemplate.js","App.js","reportWebVitals.js","redux/constants/LoadingConst.js","redux/reducers/LoadingReducer.js","redux/reducers/AuthenticationReducer.js","redux/reducers/ProjectCategoryReducer.js","redux/reducers/DrawerCyberbugsReducer.js","redux/reducers/ProjectReducer.js","redux/reducers/UserReducer.js","redux/reducers/PriorityReducer.js","redux/reducers/StatusReducer.js","redux/reducers/TaskReducer.js","services/baseService.js","services/AuthenticationService.js","redux/sagas/Cyberbugs/AuthenticationSaga.js","services/ProjectService.js","redux/sagas/Cyberbugs/ProjectCategorySaga.js","util/Notification/notificationCyberbugs.js","redux/sagas/Cyberbugs/ProjectSaga.js","services/UserService.js","redux/sagas/Cyberbugs/UserSaga.js","services/PriorityService.js","redux/sagas/Cyberbugs/PrioritySaga.js","services/TaskService.js","redux/sagas/Cyberbugs/TaskSaga.js","services/StatusService.js","redux/sagas/Cyberbugs/StatusSaga.js","redux/sagas/rootSaga.js","redux/configStore.js","index.js"],"names":["module","exports","Sider","Layout","Content","UserLoginTemplate","props","useState","width","Math","round","window","innerWidth","height","innerHeight","setSize","useEffect","onresize","Component","restRoute","render","propsRoute","style","backgroundImage","backgroundSize","USER_SIGNIN_API","USLOGIN","USER_SIGNUP_API","SIGN_UP_NOTIFICATION","GET_ALL_PROJECT_CATEGORY_SAGA","GET_ALL_PROJECT_CATEGORY","CREATE_PROJECT_SAGA","GET_LIST_PROJECT","GET_LIST_PROJECT_SAGA","UPDATE_PROJECT_SAGA","DELETE_PROJECT_SAGA","GET_PROJECT_DETAIL_SAGA","PUT_PROJECT_DETAIL","GET_PROJECT_DROPDOWN_LIST_SAGA","GET_PROJECT_DROPDOWN_LIST","OPEN_DRAWER","CLOSE_DRAWER","OPEN_FORM_EDIT_PROJECT","SET_SUBMIT_EDIT_PROJECT","EDIT_PROJECT","OPEN_FORM_CREATE_TASK","SET_SUBMIT_CREATE_TASK","SET_SUBMIT_EDIT_USER","OPEN_FORM_EDIT_USER","OPEN_FORM_CREATE_USER","SET_SUBMIT_CREATE_USER","GET_USER_SAGA","GET_USER_SEARCH","ADD_USER_PROJECT_SAGA","REMOVE_USER_PROJECT_SAGA","GET_USER_BY_PROJECT_ID_SAGA","GET_USER_BY_PROJECT_ID","GET_LIST_USER_SAGA","GET_LIST_USER","DELETE_USER_SAGA","UPDATE_USER_SAGA","EDIT_USER","CREATE_USER_SAGA","GET_ALL_STATUS_SAGA","GET_ALL_STATUS","GET_ALL_PRIORITY_SAGA","GET_ALL_PRIORITY","GET_ALL_TASK_TYPE_SAGA","GET_ALL_TASK_TYPE","CREATE_TASK_SAGA","GET_TASK_DETAIL_SAGA","GET_TASK_DETAIL","CHANGE_TASK_MODAL","CHANGE_ASSIGNEES","REMOVE_USER_ASSIGN","HANDLE_CHANGE_POST_API_SAGA","UPDATE_STATUS_TASK_SAGA","GET_ALL_COMMENT_SAGA","GET_ALL_COMMENT","CREATE_COMMENT_SAGA","DELETE_COMMENT_SAGA","EDIT_COMMENT","UPDATE_COMMENT_SAGA","SignUpCyberBugsWithFormik","withFormik","mapPropsToValues","name","phoneNumber","email","password","validationSchema","Yup","shape","required","min","max","handleSubmit","setSubmitting","dispatch","type","userSignup","passWord","signupCyberbugAction","displayName","errors","handleChange","signUpNotification","useSelector","state","AuthenticationReducer","className","id","tabIndex","role","onSubmit","placeholder","onChange","onKeyDown","e","key","ctrlKey","preventDefault","cursor","onClick","marginTop","marginBottom","paddingLeft","paddingRight","fontWeight","connect","LoginCyberBugsWithFormik","userLogin","signinCyberbugAction","fontSize","minWidth","size","prefix","UserOutlined","LockOutlined","htmlType","backgroundColor","color","icon","TwitterOutlined","LoadingComponent","LoadingReducer","isLoading","styleLoading","bgLoading","src","require","default","alt","ContentMain","projectDetail","useDispatch","handleDragEnd","result","JSON","parse","draggableId","projectId","taskId","source","destination","index","droppableId","taskUpdateStatus","display","onDragEnd","lstTask","map","taskListDetail","statusId","provided","statusName","ref","innerRef","droppableProps","lstTaskDeTail","task","stringify","draggableProps","dragHandleProps","taskName","priorityTask","priority","assigness","mem","avatar","toString","renderCardTaskList","HeaderMain","projectName","InfoMain","ReactHtmlParser","description","members","user","renderAvatar","marginLeft","ProjectDetail","ProjectReducer","match","params","MenuCyberbugs","activeStyle","to","activeClassName","DOMAIN_CYBERBUG","TOKEN","USER_LOGIN","STATUS_CODE","ModalCyberbugs","taskDetailModal","TaskReducer","arrStatus","StatusReducer","arrPriority","PriorityReducer","arrTaskType","visibleEditor","setVisibleEditor","historyContent","setHistoryContent","content","setContent","visibleCommentEditor","setVisibleCommentEditor","commentEdit","commmentEditContent","setCommmentEditContent","editorRef","useRef","renderCommentContent","item","commentContent","onInit","evt","editor","current","initialValue","init","menubar","plugins","toolbar","content_style","onEditorChange","newValue","commentUpdate","contentComment","target","value","actionType","typeId","tp","taskType","jsxDescription","selector","renderDescription","localStorage","getItem","commentDescription","padding","border","borderRadius","commentObject","renderCommentEditor","listReOrderedComment","i","lstComment","length","push","itemLayout","pagination","pageSize","dataSource","renderItem","Item","Meta","title","href","marginRight","idComment","renderListComment","status","flexWrap","userId","alignItems","options","filter","findIndex","us","label","optionFilterProp","onSelect","userSelected","find","parseInt","priorityId","originalEstimate","timeTrackingSpent","timeTrackingRemaining","Number","percent","justifyContent","renderTimeTracking","Option","Select","children","frmCreateTask","enableReinitialize","projectDropDownList","listUserAsign","values","taskObject","arrUser","UserReducer","userOptions","setFieldValue","React","timeTracking","setTimetracking","keyWord","submitFunction","idProject","project","statusItem","mode","defaultValue","history","createBrowserHistory","SidebarCyberbugs","collapsed","setState","trigger","collapsible","BarsOutlined","theme","defaultSelectedKeys","PlusOutlined","SearchOutlined","LogoutOutlined","removeItem","LoginOutlined","CyberbugsTemplate","restParam","createProjectForm","categoryId","arrProjectCategory","newProject","ProjectCategoryReducer","projectCategoryName","EditProjectForm","projectEdit","projectUpdate","disabled","ProjectManagement","projectList","userSearch","searchRef","setValue","columns","dataIndex","sorter","item2","item1","sortDirections","text","record","projectName1","trim","toLowerCase","categoryName1","categoryName","creator","creator1","slice","member","placement","userProject","valueSelect","option","onSearch","clearTimeout","setTimeout","projectEditModel","FormOutlined","onConfirm","okText","cancelText","DeleteOutlined","rowKey","DrawerCyberBugs","DrawerCyberbugsReducer","visible","ComponentContentDrawer","callBackSubmit","onClose","bodyStyle","paddingBottom","footer","textAlign","NotFound","subTitle","extra","EditUserForm","userEdit","userUpdate","CreateUserForm","UserManagement","userList","userKeyword","userEditModel","idUser","UserAddOutlined","Search","Input","allowClear","enterButton","renderSearchBox","HomeTemplate","App","exact","path","LoginCyberBugs","CreateProject","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","DISPLAY_LOADING","HIDE_LOADING","initialState","usLogin","stateDefault","propsValue","alert","baseService","put","url","model","Axios","method","data","headers","post","get","delete","authenticationService","signIn","signUp","signinSaga","theoDoiSignin","signUpSaga","theoDoiSignUp","action","delay","call","setItem","accessToken","console","log","takeLatest","projectService","createProject","updateProject","getAllProjectCategory","getAllProject","deleteProject","getProjectDetail","getAllProjectCategorySaga","theoDoigetAllProjectCategory","response","notifiFunction","message","notification","createProjectSaga","theoDoiCreateProjectSaga","getListProjectSaga","theoDoiGetListProjectSaga","updateProjectSaga","theoDoiUpdateProjectSaga","deleteProjectSaga","theoDoiDeleteProject","getProjectDetailSaga","theoDoiGetProjectDetail","getProjectDropdownListSaga","theoDoiGetProjectDropdownListSaga","userService","getUser","keyword","assignUserProject","deleteUserFromProject","getUserByProjectId","deleteUserById","editUser","getUserSaga","theoDoiGetUser","addUserProjectSaga","theoDoiAddUserProject","removeUserProjectSaga","theoDoiRemoveUserProject","getUserByProjectIdSaga","theoDoiGetUserByProjectIdSaga","getListUserSaga","theoDoiGetListUserSaga","deleteUserSaga","theoDoiDeleteUserSaga","updateUserSaga","theoDoiUpdateUserSaga","createUserSaga","theoDoiCreateUserSage","lstUserSearch","statusCode","priorityService","getAllPriority","theoDoiGetAllPriority","taskService","getAllTaskType","createTask","getTaskDetail","updateTask","taskUpdate","updateStatusTask","taskStatusUpdate","getAllComment","createComment","deleteComment","updateComment","getAllTaskTypeSaga","theoDoiGetAllTaskTypeSaga","createTaskSaga","theoDoiCreateTaskSaga","getTaskDetailSaga","theoDoiGetTaskDetailSaga","handelChangePostApi","theoDoiHandleChangePostApi","updateTaskStatusSaga","theoDoiUpdateTaskStatusSaga","getAllCommentSaga","theoDoiGetAllCommentSaga","createCommentSaga","theoDoiCreateCommentSaga","deleteCommentSaga","theoDoiDeleteCommentSaga","updateCommentSaga","theoDoiUpdateCommentSaga","select","taskUpdateApi","statusService","getAllStatus","getAllStatusSaga","theoDoiGetAllStatusSaga","rootSaga","all","AuthenticationSaga","ProjectCategorySaga","ProjectSaga","UserSaga","StatusSaga","PrioritySaga","TaskSaga","middleWareSaga","createMiddleWareSaga","rootReducer","combineReducers","store","createStore","applyMiddleware","run","ReactDOM","document","getElementById"],"mappings":"2HACAA,EAAOC,QAAU,CAAC,UAAY,sC,iCCD9B,OAAe,cAA0B,qC,qDCAzC,OAAe,cAA0B,uC,uJCKjCC,EAAmBC,IAAnBD,MAAOE,EAAYD,IAAZC,QAGFC,EAAoB,SAACC,GAC9B,MAAqCC,mBAAS,CAAEC,MAAOC,KAAKC,MAAMC,OAAOC,YAAaC,OAAQJ,KAAKC,MAAMC,OAAOG,eAAhH,0BAASN,EAAT,EAASA,MAAOK,EAAhB,EAAgBA,OAAUE,EAA1B,KAEAC,qBAAU,WACNL,OAAOM,SAAW,WACdF,EAAQ,CACJP,MAAOC,KAAKC,MAAMC,OAAOC,YACzBC,OAAQJ,KAAKC,MAAMC,OAAOG,kBAGnC,IAEH,IAAMI,EAA4BZ,EAA5BY,UAAcC,EAApB,YAAkCb,EAAlC,GACA,OAAO,cAAC,IAAD,2BAAWa,GAAX,IAAsBC,OAAQ,SAACC,GAClC,OAAO,mCACH,eAAC,IAAD,WACI,cAACnB,EAAD,CAAOM,MAAOA,EAAQ,EAAGc,MAAO,CAAET,OAAQA,EAAQU,gBAAgB,6BAAD,OAA+Bd,KAAKC,MAAMF,EAAQ,GAAlD,YAAwDK,EAAxD,KAAmEW,eAAgB,UAEpJ,cAACpB,EAAD,UACI,cAACc,EAAD,eAAeG,gB,oEC1BtBI,EAAkB,kBAClBC,EAAU,UACVC,EAAkB,kBAClBC,EAAuB,uBAGvBC,EAAgC,gCAChCC,EAA2B,2BAC3BC,EAAsB,sBACtBC,EAAmB,mBACnBC,EAAwB,wBACxBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAA0B,0BAC1BC,EAAqB,qBACrBC,EAAiC,iCACjCC,EAA4B,4BAG5BC,EAAc,cACdC,EAAe,eACfC,EAAyB,yBACzBC,EAA0B,0BAC1BC,EAAe,eACfC,EAAwB,wBACxBC,EAAyB,yBACzBC,EAAuB,uBACvBC,EAAsB,sBACtBC,EAAwB,wBACxBC,EAAyB,yBAGzBC,EAAgB,gBAChBC,EAAkB,kBAClBC,EAAwB,wBACxBC,GAA2B,2BAC3BC,GAA8B,8BAC9BC,GAAyB,yBACzBC,GAAqB,qBACrBC,GAAgB,gBAChBC,GAAmB,mBACnBC,GAAmB,mBACnBC,GAAY,YACZC,GAAmB,mBAGnBC,GAAsB,sBACtBC,GAAiB,iBAGjBC,GAAwB,wBACxBC,GAAmB,mBAGnBC,GAAyB,yBACzBC,GAAoB,oBACpBC,GAAmB,mBACnBC,GAAuB,uBACvBC,GAAkB,kBAClBC,GAAoB,oBACpBC,GAAmB,mBACnBC,GAAqB,qBACrBC,GAA8B,8BAC9BC,GAA0B,0BAE1BC,GAAuB,uBACvBC,GAAkB,kBAClBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAe,eACfC,GAAsB,sBCcnC,IAAMC,GAA4BC,YAAW,CACzCC,iBAAkB,iBAAO,CACrBC,KAAM,GACNC,YAAa,GACbC,MAAO,GACPC,SAAU,KAEdC,iBAAkBC,MAAaC,MAAM,CACjCN,KAAMK,MAAaE,SAAS,qBAC5BN,YAAaI,MAAaE,SAAS,6BACnCL,MAAOG,MAAaE,SAAS,sBAAsBL,MAAM,qBACzDC,SAAUE,MAAaG,IAAI,EAAG,0CAA0CC,IAAI,GAAI,4CAEpFC,aAAc,cAAuE,IAApEV,EAAmE,EAAnEA,KAAMC,EAA6D,EAA7DA,YAAaC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,SAAcnF,EAA2B,EAA3BA,OACrD2F,EADgF,EAApBA,gBAC9C,GACd3F,EAAM4F,SCtFsB,SAACZ,EAAMC,EAAaC,EAAOC,GAC3D,MAAO,CACHU,KAAMxE,EACNyE,WAAY,CACRZ,MAAOA,EACPa,SAAUZ,EACVH,KAAMA,EACNC,YAAaA,ID+EFe,CAAqBhB,EAAMC,EAAaC,EAAOC,KAElEc,YAAa,oBAjBiBnB,EA/ElC,SAAqB9E,GACjB,IACIkG,EAGAlG,EAHAkG,OACAC,EAEAnG,EAFAmG,aACAT,EACA1F,EADA0F,aAKIU,EAAuBC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,yBAAlDH,mBAgBR,OACI,qBAAKI,UAAU,aAAaC,GAAG,cAAcC,UAAW,EAAGC,KAAK,SAAS,kBAAgB,cAAc,cAAY,OAAnH,SACI,qBAAKH,UAAU,eAAeG,KAAK,WAAnC,SACI,sBAAKH,UAAU,gBAAf,UACI,sBAAKA,UAAU,eAAf,UACI,oBAAIA,UAAU,cAAd,qBACA,wBAAQX,KAAK,SAASW,UAAU,QAAQ,eAAa,QAAQ,aAAW,QAAxE,SACI,sBAAM,cAAY,OAAlB,uBAGR,qBAAKA,UAAU,aAAf,SACI,uBAAMI,SAAUlB,EAAcc,UAAU,YAAxC,UACI,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,uBAAOK,YAAY,OAAO7B,KAAK,OAAOwB,UAAU,eAAeM,SAAUX,IACzE,qBAAKK,UAAU,cAAf,SAA8BN,EAAOlB,UAEzC,sBAAKwB,UAAU,QAAf,UACI,uBAAOK,YAAY,eAAe7B,KAAK,cAAcwB,UAAU,eAC3DO,UAAW,SAACC,GACDA,EAAEC,KAAO,GAAKD,EAAEC,KAAO,GACZ,cAAVD,EAAEC,KACQ,cAAVD,EAAEC,KACQ,eAAVD,EAAEC,KACQ,QAAVD,EAAEC,KACFD,EAAEE,UAAsB,MAAVF,EAAEC,KAAyB,MAAVD,EAAEC,KAAyB,MAAVD,EAAEC,KAAyB,MAAVD,EAAEC,MACvED,EAAEG,kBAEPL,SAAUX,IACjB,qBAAKK,UAAU,cAAf,SAA8BN,EAAOjB,sBAIjD,sBAAKuB,UAAU,aAAf,UACI,uBAAOK,YAAY,QAAQ7B,KAAK,QAAQwB,UAAU,eAAeM,SAAUX,IAC3E,qBAAKK,UAAU,cAAf,SAA8BN,EAAOhB,WAEzC,sBAAKsB,UAAU,aAAf,UACI,uBAAOK,YAAY,WAAW7B,KAAK,WAAWa,KAAK,WAAWW,UAAU,eAAeM,SAAUX,IACjG,qBAAKK,UAAU,cAAf,SAA8BN,EAAOf,cArDlC,IAAvBiB,EACO,sBAAKI,UAAU,gCAAf,oCAAsE,sBACzEA,UAAU,0CAA0CxF,MAAO,CAAEoG,OAAQ,WACrE,eAAa,QAAQC,QAAS,aAF2C,mBAAtE,mBAIqB,IAAvBjB,EACE,qBAAKI,UAAU,+BAAf,6CAGA,wBA+CS,qBAAKA,UAAU,cAAf,SACI,wBAAQX,KAAK,SAAS7E,MAAO,CAAEsG,UAAW,MAAOC,aAAc,MAAOC,YAAa,GAAIC,aAAc,GAAIC,WAAY,QAAUlB,UAAU,kBAAzI,sCA+BjBmB,iBAAU9C,IEpDzB,IAAM+C,GAA2B9C,YAAW,CACxCC,iBAAkB,iBAAO,CACrBG,MAAO,GACPC,SAAU,KAEdC,iBAAkBC,MAAaC,MAAM,CACjCJ,MAAOG,MAAaE,SAAS,sBAAsBL,MAAM,qBACzDC,SAAUE,MAAaG,IAAI,EAAG,uCAAuCC,IAAI,GAAI,sCAGjFC,aAAc,cAAoD,IAAjDR,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,SAAcnF,EAA2B,EAA3BA,OAClC2F,EAD6D,EAApBA,gBAC3B,GACd3F,EAAM4F,SD9DsB,SAACV,EAAOC,GACxC,MAAO,CACHU,KAAM1E,EACN0G,UAAW,CACP3C,MAAOA,EACPC,SAAUA,ICyDC2C,CAAqB5C,EAAOC,KAE/Cc,YAAa,mBAdgBnB,EA7CjC,SAAwB9E,GAEpB,IACIkG,EAGAlG,EAHAkG,OACAC,EAEAnG,EAFAmG,aACAT,EACA1F,EADA0F,aAGJ,OACI,gCACI,sBAAMkB,SAAUlB,EAAcc,UAAU,YAAYxF,MAAO,CAAET,OAAQF,OAAOG,aAA5E,SACI,sBAAKgG,UAAU,+DAA+DxF,MAAO,CAAET,OAAQF,OAAOG,aAAtG,UACI,oBAAIgG,UAAU,cAAcxF,MAAO,CAAE0G,WAAY,IAAKK,SAAU,IAAhE,6BACA,qBAAKvB,UAAU,cAAf,SACI,cAAC,IAAD,CAAOM,SAAUX,EAAcnF,MAAO,CAAEd,MAAO,OAAQ8H,SAAU,KAAOhD,KAAK,QAAQiD,KAAK,QAAQpB,YAAY,QAAQqB,OAAQ,cAACC,EAAA,EAAD,QAElI,qBAAK3B,UAAU,cAAf,SAA8BN,EAAOhB,QACrC,qBAAKsB,UAAU,cAAf,SACI,cAAC,IAAD,CAAOM,SAAUX,EAAcnF,MAAO,CAAEd,MAAO,OAAQ8H,SAAU,KAAOnC,KAAK,WAAWb,KAAK,WAAWiD,KAAK,QAAQpB,YAAY,WAAWqB,OAAQ,cAACE,EAAA,EAAD,QAExJ,qBAAK5B,UAAU,cAAf,SAA8BN,EAAOf,WAErC,cAAC,IAAD,CAAQkD,SAAS,SAASJ,KAAK,QAAQjH,MAAO,CAAEgH,SAAU,IAAKM,gBAAiB,mBAAoBC,MAAO,QAAU/B,UAAU,OAA/H,oBAGA,sBAAKA,UAAU,qBAAf,UACI,cAAC,IAAD,CAAQxF,MAAO,CAAEsH,gBAAiB,kBAAoBhD,MAAM,SAAS2C,KAAM,QAA3E,SACI,sBAAMzB,UAAU,mBAAmBxF,MAAO,CAAEuH,MAAO,OAAQR,SAAU,QAArE,iBAEJ,cAAC,IAAD,CAAQlC,KAAK,eAAeP,MAAM,SAASkD,KAAM,cAACC,EAAA,EAAD,IAAqBR,KAAM,aAKhF,sBAAKzB,UAAU,OAAOxF,MAAO,CAAE+G,SAAU,QAAzC,oCAA0E,sBACtEvB,UAAU,0CAA0CxF,MAAO,CAAEoG,OAAQ,WACrE,cAAY,QAAQ,cAAY,eAAeC,QAAS,aAFc,6BAMlF,cAAC,GAAD,UAuBGM,iBAAUC,I,qBCpEV,SAASc,KAIpB,OAFsBrC,aAAY,SAAAC,GAAK,OAAIA,EAAMqC,kBAAzCC,UAIA,qBAAKpC,UAAWqC,KAAaC,UAA7B,SACI,qBAAKC,IAAKC,EAAQ,KAA0CC,QAASC,IAAI,kBAI1E,G,cCXA,SAASC,GAAYnJ,GAEhC,IAAQoJ,EAAkBpJ,EAAlBoJ,cACFxD,EAAWyD,cAEXC,EAAgB,SAACC,GACnB,MAA4BC,KAAKC,MAAMF,EAAOG,aAAxCC,EAAN,EAAMA,UAAWC,EAAjB,EAAiBA,OAEXC,EAAwBN,EAAxBM,OAAQC,EAAgBP,EAAhBO,YACTP,EAAOO,cAGRD,EAAOE,QAAUD,EAAYC,OAASF,EAAOG,cAAgBF,EAAYE,aAO7EpE,EAAS,CACLC,KAAMvB,GACN2F,iBAAkB,CACd,OAAUL,EACV,SAAYE,EAAYE,YACxB,UAAaL,OAsEzB,OACI,qBAAKnD,UAAU,UAAUxF,MAAO,CAAEkJ,QAAS,QAA3C,SAlEuB,WAAO,IAAD,EAC7B,OAAO,cAAC,KAAD,CAAiBC,UAAWb,EAA5B,mBAECF,EAAcgB,eAFf,aAEC,EAAuBC,KAAI,SAACC,EAAgBP,GACxC,OAAO,cAAC,KAAD,CAAuBC,YAAaM,EAAeC,SAAnD,SACF,SAACC,GACE,OAAO,sBAAKhE,UAAU,YAAYxF,MAAO,CAAEd,MAAO,QAASK,OAAQ,QAA5D,UACH,qBAAKiG,UAAU,cAAf,SACK8D,EAAeG,aAEpB,uDACIC,IAAKF,EAASG,UACVH,EAASI,gBAFjB,IAGI3D,IAAK8C,EACLvD,UAAU,8BAA8BxF,MAAO,CAAET,OAAQ,UACxD+J,EAAeO,cAAcR,KAAI,SAACS,EAAMf,GACrC,OAAO,cAAC,KAAD,CAAwCA,MAAOA,EAAOL,YAAaF,KAAKuB,UAAU,CAAEpB,UAAWmB,EAAKnB,UAAWC,OAAQkB,EAAKlB,SAA5H,SACF,SAACY,GACE,OAAO,mEACHE,IAAKF,EAASG,UACVH,EAASQ,gBACTR,EAASS,iBAHV,IAIHhE,IAAK8C,EAAOvD,UAAU,kBAAkB,cAAY,QAAQ,cAAY,aAAaa,QAAS,WAC1FzB,EAAS,CAAEC,KAAM7B,GAAsB4F,OAAQkB,EAAKlB,YAGxD,mBAAGpD,UAAU,kBAAb,SACKsE,EAAKI,WAEV,sBAAK1E,UAAU,QAAQxF,MAAO,CAAEkJ,QAAS,QAAzC,UACI,qBAAK1D,UAAU,aAAf,SACI,mBAAGA,UAAU,cAAb,SAA4BsE,EAAKK,aAAaC,aAElD,qBAAK5E,UAAU,cAAf,SACI,qBAAKA,UAAU,eAAexF,MAAO,CAAEkJ,QAAS,QAAhD,SACKY,EAAKO,UAAUhB,KAAI,SAACiB,EAAKvB,GACtB,OAAO,qBAAKvD,UAAU,SAAf,SACH,qBAAKuC,IAAKuC,EAAIC,OAAQrC,IAAKoC,EAAIC,UADCxB,gBApBzCe,EAAKlB,OAAO4B,eAkCtChB,EAAS3D,kBA9CHkD,QAgE9B0B,KCnGE,SAASC,GAAW1L,GAE/B,IAAQoJ,EAAkBpJ,EAAlBoJ,cAER,OACI,qBAAK5C,UAAU,SAAf,SACI,qBAAK,aAAW,aAAhB,SACI,qBAAIA,UAAU,aAAaxF,MAAO,CAAEsH,gBAAiB,SAArD,UACI,oBAAI9B,UAAU,kBAAd,qBACA,oBAAIA,UAAU,kBAAd,wBACA,oBAAIA,UAAU,kBAAd,gCACA,oBAAIA,UAAU,yBAAyB,eAAa,OAApD,SACK4C,EAAcuC,qB,yBCVxB,SAASC,GAAS5L,GAC7B,IAAQoJ,EAAkBpJ,EAAlBoJ,cAUR,OACI,qCACI,6BAAKA,EAAcuC,cAEnB,kCACKE,KAAgBzC,EAAc0C,eAEnC,sBAAKtF,UAAU,OAAOxF,MAAO,CAAEkJ,QAAS,QAAxC,UACI,sBAAK1D,UAAU,eAAf,UACI,uBAAOA,UAAU,WACjB,mBAAGA,UAAU,oBAEjB,qBAAKA,UAAU,eAAexF,MAAO,CAAEkJ,QAAS,QAAhD,SArBS,WAAO,IAAD,EAEvB,iBAAOd,EAAc2C,eAArB,aAAO,EAAuB1B,KAAI,SAAC2B,EAAMjC,GACrC,OAAO,qBAAiBvD,UAAU,SAA3B,SACH,qBAAKuC,IAAKiD,EAAKT,OAAQrC,IAAK8C,EAAKT,UADpBxB,MAmBRkC,KAEL,qBAAKjL,MAAO,CAAEkL,WAAY,IAAM1F,UAAU,OAA1C,4BACA,qBAAKxF,MAAO,CAAEkL,WAAY,IAAM1F,UAAU,OAA1C,oCCxBD,SAAS2F,GAAcnM,GAClC,IAAMoJ,EAAkB/C,aAAY,SAAAC,GAAK,OAAIA,EAAM8F,kBAA7ChD,cACAxD,EAAWyD,cASjB,OARA3I,qBAAU,WACN,IAAQiJ,EAAc3J,EAAMqM,MAAMC,OAA1B3C,UACR/D,EAAS,CACLC,KAAM/D,EACN6H,UAAWA,MAEhB,CAAC/D,EAAU5F,EAAMqM,MAAMC,SAGtB,sBAAK9F,UAAU,OAAf,UACI,cAACkF,GAAD,CAAYtC,cAAeA,IAC3B,cAACwC,GAAD,CAAUxC,cAAeA,IACzB,cAACD,GAAD,CAAaC,cAAeA,O,aCnBzB,SAASmD,KACpB,OACI,sBAAK/F,UAAU,OAAf,UACI,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,SAAf,SACI,qBAAKuC,IAAKC,EAAQ,KAAkCC,QAASC,IAAI,OAErE,sBAAK1C,UAAU,eAAf,UACI,8CACA,kDAGR,sBAAKA,UAAU,UAAf,UACI,gCACI,mBAAGA,UAAU,2BACb,kDAEJ,gCACI,mBAAGA,UAAU,mBACb,cAAC,KAAD,CAASA,UAAU,YAAYgG,YAAa,CAAEjE,MAAO,QAAUkE,GAAG,qBAAqBC,gBAAgB,wCAAvG,mCAEJ,gCACI,mBAAGlG,UAAU,mBACb,cAAC,KAAD,CAASA,UAAU,YAAYgG,YAAa,CAAEjE,MAAO,QAAUkE,GAAG,iBAAiBC,gBAAgB,uCAAnG,+BAEJ,gCACI,mBAAGlG,UAAU,qBACb,cAAC,KAAD,CAASA,UAAU,YAAYgG,YAAa,CAAEjE,MAAO,QAAUkE,GAAG,kBAAkBC,gBAAgB,wCAApG,mCAGR,sBAAKlG,UAAU,UAAf,UACI,gCACI,mBAAGA,UAAU,qBACb,gDAEJ,gCACI,mBAAGA,UAAU,sBACb,0DAEJ,gCACI,mBAAGA,UAAU,qBACb,6CAEJ,gCACI,mBAAGA,UAAU,8BACb,+CAEJ,gCACI,mBAAGA,UAAU,mBACb,wD,aClDPmG,GAAkB,qCAElBC,GAAQ,eACRC,GAAa,aAEbC,GACC,IADDA,GAEE,I,6BCDA,SAASC,KAAkB,IAAD,IAC7BC,EAAoB3G,aAAY,SAAAC,GAAK,OAAIA,EAAM2G,eAA/CD,gBACAE,EAAc7G,aAAY,SAAAC,GAAK,OAAIA,EAAM6G,iBAAzCD,UACAE,EAAgB/G,aAAY,SAAAC,GAAK,OAAIA,EAAM+G,mBAA3CD,YACAE,EAAgBjH,aAAY,SAAAC,GAAK,OAAIA,EAAM2G,eAA3CK,YACAlE,EAAkB/C,aAAY,SAAAC,GAAK,OAAIA,EAAM8F,kBAA7ChD,cACR,EAA0CnJ,oBAAS,GAAnD,mBAAOsN,EAAP,KAAsBC,EAAtB,KACA,EAA4CvN,mBAAS+M,EAAgBlB,aAArE,mBAAO2B,EAAP,KAAuBC,EAAvB,KACA,EAA8BzN,mBAAS+M,EAAgBlB,aAAvD,mBAAO6B,EAAP,KAAgBC,EAAhB,KAEA,EAAwD3N,oBAAS,GAAjE,mBAAO4N,EAAP,KAA6BC,EAA7B,KACQC,EAAgB1H,aAAY,SAAAC,GAAK,OAAIA,EAAM2G,eAA3Cc,YACR,EAAsD9N,mBAAS,IAA/D,mBAAO+N,EAAP,KAA4BC,EAA5B,KAEMrI,EAAWyD,cAEX6E,EAAYC,iBAAO,MAEzBzN,qBAAU,WACNkF,EAAS,CAAEC,KAAMpC,KACjBmC,EAAS,CAAEC,KAAMlC,KACjBiC,EAAS,CAAEC,KAAMhC,KACjB+B,EAAS,CAAEC,KAAMtB,OAClB,CAACqB,IAEJ,IAAMwI,EAAuB,SAACC,GAC1B,OAAIA,EAAK5H,KAAOsH,EAAYtH,GACjB,8BAAMoF,KAAgBwC,EAAKC,kBAG3B,gCAAK,cAAC,KAAD,CACRC,OAAQ,SAACC,EAAKC,GAAN,OAAiBP,EAAUQ,QAAUD,GAC7CE,aAAcZ,EAAYJ,QAC1BiB,KAAM,CACFrO,OAAQ,IACRsO,SAAS,EACTC,QAAS,CACL,iEACA,6CACA,wDAEJC,QAAS,0JAITC,cAAe,mEAEnBC,eAAgB,SAACC,EAAUT,GAAX,OAAsBR,EAAuBiB,MAE7D,wBAAQ1I,UAAU,kBAAkBa,QAAS,WACzCzB,EAAS,CACLC,KAAMjB,GACNuK,cAAe,CACXvF,OAAQoD,EAAgBpD,OACxBnD,GAAI4H,EAAK5H,GACT2I,eAAgBpB,MAN5B,kBAUA,wBAAQxH,UAAU,8BAA8Ba,QAAS,WACrDzB,EAAS,CACLC,KAAMlB,GACNoJ,YAAa,CACTtH,IAAK,EACLkH,QAAS,OALrB,wBA+NNxH,EAAe,SAACa,GAClB,MAAwBA,EAAEqI,OAAlBrK,EAAR,EAAQA,KAAMsK,EAAd,EAAcA,MACd1J,EAAS,CACLC,KAAMxB,GACNkL,WAAYrL,GACZc,OACAsK,WAIR,OACI,qBAAK9I,UAAU,aAAaC,GAAG,YAAYC,UAAW,EAAGC,KAAK,SAAS,kBAAgB,YAAY,cAAY,OAA/G,SACI,qBAAKH,UAAU,0BAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,sBAAKA,UAAU,eAAf,UACI,sBAAKA,UAAU,aAAf,UACI,mBAAGA,UAAU,wBACb,wBAAQxB,KAAK,SAASsK,MAAOtC,EAAgBwC,OAAQ1I,SAAUX,EAA/D,SACKmH,EAAYjD,KAAI,SAACoF,EAAI1F,GAClB,OAAO,wBAAoBuF,MAAOG,EAAGhJ,GAA9B,SAAmCgJ,EAAGC,UAAzB3F,QAI5B,+BAAOiD,EAAgB9B,cAE3B,sBAAKlK,MAAO,CAAEkJ,QAAS,QAAU1D,UAAU,aAA3C,UACI,gCACI,mBAAGA,UAAU,0BACb,sBAAMxF,MAAO,CAAEyG,aAAc,IAA7B,+BAEJ,gCACI,mBAAGjB,UAAU,eACb,sBAAMxF,MAAO,CAAEyG,aAAc,IAA7B,2BAEJ,mBAAGjB,UAAU,wBAAwBxF,MAAO,CAAEoG,OAAQ,aACtD,wBAAQvB,KAAK,SAASW,UAAU,QAAQ,eAAa,QAAQ,aAAW,QAAxE,SACI,sBAAM,cAAY,OAAlB,0BAIZ,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,mBAAGA,UAAU,QAAb,6CACA,sBAAKA,UAAU,cAAf,UACI,mBAAGxF,MAAO,CAAE0G,WAAY,QAAxB,yBA7IV,WACtB,IAAIiI,EAAiB,sBAAMnJ,UAAU,iBAAhB,kCAKrB,OAJIwG,EAAgBlB,cAChB6D,EAAiB,+BAAO9D,KAAgBmB,EAAgBlB,gBAGrD,8BACFyB,EAAgB,oCAAM,cAAC,KAAD,CACnBvI,KAAK,cACL2J,aAAc3B,EAAgBlB,YAC9B8C,KAAM,CACFD,aAAc,GACdiB,SAAU,sBACVrP,OAAQ,IACRsO,SAAS,EACTC,QAAS,CACL,iEACA,6CACA,wDAEJC,QAAS,0JAITC,cAAe,mEAEnBC,eAAgB,SAACtB,EAASc,GACtBb,EAAWD,MAIf,wBAAQnH,UAAU,sBAAsBa,QAAS,WAC7CzB,EAAS,CACLC,KAAMxB,GACNkL,WAAYrL,GACZc,KAAM,cACNsK,MAAO3B,IAEXH,GAAiB,IAPrB,kBASA,wBAAQhH,UAAU,sBAAsBa,QAAS,WAC7CzB,EAAS,CACLC,KAAMxB,GACNkL,WAAYrL,GACZc,KAAM,cACNsK,MAAO7B,IAEXD,GAAiB,IAPrB,sBASK,qBAAKnG,QAAS,WAEnBqG,EAAkBV,EAAgBlB,aAClC0B,GAAkBD,IAHb,SAKLoC,MAwFyBE,MAEL,sBAAKrJ,UAAU,UAAf,UACI,mBAAGxF,MAAO,CAAE0G,WAAY,OAAQJ,UAAW,QAA3C,sBACA,sBAAKd,UAAU,gBAAgBxF,MAAO,CAAEkJ,QAAS,QAAjD,UACI,qBAAK1D,UAAU,SAAf,SACI,qBAAKuC,IAAG,UAAES,KAAKC,MAAMqG,aAAaC,QAAQlD,YAAlC,aAAE,EAA8CtB,OAAQrC,IAAI,UAExE,qBAAK1C,UAAU,gBAAf,SA9MZ,WACxB,IAAIwJ,EAAqB,sBAAMxJ,UAAU,iBACrCxF,MAAO,CACHiP,QAAS,uBACTC,OAAQ,+BACRC,aAAc,MACd/I,OAAQ,WALS,8BAQzB,OAAO,8BACFyG,EAAuB,oCAAM,cAAC,KAAD,CAC1B7I,KAAK,UACL2J,aAAa,GACbC,KAAM,CACFgB,SAAU,sBACVrP,OAAQ,IACRsO,SAAS,EACTC,QAAS,CACL,iEACA,6CACA,wDAEJC,QAAS,0JAITC,cAAe,mEAGnBC,eAAgB,SAACtB,EAASc,GACtBb,EAAWD,MAGf,wBAAQnH,UAAU,kBAAkBa,QAAS,WACzCyG,GAAyBD,GAEzBjI,EAAS,CACLC,KAAMpB,GACN2L,cAAe,CACXxG,OAAQoD,EAAgBpD,OACxBwF,eAAgBzB,MAP5B,kBAYA,wBAAQnH,UAAU,8BAA8Ba,QAAS,WACrDyG,GAAyBD,IAD7B,uBAGK,qBAAKxG,QAAS,WACnByG,GAAyBD,IADpB,SAELmC,MA6JiCK,QA1QnB,WAEtB,IADA,IAAMC,EAAuB,GACpBC,EAAIvD,EAAgBwD,WAAWC,OAAS,EAAGF,GAAK,EAAGA,IACxDD,EAAqBI,KAAK,CACtBjK,GAAIuG,EAAgBwD,WAAWD,GAAG9J,GAClCzB,KAAMgI,EAAgBwD,WAAWD,GAAGvL,KACpCuG,OAAQyB,EAAgBwD,WAAWD,GAAGhF,OACtC+C,eAAgBtB,EAAgBwD,WAAWD,GAAGjC,iBAItD,OAAO,cAAC,KAAD,CACHqC,WAAW,WACX1I,KAAK,QACL2I,WAAY,CACRC,SAAU,GAEdC,WAAYR,EAEZS,WAAY,SAAA1C,GAAI,OACZ,cAAC,KAAK2C,KAAN,UACI,cAAC,KAAKA,KAAKC,KAAX,CACI1F,OAAQ,cAAC,KAAD,CAAQxC,IAAKsF,EAAK9C,SAC1B2F,MAAO,mBAAGlQ,MAAO,CAAE0G,WAAY,QAAUyJ,KAAM9C,EAAK8C,KAA7C,SAAoD9C,EAAKrJ,OAChE8G,YAAa,sBAAKtF,UAAU,YAAYxF,MAAO,CAAE+G,SAAU,QAA9C,UACRqG,EAAqBC,GACtB,gCACI,sBAAM7H,UAAU,oBAAoBxF,MAAO,CAAEoQ,YAAa,GACtD/J,QAAS,WACL4G,EAAuBI,EAAKC,gBAC5B1I,EAAS,CACLC,KAAMlB,GACNoJ,YAAa,CACTtH,GAAI4H,EAAK5H,GACTkH,QAASU,EAAKC,mBAP9B,kBADJ,SAcI,sBAAM9H,UAAU,oBAAoBxF,MAAO,CAAEkL,WAAY,GACrD7E,QAAS,WACLzB,EAAS,CACLC,KAAMnB,GACN0L,cAAe,CACXxG,OAAQoD,EAAgBpD,OACxByH,UAAWhD,EAAK5H,OANhC,6BApBA4H,EAAK5H,OAyPI6K,SAGT,sBAAK9K,UAAU,QAAf,UACI,sBAAKA,UAAU,SAAf,UACI,mBAAGxF,MAAO,CAAE0G,WAAY,OAAQH,aAAc,OAA9C,oBACA,wBAAQvG,MAAO,CAAE+G,SAAU,QAAU/C,KAAK,WAAWwB,UAAU,gBAAgB8I,MAAOtC,EAAgBzC,SAClGzD,SAAU,SAACE,GAAQb,EAAaa,IADpC,SAEKkG,EAAU7C,KAAI,SAACkH,EAAQxH,GACpB,OAAO,wBAAQuF,MAAOiC,EAAOhH,SAAtB,SAA6CgH,EAAO9G,YAAfV,WAIxD,sBAAKvD,UAAU,YAAYxF,MAAO,CAAEuG,aAAc,IAAlD,UACI,mBAAGvG,MAAO,CAAE0G,WAAY,OAAQH,aAAc,OAA9C,uBACA,sBAAKvG,MAAO,CAAEkJ,QAAS,OAAQsH,SAAU,QAAzC,UAEQxE,EAAgB3B,UAAUhB,KAAI,SAAC2B,EAAMjC,GACjC,OAAO,sBAAiBvD,UAAU,OAA3B,UACH,qBAAKA,UAAU,SAAf,SACI,qBAAKuC,IAAKiD,EAAKT,OAAQrC,IAAK8C,EAAKT,WAErC,oBAAG/E,UAAU,iBAAb,UACKwF,EAAKhH,KACN,mBAAGwB,UAAU,cAAcxF,MAAO,CAAEkL,WAAY,GAAK7E,QAAS,WAC1DzB,EAAS,CACLC,KAAMxB,GACNkL,WAAYnL,GACZqN,OAAQzF,EAAKvF,aAVZsD,MAiBzB,qBAAK/I,MAAO,CAAEkJ,QAAS,OAAQwH,WAAY,UAA3C,SACI,cAAC,KAAD,CACIC,QAAO,UAAEvI,EAAc2C,eAAhB,aAAE,EAAuB6F,QAAO,SAAAtG,GAAQ,IAAD,EAE1C,OAAe,KADN,UAAG0B,EAAgB3B,iBAAnB,aAAG,EAA2BwG,WAAU,SAAAC,GAAE,OAAIA,EAAGrL,KAAO6E,EAAImG,cAKtEpH,KAAI,SAACiB,EAAKvB,GACT,MAAO,CAAEuF,MAAOhE,EAAImG,OAAQM,MAAOzG,EAAItG,SAE3CgN,iBAAiB,QACjBhR,MAAO,CAAEd,MAAO,QAChB8E,KAAK,UACLsK,MAAM,aACN9I,UAAU,eACVyL,SAAU,SAAC3C,GACP,GAAc,MAAVA,EAAJ,CAGA,IAAI4C,EAAe9I,EAAc2C,QAAQoG,MAAK,SAAA7G,GAAG,OAAIA,EAAImG,SAAWW,SAAS9C,MAC7E4C,EAAY,2BAAQA,GAAR,IAAsBzL,GAAIyL,EAAaT,SAEnD7L,EAAS,CACLC,KAAMxB,GACNkL,WAAYpL,GACZ+N,6BASxB,sBAAK1L,UAAU,WAAWxF,MAAO,CAAEuG,aAAc,IAAjD,UACI,mBAAGvG,MAAO,CAAE0G,WAAY,OAAQH,aAAc,OAA9C,sBACA,wBAAQvC,KAAK,aAAawB,UAAU,eAAe8I,MAAOtC,EAAgBqF,WAAYvL,SAAU,SAACE,GAC7Fb,EAAaa,IADjB,SAGKoG,EAAY/C,KAAI,SAACgE,EAAMtE,GACpB,OAAO,wBAAoBuF,MAAOjB,EAAKgE,WAAhC,SAA6ChE,EAAKjD,UAArCrB,WAIhC,sBAAKvD,UAAU,WAAf,UACI,mBAAGxF,MAAO,CAAE0G,WAAY,OAAQH,aAAc,OAA9C,uCACA,uBAAOvC,KAAK,mBAAmBa,KAAK,OAAOW,UAAU,iBAAiB8I,MAAOtC,EAAgBsF,iBAAkBxL,SAAU,SAACE,GACtHb,EAAaa,SAGrB,sBAAKR,UAAU,gBAAf,UACI,+CArLT,WAEvB,IAAQ+L,EAA6CvF,EAA7CuF,kBAAmBC,EAA0BxF,EAA1BwF,sBAErB/M,EAAMgN,OAAOF,GAAqBE,OAAOD,GACzCE,EAAUvS,KAAKC,MAAMqS,OAAOF,GAAqB9M,EAAM,KAE7D,OAAO,gCACH,sBAAKzE,MAAO,CAAEkJ,QAAS,QAAvB,UACI,mBAAG1D,UAAU,gBACb,sBAAKxF,MAAO,CAAEd,MAAO,QAArB,UAEI,qBAAKsG,UAAU,WAAf,SACI,qBAAKA,UAAU,eAAeG,KAAK,cAAc3F,MAAO,CAAEd,MAAM,GAAD,OAAKwS,EAAL,MAAmB,gBAAeD,OAAOF,GAAoB,gBAAeE,OAAOD,GAAwB,gBAAe/M,MAE7L,sBAAKzE,MAAO,CAAEkJ,QAAS,OAAQyI,eAAgB,iBAA/C,UACI,oBAAGnM,UAAU,SAAb,UAAuBiM,OAAOD,GAA9B,cACA,oBAAGhM,UAAU,gBAAb,UAA8BiM,OAAOD,GAArC,0BAMZ,sBAAKhM,UAAU,MAAf,UAEI,qBAAKA,UAAU,QAAf,SACI,uBAAOA,UAAU,eAAexB,KAAK,oBAAoB8B,SAAUX,MAEvE,qBAAKK,UAAU,QAAf,SACI,uBAAOA,UAAU,eAAexB,KAAK,wBAAwB8B,SAAUX,YAyJlDyM,MAEL,qBAAK5R,MAAO,CAAEuH,MAAO,WAArB,mCACA,qBAAKvH,MAAO,CAAEuH,MAAO,WAArB,0DC1apC,I,0EAJQsK,GAAWC,KAAXD,OAEFE,GAAW,GAERxC,GAAI,GAAIA,GAAI,GAAIA,KACrBwC,GAASrC,KAAK,cAACmC,GAAD,UAAkCtC,GAAE/E,SAAS,IAAM+E,IAAtCA,GAAE/E,SAAS,IAAM+E,KAoMhD,IAAMyC,GAAgBlO,YAAW,CAC7BmO,oBAAoB,EACpBlO,iBAAkB,SAAC/E,GAAW,IAAD,QACjBkT,EAA6DlT,EAA7DkT,oBAAqB5F,EAAwCtN,EAAxCsN,YAAaF,EAA2BpN,EAA3BoN,YAE1C,MAAO,CACHlC,SAAU,GACVY,YAAa,GACbvB,SAAQ,UALyDvK,EAAdkN,UAK/B,UAAZ,aAAE,EAAc3C,SACxB+H,iBAAkB,EAClBC,kBAAmB,EACnBC,sBAAuB,EACvB7I,UAAS,UAAEuJ,EAAoB,UAAtB,aAAE,EAAwBzM,GACnC+I,OAAM,UAAElC,EAAY,UAAd,aAAE,EAAgB7G,GACxB4L,WAAU,UAAEjF,EAAY,UAAd,aAAE,EAAgBiF,WAC5Bc,cAAe,KAGvB/N,iBAAkBC,MAAaC,MAAM,IAIrCI,aAAc,SAAC0N,EAAD,GAAuC,IAA5BpT,EAA2B,EAA3BA,MAA2B,EAApB2F,cAC5B3F,EAAM4F,SAAS,CACXC,KAAM9B,GACNsP,WAAYD,KAGpBnN,YAAa,kBA5BKnB,EAjMtB,SAAwB9E,GAGpB,IAAQkT,EAAwB7M,aAAY,SAAAC,GAAK,OAAIA,EAAM8F,kBAAnD8G,oBACA5F,EAAgBjH,aAAY,SAAAC,GAAK,OAAIA,EAAM2G,eAA3CK,YACAF,EAAgB/G,aAAY,SAAAC,GAAK,OAAIA,EAAM+G,mBAA3CD,YACAF,EAAc7G,aAAY,SAAAC,GAAK,OAAIA,EAAM6G,iBAAzCD,UACAoG,EAAYjN,aAAY,SAAAC,GAAK,OAAIA,EAAMiN,eAAvCD,QAGF1N,EAAWyD,cAGXmK,EAAcF,EAAQjJ,KAAI,SAACgE,EAAMtE,GACnC,MAAO,CAAEuF,MAAOjB,EAAKoD,OAAQM,MAAO1D,EAAKrJ,SAIzCmB,EAGAnG,EAHAmG,aACAT,EAEA1F,EAFA0F,aACA+N,EACAzT,EADAyT,cAGJ,EAAeC,IAAMzT,SAAS,WAAvBgI,EAAP,oBAEA,EAAwChI,mBAAS,CAC7CsS,kBAAmB,EACnBC,sBAAuB,IAF3B,mBAAOmB,EAAP,KAAqBC,EAArB,KAqBA,OAbAlT,qBAAU,WACNkF,EAAS,CAAEC,KAAM7D,IACjB4D,EAAS,CAAEC,KAAMhC,KACjB+B,EAAS,CAAEC,KAAMlC,KACjBiC,EAAS,CAAEC,KAAMpC,KACjBmC,EAAS,CAAEC,KAAMhD,EAAegR,QAAS,KAGzCjO,EAAS,CAAEC,KAAMrD,EAAwBsR,eAAgBpO,MAC1D,CAACE,EAAUF,IAKV,sBAAKc,UAAU,YAAf,UACI,sBAAKA,UAAU,aAAaI,SAAUlB,EAAtC,UACI,wCACA,wBAAQV,KAAK,YAAYwB,UAAU,eAAeM,SAAU,SAACE,GAEzD,IAAMsI,EAAUtI,EAAEqI,OAAZC,MACN1J,EAAS,CACLC,KAAM5C,GACN8Q,UAAWzE,IAGfmE,EAAc,YAAazM,EAAEqI,OAAOC,QARxC,SAUK4D,EAAoB7I,KAAI,SAAC2J,EAASjK,GAC/B,OAAO,wBAAoBuF,MAAO0E,EAAQvN,GAAnC,SAAwCuN,EAAQrI,aAAnC5B,WAIhC,sBAAKvD,UAAU,aAAf,UACI,0CACA,uBAAOxB,KAAK,WAAWwB,UAAU,eAAeM,SAAUX,OAE9D,sBAAKK,UAAU,aAAf,UACI,uCACA,wBAAQxB,KAAK,WAAWwB,UAAU,eAAeM,SAAUX,EAA3D,SACK+G,EAAU7C,KAAI,SAAC4J,EAAYlK,GACxB,OAAO,wBAAoBuF,MAAO2E,EAAW1J,SAAtC,SAAiD0J,EAAWxJ,YAA/CV,WAIhC,qBAAKvD,UAAU,aAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,yCACA,wBAAQxB,KAAK,aAAawB,UAAU,eAAeM,SAAUX,EAA7D,SACKiH,EAAY/C,KAAI,SAACe,EAAUrB,GACxB,OAAO,wBAAoBuF,MAAOlE,EAASiH,WAApC,SACFjH,EAASA,UADMrB,WAMhC,sBAAKvD,UAAU,QAAf,UACI,0CACA,wBAAQA,UAAU,eAAexB,KAAK,SAAS8B,SAAUX,EAAzD,SACKmH,EAAYjD,KAAI,SAACqF,EAAU3F,GACxB,OAAO,wBAAoBuF,MAAOI,EAASjJ,GAApC,SAAyCiJ,EAASA,UAArC3F,gBAMxC,qBAAKvD,UAAU,aAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,0CACA,cAAC,KAAD,CACI0N,KAAK,WACLjM,KAAMA,EACN0J,QAAS6B,EACT3M,YAAY,gBACZmL,iBAAiB,QACjBlL,SAAU,SAACsM,GACPK,EAAc,gBAAiBL,IAEnCnB,SAAU,SAAC3C,KAEXtO,MAAO,CAAEd,MAAO,QAXpB,SA1DH,KAyEG,qBAAKsG,UAAU,WAAf,SACI,sBAAKA,UAAU,SAAf,UACI,kDACA,uBAAOX,KAAK,SAASL,IAAI,IAAIR,KAAK,mBAAmBmP,aAAa,IAAI3N,UAAU,eAAejG,OAAO,KAAKuG,SAAUX,YAIjI,sBAAKK,UAAU,QAAf,UACI,8CAEA,cAAC,KAAD,CAAQ2N,aAAc,GAAI7E,MAAOqE,EAAapB,kBAAmB9M,IAAKgN,OAAOkB,EAAapB,mBAAqBE,OAAOkB,EAAanB,yBACnI,sBAAKhM,UAAU,MAAf,UACI,sBAAKA,UAAU,mCAAf,UAAmDmN,EAAapB,kBAAhE,cACA,sBAAK/L,UAAU,oCAAf,UAAoDmN,EAAanB,sBAAjE,oBAEJ,sBAAKhM,UAAU,MAAMxF,MAAO,CAAEsG,UAAW,GAAzC,UACI,sBAAKd,UAAU,QAAf,UACI,2CACA,uBAAOX,KAAK,SAASsO,aAAa,IAAI3O,IAAI,IAAIgB,UAAU,eAAexB,KAAK,oBAAoB8B,SAAU,SAACE,GACvG4M,EAAgB,2BACTD,GADQ,IAEXpB,kBAAmBvL,EAAEqI,OAAOC,SAGhCmE,EAAc,oBAAqBzM,EAAEqI,OAAOC,aAIpD,sBAAK9I,UAAU,QAAf,UACI,+CACA,uBAAOX,KAAK,SAASsO,aAAa,IAAI3O,IAAI,IAAIgB,UAAU,eAAexB,KAAK,wBAAwB8B,SAAU,SAACE,GAC3G4M,EAAgB,2BACTD,GADQ,IAEXnB,sBAAuBxL,EAAEqI,OAAOC,SAGpCmE,EAAc,wBAAyBzM,EAAEqI,OAAOC,wBASxE,sBAAK9I,UAAU,aAAf,UACI,4CACA,cAAC,KAAD,CACIxB,KAAK,cACL2J,aAAa,GACbC,KAAM,CACFgB,SAAU,sBACVrP,OAAQ,IACRsO,SAAS,EACTC,QAAS,CACL,iEACA,6CACA,wDAEJC,QAAS,0JAITC,cAAe,mEAGnBC,eAAgB,SAACtB,EAASc,GACtBgF,EAAc,cAAe9F,eAgDtChG,gBATS,SAACrB,GACrB,MAAO,CACH4M,oBAAqB5M,EAAM8F,eAAe8G,oBAC1C5F,YAAahH,EAAM2G,YAAYK,YAC/BF,YAAa9G,EAAM+G,gBAAgBD,YACnCF,UAAW5G,EAAM6G,cAAcD,aAIxBvF,CAAyBqL,I,UCzP3BoB,GAAUC,eCcfzU,GAAUC,IAAVD,MACO,SAAS0U,KAAoB,IAAD,IACnC1O,EAAWyD,cACf,EAA0BpJ,mBAAS,CAC/BsU,WAAW,IADf,mBAAOjO,EAAP,KAAckO,EAAd,KA2BA,OACI,8BACI,eAAC,GAAD,CAAOC,QAAS,KAAMC,aAAW,EAACH,UAAWjO,EAAMiO,UAAWvT,MAAO,CAAET,OAAQ,SAA/E,UACI,qBAAKiG,UAAU,kBAAkBa,QA3B9B,WACXmN,EAAS,CACLD,WAAYjO,EAAMiO,aAyBd,SAAmD,cAACI,GAAA,EAAD,CAAc3T,MAAO,CAAEoG,OAAQ,UAAWmB,MAAO,OAAQR,SAAU,QACtH,sBAAKvB,UAAU,YAAf,UACKsJ,aAAaC,QAAQlD,IAClB,cAAC,KAAD,CAAQ9D,IAAG,UAAES,KAAKC,MAAMqG,aAAaC,QAAQlD,YAAlC,aAAE,EAA8CtB,OAAQrC,IAAI,WACrE,cAAC,KAAD,CAAQV,KAAM,cAACL,EAAA,EAAD,MAEpB,sBAAM3B,UAAU,OAAOxF,MAAO,CAAE0G,WAAY,OAAQa,MAAO,SAA3D,mBAAuEiB,KAAKC,MAAMqG,aAAaC,QAAQlD,YAAvG,aAAuE,EAA8C7H,UAEzH,eAAC,KAAD,CAAM4P,MAAM,OAAOV,KAAK,SAASW,oBAAqB,CAAC,KAAvD,UACI,cAAC,KAAK7D,KAAN,CAAmBxI,KAAM,cAACsM,GAAA,EAAD,CAAc9T,MAAO,CAAE+G,SAAU,MACtDV,QAAS,WACDyI,aAAaC,QAAQlD,KAAeiD,aAAaC,QAAQnD,IACzDhH,EAAS,CACLC,KAAMtD,EACN3B,UAAW,cAAC,GAAD,IACXsQ,MAAO,gBAGXkD,GAAQ1D,KAAK,WATzB,SAYI,sBAAMlK,UAAU,OAAhB,2BAZW,KAcf,cAAC,KAAKwK,KAAN,CAAmBxI,KAAM,cAACuM,GAAA,EAAD,CAAgB/T,MAAO,CAAE+G,SAAU,MAA5D,mBAAe,KA3CvB+H,aAAaC,QAAQlD,KAAeiD,aAAaC,QAAQnD,IAClD,cAAC,KAAKoE,KAAN,CAAmBxI,KAAM,cAACwM,GAAA,EAAD,CAAgBhU,MAAO,CAAE+G,SAAU,MAC/DV,QAAS,WACLyI,aAAamF,WAAWpI,IACxBiD,aAAamF,WAAWrI,IACxBwH,GAAQ1D,KAAK,WAJd,mBAAe,KAUf,cAAC,KAAKM,KAAN,CAAmBxI,KAAM,cAAC0M,GAAA,EAAD,CAAelU,MAAO,CAAE+G,SAAU,MAC9DV,QAAS,WAAQ+M,GAAQ1D,KAAK,WAD3B,kBAAe,a,qBC9BrByE,GAAoB,SAACnV,GAE9B,IAAQY,EAA4BZ,EAA5BY,UAAcwU,EAAtB,YAAoCpV,EAApC,IACA,OAAO,cAAC,IAAD,2BAAWoV,GAAX,IAAsBtU,OAAQ,SAACC,GAClC,OAAO,mCACH,sBAAKyF,UAAU,OAAf,UACI,cAAC8N,GAAD,IACA,cAAC/H,GAAD,IACI,cAAC3L,EAAD,eAAeG,IACnB,cAACgM,GAAD,cC2DhB,IAAMsI,GAAoBvQ,YAAW,CACjCC,iBAAkB,SAAC/E,GAAW,IAAD,EACzB,MAAO,CACH2L,YAAa,GACbG,YAAa,GACbwJ,WAAU,UAAEtV,EAAMuV,mBAAmB,UAA3B,aAAE,EAA6B9O,KAGjDrB,iBAAkBC,MAAaC,MAAM,IAIrCI,aAAc,SAAC0N,EAAD,GAAuC,IAA5BpT,EAA2B,EAA3BA,MAA2B,EAApB2F,cAC5B3F,EAAM4F,SAAS,CACXC,KAAMpE,EACN+T,WAAYpC,KAGpBnN,YAAa,uBAlBSnB,EApE1B,SAAuB9E,GACnB,IAAMuV,EAAqBlP,aAAY,SAAAC,GAAK,OAAIA,EAAMmP,uBAAuBF,sBACvE3P,EAAWyD,cAGblD,EAGAnG,EAHAmG,aACAsN,EAEAzT,EAFAyT,cACA/N,EACA1F,EADA0F,aAiBJ,OAbAhF,qBAAU,WACFoP,aAAaC,QAAQlD,KAAeiD,aAAaC,QAAQnD,IAEzDhH,EAAS,CAAEC,KAAMtE,IAEjB6S,GAAQ1D,KAAK,aASjB,sBAAKlK,UAAU,gBAAf,UACI,+CACA,uBAAMA,UAAU,YAAYI,SAAUlB,EAAcoB,SAAUX,EAA9D,UACI,sBAAKK,UAAU,aAAf,UACI,qCACA,uBAAOA,UAAU,eAAexB,KAAK,mBAEzC,sBAAKwB,UAAU,aAAf,UACI,4CACA,cAAC,KAAD,CACIxB,KAAK,cACL2J,aAAa,GACbC,KAAM,CACFgB,SAAU,sBACVrP,OAAQ,IACRsO,SAAS,EACTC,QAAS,CACL,iEACA,6CACA,wDAEJC,QAAS,0JAITC,cAAe,mEAEnBC,eAhCO,SAACtB,EAASc,GACjCgF,EAAc,cAAe9F,SAkCrB,qBAAKnH,UAAU,aAAf,SACI,wBAAQxB,KAAK,aAAawB,UAAU,eAAeM,SAAUX,EAA7D,SACKoP,EAAmBlL,KAAI,SAACgE,EAAMtE,GAC3B,OAAO,wBAAQuF,MAAOjB,EAAK5H,GAApB,SAAqC4H,EAAKqH,qBAAb3L,UAIhD,wBAAQvD,UAAU,0BAA0BX,KAAK,SAAjD,qCAmCD8B,gBAPS,SAACrB,GAAD,MAAY,CAEhCiP,mBAAoBjP,EAAMmP,uBAAuBF,sBAKtC5N,CAAyB0N,I,sECfxC,IAAMM,GAAkB7Q,YAAW,CAC/BmO,oBAAoB,EACpBlO,iBAAkB,SAAC/E,GACf,IAAQ4V,EAAgB5V,EAAhB4V,YAER,MAAO,CACHnP,GAAE,OAAEmP,QAAF,IAAEA,OAAF,EAAEA,EAAanP,GACjBkF,YAAaiK,EAAYjK,YACzBG,YAAa8J,EAAY9J,YACzBwJ,WAAYM,EAAYN,aAGhClQ,iBAAkBC,MAAaC,MAAM,IAIrCI,aAAc,SAAC0N,EAAD,GAAuC,IAA5BpT,EAA2B,EAA3BA,MAA2B,EAApB2F,cAC5B3F,EAAM4F,SAAS,CACXC,KAAMjE,EACNiU,cAAezC,KAGvBnN,YAAa,mBAtBOnB,EAlFxB,SAAyB9E,GACrB,IAAMkO,EAAYC,iBAAO,MACnBoH,EAAqBlP,aAAY,SAAAC,GAAK,OAAIA,EAAMmP,uBAAuBF,sBACvE3P,EAAWyD,cAGb+J,EAGApT,EAHAoT,OACAjN,EAEAnG,EAFAmG,aACAT,EACA1F,EADA0F,aAeJ,OAVAhF,qBAAU,WAENkF,EAAS,CAAEC,KAAMtE,IAGjBqE,EAAS,CAAEC,KAAMxD,EAAyByR,eAAgBpO,MAG3D,CAACE,EAAUF,IAGV,sBAAMc,UAAU,kBAAkBI,SAAUlB,EAA5C,SACI,sBAAKc,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,SAEI,sBAAKA,UAAU,aAAf,UACI,mBAAGA,UAAU,mBAAb,wBACA,uBAAO8I,MAAO8D,EAAO3M,GAAIqP,UAAQ,EAACtP,UAAU,eAAexB,KAAK,YAKxE,qBAAKwB,UAAU,QAAf,SACI,sBAAKA,UAAU,aAAf,UACI,mBAAGA,UAAU,mBAAb,0BACA,uBAAO8I,MAAO8D,EAAOzH,YAAanF,UAAU,eAAexB,KAAK,cAAc8B,SAAUX,SAGhG,qBAAKK,UAAU,QAAf,SACI,sBAAKA,UAAU,aAAf,UACI,mBAAGA,UAAU,mBAAb,8BACA,wBAAQA,UAAU,eAAexB,KAAK,aAAasK,MAAO8D,EAAOkC,WAAYxO,SAAUX,EAAvF,gBACKoP,QADL,IACKA,OADL,EACKA,EAAoBlL,KAAI,SAACgE,EAAMtE,GAC5B,OAAO,wBAAoBuF,MAAOjB,EAAK5H,GAAhC,SACF4H,EAAKqH,qBADU3L,aAOpC,qBAAKvD,UAAU,SAAf,SACI,sBAAKA,UAAU,aAAf,UACI,mBAAGA,UAAU,mBAAb,yBACA,cAAC,KAAD,CACI+H,OAAQ,SAACC,EAAKC,GAAN,OAAiBP,EAAUQ,QAAUD,GAC7CE,aAAcyE,EAAOtH,YACrB8C,KAAM,CACFrO,OAAQ,IACRsO,SAAS,EACTC,QAAS,CACL,iEACA,6CACA,wDAEJC,QAAS,0JAITC,cAAe,mEAEnBC,eAAgB,SAACC,EAAUT,GAAX,OAAsB2E,EAAOtH,YAAcoD,kBA0CxEvH,gBARS,SAACrB,GAAD,MAAY,CAEhCsP,YAAatP,EAAM8F,eAAewJ,eAMvBjO,CAAyBgO,I,qBCpHzB,SAASI,KACpB,IAAMC,EAAc3P,aAAY,SAAAC,GAAK,OAAIA,EAAM8F,eAAe4J,eACtDC,EAAe5P,aAAY,SAAAC,GAAK,OAAIA,EAAMiN,eAA1C0C,WACFrQ,EAAWyD,cAEX6M,EAAY/H,iBAAO,MACzB,EAA0BlO,mBAAS,IAAnC,mBAAOqP,EAAP,KAAc6G,EAAd,KACAzV,qBAAU,WACNkF,EAAS,CAAEC,KAAMlE,MAElB,CAACiE,IAGJ,IAAMwQ,EAAU,CACZ,CACIlF,MAAO,KACPmF,UAAW,KACXpP,IAAK,KACLqP,OAAQ,SAACC,EAAOC,GACZ,OAAOD,EAAM9P,GAAK+P,EAAM/P,IAE5BgQ,eAAgB,CAAC,YAGrB,CACIvF,MAAO,UACPmF,UAAW,cACXpP,IAAK,cACLnG,OAAQ,SAAC4V,EAAMC,EAAQ5M,GACnB,OAAO,cAAC,KAAD,CAAS0C,GAAE,yBAAoBkK,EAAOlQ,IAAtC,SAA6CiQ,KAExDJ,OAAQ,SAACC,EAAOC,GAAW,IAAD,IAClBI,EAAY,UAAGJ,EAAM7K,mBAAT,aAAG,EAAmBkL,OAAOC,cAE7C,OADgB,UAAGP,EAAM5K,mBAAT,aAAG,EAAmBkL,OAAOC,eAC1BF,GACP,EAEL,IAMf,CACI1F,MAAO,WACPmF,UAAW,eACXpP,IAAK,eACLqP,OAAQ,SAACC,EAAOC,GAAW,IAAD,IAClBO,EAAa,UAAGP,EAAMQ,oBAAT,aAAG,EAAoBH,OAAOC,cAE/C,OADiB,UAAGP,EAAMS,oBAAT,aAAG,EAAoBH,OAAOC,eAC3BC,GACR,EAEL,IAIf,CACI7F,MAAO,UACPjK,IAAK,UACLnG,OAAQ,SAAC4V,EAAMC,EAAQ5M,GAAW,IAAD,EAC7B,OAAO,cAAC,KAAD,CAAKxB,MAAM,QAAX,mBAAoBoO,EAAOM,eAA3B,aAAoB,EAAgBjS,QAE/CsR,OAAQ,SAACC,EAAOC,GAAW,IAAD,IAClBU,EAAQ,UAAGV,EAAMS,eAAT,aAAG,EAAejS,KAAK6R,OAAOC,cAE1C,OADY,UAAGP,EAAMU,eAAT,aAAG,EAAejS,KAAK6R,OAAOC,eAC3BI,GACH,EAEL,IAIf,CACIhG,MAAO,UACPjK,IAAK,UACLnG,OAAQ,SAAC4V,EAAMC,EAAQ5M,GAAW,IAAD,IAC7B,OAAO,0CACF4M,EAAO5K,eADL,aACF,EAAgBoL,MAAM,EAAG,GAAG9M,KAAI,SAAC+M,EAAQrN,GACtC,OACI,cAAC,KAAD,CAAqBsN,UAAU,MAAMnG,MAAM,UAAUvD,QAAS,WAAO,IAAD,EAChE,OAAO,wBAAOnH,UAAU,QAAjB,UACH,gCACI,+BACI,oCACA,wCACA,sCACA,4BAGR,0CACKmQ,EAAO5K,eADZ,aACK,EAAgB1B,KAAI,SAACgE,EAAMtE,GACxB,OAAO,+BACH,6BAAKsE,EAAKoD,SACV,6BAAI,qBAAK1I,IAAKsF,EAAK9C,OAAQrL,MAAM,KAAKK,OAAO,KAAKS,MAAO,CAAEmP,aAAc,QAAUjH,IAAI,OACvF,6BAAKmF,EAAKrJ,OACV,6BACI,cAAC,IAAD,CAAQqC,QAAS,WACbzB,EAAS,CACLC,KAAM7C,GACNsU,YAAa,CACT7F,OAAQpD,EAAKoD,OACb9H,UAAWgN,EAAOlQ,OAI3BD,UAAU,uBAAuBlB,MAAM,SAT1C,sBALQyE,YAZhC,SAiCI,cAAC,KAAD,CAAoBhB,IAAKqO,EAAO7L,QAAnBxB,IAjCHA,OAsCrB,UAAA4M,EAAO5K,eAAP,eAAgB0E,QAAS,EAAI,cAAC,KAAD,kBAAuB,GAErD,cAAC,KAAD,CAAS4G,UAAU,WAAWnG,MAAO,WAAYvD,QAAS,WACtD,OAAO,cAAC,KAAD,CAEHgE,QAAO,OAAEsE,QAAF,IAAEA,OAAF,EAAEA,EAAY5L,KAAI,SAAC2B,EAAMjC,GAC5B,MAAO,CAAEgI,MAAO/F,EAAKhH,KAAMsK,MAAOtD,EAAKyF,OAAOjG,eAGlD8D,MAAOA,EAEPxI,SAAU,SAAC4P,GACPP,EAASO,IAGbzE,SAAU,SAACsF,EAAaC,GACpBrB,EAASqB,EAAOzF,OAChBnM,EAAS,CACLC,KAAM9C,EACNuU,YAAa,CACT,UAAaX,EAAOlQ,GACpB,OAAU8Q,MAMtBvW,MAAO,CAAEd,MAAO,QAAUuX,SAAU,SAACnI,GAC7B4G,EAAUxH,SACVgJ,aAAaxB,EAAUxH,SAE3BwH,EAAUxH,QAAUiJ,YAAW,WAC3B/R,EAAS,CACLC,KAAMhD,EACNgR,QAASvE,MAGd,SAEZmF,QAAQ,QArCX,SAsCI,cAAC,IAAD,CAAQnP,MAAM,SAAd,sBAMhB,CACI4L,MAAO,SACPmF,UAAW,GACXpP,IAAK,IACLnG,OAAQ,SAAC4V,EAAMC,EAAQ5M,GACnB,OAAO,gCACH,wBAAQvD,UAAU,uBAAuBa,QAAS,WAQ9CzB,EAPe,CACXC,KAAMzD,EACNxB,UAAW,cAAC,GAAD,IACXsQ,MAAO,iBAUXtL,EAJ0B,CACtBC,KAAMvD,EACNsV,iBAAkBjB,KAZ1B,SAgBI,cAACkB,GAAA,EAAD,CAAc7W,MAAO,CAAE+G,SAAU,QAErC,cAAC,KAAD,CACImJ,MAAM,uCACN4G,UAAW,WACPlS,EAAS,CAAEC,KAAMhE,EAAqBkS,UAAW4C,EAAOlQ,MAG5DsR,OAAO,MACPC,WAAW,KAPf,SASI,wBAAQxR,UAAU,iBAAlB,SACI,cAACyR,GAAA,EAAD,CAAgBjX,MAAO,CAAE+G,SAAU,gBAS3D,OACI,sBAAKvB,UAAU,sBAAf,UACI,oDACA,cAAC,KAAD,CAAO4P,QAASA,EAAS8B,OAAQ,KAAMpH,WAAYkF,EAAalP,SAAU,kB,cCpNvE,SAASqR,GAAgBnY,GACpC,MAAmEqG,aAAY,SAAAC,GAAK,OAAIA,EAAM8R,0BAAtFC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,uBAAwBC,EAAzC,EAAyCA,eAAgBrH,EAAzD,EAAyDA,MACnDtL,EAAWyD,cAEXmP,EAAU,WACZ5S,EAAS,CAAEC,KAAM1D,KAGrB,OACI,mCACI,cAAC,KAAD,CACI+O,MAAOA,EACPhR,MAAO,IACPsY,QAASA,EACTH,QAASA,EACTI,UAAW,CAAEC,cAAe,IAE5BC,OACI,sBACI3X,MAAO,CACH4X,UAAW,SAFnB,UAKI,cAAC,IAAD,CAAQvR,QAASmR,EAASxX,MAAO,CAAEoQ,YAAa,GAAhD,oBAGA,cAAC,IAAD,CAAQ/J,QAASkR,EAAgB1S,KAAK,UAAtC,uBAhBZ,SAuBKyS,M,cCpCF,SAASO,KACpB,OACI,cAAC,KAAD,CACItH,OAAO,MACPL,MAAM,MACN4H,SAAS,8CACTC,MAAO,cAAC,IAAD,CAAQlT,KAAK,UAAUwB,QAAS,WAAQ+M,GAAQ1D,KAAK,uBAArD,yB,cC4DnB,IAAMsI,GAAelU,YAAW,CAC5BmO,oBAAoB,EACpBlO,iBAAkB,SAAC/E,GACf,IAAQiZ,EAAajZ,EAAbiZ,SAER,MAAO,CACHxS,GAAE,OAAEwS,QAAF,IAAEA,OAAF,EAAEA,EAAUxH,OACd1L,SAAQ,OAAEkT,QAAF,IAAEA,OAAF,EAAEA,EAAUlT,SACpBb,MAAK,OAAE+T,QAAF,IAAEA,OAAF,EAAEA,EAAU/T,MACjBF,KAAI,OAAEiU,QAAF,IAAEA,OAAF,EAAEA,EAAUjU,KAChBC,YAAW,OAAEgU,QAAF,IAAEA,OAAF,EAAEA,EAAUhU,cAG/BG,iBAAkBC,MAAaC,MAAM,CACjCN,KAAMK,MAAaE,SAAS,qBAC5BN,YAAaI,MAAaE,SAAS,6BACnCL,MAAOG,MAAaE,SAAS,sBAAsBL,MAAM,uBAE7DQ,aAAc,SAAC0N,EAAD,GAAuC,IAA5BpT,EAA2B,EAA3BA,OACrB2F,EADgD,EAApBA,gBACd,GACd3F,EAAM4F,SAAS,CACXC,KAAMvC,GACN4V,WAAY9F,KAGpBnN,YAAa,gBAzBInB,EA9DrB,SAAsB9E,GAClB,IAAM4F,EAAWyD,cAGbnD,EAIAlG,EAJAkG,OACAkN,EAGApT,EAHAoT,OACAjN,EAEAnG,EAFAmG,aACAT,EACA1F,EADA0F,aASJ,OALAhF,qBAAU,WAENkF,EAAS,CAAEC,KAAMpD,EAAsBqR,eAAgBpO,MACxD,CAACE,EAAUF,IAGV,uBAAMc,UAAU,kBAAkBI,SAAUlB,EAA5C,UACI,qBAAKc,UAAU,aAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,QAAf,UACI,mBAAGA,UAAU,mBAAb,qBACA,uBAAO8I,MAAO8D,EAAO3M,GAAIqP,UAAQ,EAACtP,UAAU,eAAexB,KAAK,cAK5E,qBAAKwB,UAAU,aAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,mBAAGA,UAAU,mBAAb,kBACA,uBAAO8I,MAAO8D,EAAOpO,KAAMwB,UAAU,eAAexB,KAAK,OAAO8B,SAAUX,IAC1E,qBAAKK,UAAU,cAAf,SAA8BN,EAAOlB,UAEzC,sBAAKwB,UAAU,QAAf,UACI,mBAAGA,UAAU,mBAAb,0BACA,uBAAO8I,MAAO8D,EAAOnO,YAAaD,KAAK,cAAcwB,UAAU,eAC3DO,UAAW,SAACC,GACDA,EAAEC,KAAO,GAAKD,EAAEC,KAAO,GACZ,cAAVD,EAAEC,KACQ,cAAVD,EAAEC,KACQ,eAAVD,EAAEC,KACQ,QAAVD,EAAEC,KACFD,EAAEE,UAAsB,MAAVF,EAAEC,KAAyB,MAAVD,EAAEC,KAAyB,MAAVD,EAAEC,KAAyB,MAAVD,EAAEC,MACvED,EAAEG,kBAEPL,SAAUX,IACjB,qBAAKK,UAAU,cAAf,SAA8BN,EAAOjB,sBAKjD,sBAAKuB,UAAU,aAAf,UACI,mBAAGA,UAAU,mBAAb,mBACA,uBAAO8I,MAAO8D,EAAOlO,MAAOF,KAAK,QAAQwB,UAAU,eAAeM,SAAUX,IAC5E,qBAAKK,UAAU,cAAf,SAA8BN,EAAOhB,iBA2CtCyC,gBARS,SAACrB,GAAD,MAAY,CAEhC2S,SAAU3S,EAAMiN,YAAY0F,YAMjBtR,CAAyBqR,IC/CxC,IAAMG,GAAiBrU,YAAW,CAC9BC,iBAAkB,iBAAO,CACrBC,KAAM,GACNC,YAAa,GACbC,MAAO,GACPC,SAAU,KAEdC,iBAAkBC,MAAaC,MAAM,CACjCN,KAAMK,MAAaE,SAAS,qBAC5BN,YAAaI,MAAaE,SAAS,6BACnCL,MAAOG,MAAaE,SAAS,sBAAsBL,MAAM,qBACzDC,SAAUE,MAAaG,IAAI,EAAG,0CAA0CC,IAAI,GAAI,4CAEpFC,aAAc,cAAuE,IAApEV,EAAmE,EAAnEA,KAAMC,EAA6D,EAA7DA,YAAaC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,SAAcnF,EAA2B,EAA3BA,OACrD2F,EADgF,EAApBA,gBAC9C,GACd3F,EAAM4F,SAAS,CACXC,KAAMrC,GACNsC,WAAY,CACRZ,MAAOA,EACPa,SAAUZ,EACVH,KAAMA,EACNC,YAAaA,MAIzBgB,YAAa,cAzBMnB,EAnDvB,SAAwB9E,GACpB,IAAM4F,EAAWyD,cAGbnD,EAGAlG,EAHAkG,OACAC,EAEAnG,EAFAmG,aACAT,EACA1F,EADA0F,aASJ,OALAhF,qBAAU,WAENkF,EAAS,CAAEC,KAAMjD,EAAwBkR,eAAgBpO,MAC1D,CAACE,EAAUF,IAGV,uBAAMc,UAAU,kBAAkBI,SAAUlB,EAA5C,UACI,qBAAKc,UAAU,aAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,uBAAOK,YAAY,OAAO7B,KAAK,OAAOwB,UAAU,eAAeM,SAAUX,IACzE,qBAAKK,UAAU,cAAf,SAA8BN,EAAOlB,UAEzC,sBAAKwB,UAAU,QAAf,UACI,uBAAOK,YAAY,eAAe7B,KAAK,cAAcwB,UAAU,eAC3DO,UAAW,SAACC,GACDA,EAAEC,KAAO,GAAKD,EAAEC,KAAO,GACZ,cAAVD,EAAEC,KACQ,cAAVD,EAAEC,KACQ,eAAVD,EAAEC,KACQ,QAAVD,EAAEC,KACFD,EAAEE,UAAsB,MAAVF,EAAEC,KAAyB,MAAVD,EAAEC,KAAyB,MAAVD,EAAEC,KAAyB,MAAVD,EAAEC,MACvED,EAAEG,kBAEPL,SAAUX,IACjB,qBAAKK,UAAU,cAAf,SAA8BN,EAAOjB,sBAIjD,sBAAKuB,UAAU,aAAf,UACI,uBAAOK,YAAY,QAAQ7B,KAAK,QAAQwB,UAAU,eAAeM,SAAUX,IAC3E,qBAAKK,UAAU,cAAf,SAA8BN,EAAOhB,WAEzC,sBAAKsB,UAAU,aAAf,UACI,uBAAOK,YAAY,WAAW7B,KAAK,WAAWa,KAAK,WAAWW,UAAU,eAAeM,SAAUX,IACjG,qBAAKK,UAAU,cAAf,SAA8BN,EAAOf,oBAmCtCwC,iBAAUwR,IChFV,SAASC,KACpB,IAAMC,EAAWhT,aAAY,SAAAC,GAAK,OAAIA,EAAMiN,YAAY8F,YAElDzT,EAAWyD,cACjB3I,qBAAU,WACNkF,EAAS,CACLC,KAAM1C,GACNmW,YAAa,OAElB,CAAC1T,IAEJ,IAAM6R,EAAW,SAACnI,GACd1J,EAAS,CACLC,KAAM1C,GACNmW,YAAahK,KAYf8G,EAAU,CACZ,CACIlF,MAAO,KACPmF,UAAW,SACXpP,IAAK,SACLqP,OAAQ,SAACC,EAAOC,GACZ,OAAOD,EAAM9E,OAAS+E,EAAM/E,QAEhCgF,eAAgB,CAAC,YAErB,CACIvF,MAAO,QACPmF,UAAW,QACXpP,IAAK,QACLqP,OAAQ,SAACC,EAAOC,GAAW,IAAD,IAGtB,OAFU,UAAGA,EAAMtR,aAAT,aAAG,EAAa2R,OAAOC,gBACvB,UAAGP,EAAMrR,aAAT,aAAG,EAAa2R,OAAOC,gBAErB,EAEL,IAGf,CACI5F,MAAO,OACPmF,UAAW,OACXpP,IAAK,OACLqP,OAAQ,SAACC,EAAOC,GAAW,IAAD,IAGtB,OAFS,UAAGA,EAAMtR,aAAT,aAAG,EAAa2R,OAAOC,gBACvB,UAAGP,EAAMrR,aAAT,aAAG,EAAa2R,OAAOC,gBAEpB,EAEL,IAIf,CACI5F,MAAO,QACPmF,UAAW,cACXpP,IAAK,cACLqP,OAAQ,SAACC,EAAOC,GAGZ,OAFmBA,EAAMvR,YACNsR,EAAMtR,aAEb,EAEL,IAGf,CACIiM,MAAO,SACPmF,UAAW,GACXpP,IAAK,IACLnG,OAAQ,SAAC4V,EAAMC,EAAQ5M,GACnB,OAAO,gCACH,wBAAQvD,UAAU,uBAAuBa,QAAS,WAM9CzB,EALe,CACXC,KAAMnD,EACN9B,UAAW,cAAC,GAAD,IACXsQ,MAAO,cAQXtL,EAJuB,CACnBC,KAAMtC,GACNgW,cAAe5C,KAVvB,SAcI,cAACkB,GAAA,EAAD,CAAc7W,MAAO,CAAE+G,SAAU,QAErC,cAAC,KAAD,CACImJ,MAAM,oCACN4G,UAAW,WACPlS,EAAS,CAAEC,KAAMxC,GAAkBmW,OAAQ7C,EAAOlF,UAGtDsG,OAAO,MACPC,WAAW,KAPf,SASI,wBAAQxR,UAAU,iBAAlB,SACI,cAACyR,GAAA,EAAD,CAAgBjX,MAAO,CAAE+G,SAAU,gBAS3D,OACI,sBAAKvB,UAAU,sBAAf,UACI,iDACA,cAAC,IAAD,CAAQlB,MAAM,QAAQkB,UAAU,6BAA6BgC,KAAM,cAACiR,GAAA,EAAD,IACnEpS,QAAS,WAMLzB,EALe,CACXC,KAAMlD,EACN/B,UAAW,cAAC,GAAD,IACXsQ,MAAO,iBALf,yBAtGgB,WACpB,IAAQwI,EAAWC,IAAXD,OAER,OAAO,qBAAKlT,UAAU,YAAf,SACH,cAACkT,EAAD,CAAQ7S,YAAY,YAAY+S,YAAU,EAACC,YAAY,SAAS5R,KAAK,QAAQwP,SAAUA,MA2GtFqC,GACD,cAAC,KAAD,CAAO1D,QAASA,EAAS8B,OAAQ,SAAUpH,WAAYuI,EAAUvS,SAAU,kB,qBCrI1EiT,GAAe,SAAC/Z,GAEzB,IAAOY,EAA0BZ,EAA1BY,UAAawU,EAApB,YAAiCpV,EAAjC,IACA,OAAO,cAAC,IAAD,2BAAWoV,GAAX,IAAsBtU,OAAQ,SAACC,GAClC,OAAO,mCACH,cAACH,EAAD,eAAeG,WCqBZiZ,OAlBf,WACE,OACE,qCACE,cAACtR,GAAD,IACA,cAACyP,GAAD,IACA,eAAC,IAAD,WACE,cAAC,EAAD,CAAmB8B,OAAK,EAACC,KAAK,SAAStZ,UAAWuZ,KAClD,cAAC,GAAD,CAAmBF,OAAK,EAACC,KAAK,iBAAiBtZ,UAAWwZ,KAC1D,cAAC,GAAD,CAAmBH,OAAK,EAACC,KAAK,qBAAqBtZ,UAAWmV,KAC9D,cAAC,GAAD,CAAmBkE,OAAK,EAACC,KAAK,4BAA4BtZ,UAAWuL,KACrE,cAAC,GAAD,CAAmB8N,OAAK,EAACC,KAAK,kBAAkBtZ,UAAWwY,KAC3D,cAAC,GAAD,CAAmBa,OAAK,EAACC,KAAK,IAAItZ,UAAWmV,KAC7C,cAAC,GAAD,CAAckE,OAAK,EAACC,KAAK,IAAItZ,UAAWiY,YCbjCwB,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,kBCPDQ,GAAkB,kBAClBC,GAAe,eCCtBC,GAAe,CACjBpS,WAAW,GCAXqS,GAAU,GAEXnL,aAAaC,QAAQlD,MACpBoO,GAAUzR,KAAKC,MAAMqG,aAAaC,QAAQlD,MAI9C,IAAMqO,GAAgB,CAClBrT,UAAYoT,GACZ7U,oBAAsB,GCVpB8U,GAAe,CACjB3F,mBAAqB,ICDnByF,GAAe,CACjB3C,SAAS,EACTnH,MAAO,GACPoH,uBAAwB,wCACxBC,eAAgB,SAAC4C,GAAiBC,MAAM,iBCJtCJ,GAAe,CACjBhF,YAAa,GACbJ,YAAa,CACT,OAAU,EACV,YAAe,SACf,QAAW,EACX,YAAe,SACf,WAAc,KAElBxM,cAAe,GACf8J,oBAAqB,ICVnBgI,GAAe,CACjBjF,WAAY,GACZ3C,QAAS,GACT+F,SAAU,GACVJ,SAAU,CACN,GAAM,EACN,KAAQ,GACR,YAAe,EACf,MAAS,KCRX+B,GAAe,CACjB5N,YAAa,ICDX4N,GAAe,CACjB9N,UAAW,I,mBCDT8N,GAAe,CACjB1N,YAAa,GACbN,gBAAiB,CACb,aAAgB,CACZ,WAAc,EACd,SAAY,QAEhB,eAAkB,CACd,GAAM,EACN,SAAY,OAEhB,UAAa,GACb,WAAc,GACd,OAAU,EACV,SAAY,GACZ,MAAS,GACT,YAAe,GACf,SAAY,IACZ,iBAAoB,EACpB,kBAAqB,EACrB,sBAAyB,EACzB,OAAU,EACV,WAAc,EACd,UAAa,GAEjBe,YAAc,CACVtH,IAAK,EACLkH,QAAS,K,qFC1BJ0N,GAAb,uCACIC,IAAM,SAACC,EAAKC,GACR,OAAOC,KAAM,CACTF,IAAI,GAAD,OAAK5O,GAAL,YAAwB4O,GAC3BG,OAAQ,MACRC,KAAMH,EACNI,QAAS,CAAE,cAAiB,UAAY9L,aAAaC,QAAQnD,QANzE,KAUIiP,KAAO,SAACN,EAAKC,GACT,OAAOC,KAAM,CACTF,IAAI,GAAD,OAAK5O,GAAL,YAAwB4O,GAC3BG,OAAQ,OACRC,KAAMH,EACNI,QAAS,CAAE,cAAiB,UAAY9L,aAAaC,QAAQnD,QAfzE,KAoBIkP,IAAM,SAACP,GACH,OAAOE,KAAM,CACTF,IAAI,GAAD,OAAK5O,GAAL,YAAwB4O,GAC3BG,OAAQ,MACRE,QAAS,CAAE,cAAiB,UAAY9L,aAAaC,QAAQnD,QAxBzE,KA4BImP,OAAS,SAACR,GACN,OAAOE,KAAM,CACTF,IAAI,GAAD,OAAK5O,GAAL,YAAwB4O,GAC3BG,OAAQ,SACRE,QAAS,CAAE,cAAiB,UAAY9L,aAAaC,QAAQnD,SChB5DoP,GAAwB,IAjBrC,oDAGI,aAAe,IAAD,+BACV,gBAGJC,OAAS,SAACpU,GACN,OAAO,EAAKgU,KAAL,eAA0BhU,IALvB,EAQdqU,OAAS,SAACpW,GACN,OAAO,EAAK+V,KAAL,eAA0B/V,IATvB,EAHlB,UAA2CuV,K,aCMjCc,I,aAgCOC,I,aAOPC,I,aAoCOC,IA3EjB,SAAUH,GAAWI,GAArB,0EACI,OADJ,SACUjB,aAAI,CACNzV,KAAMiV,KAFd,OAII,OAJJ,SAIU0B,aAAM,KAJhB,OAQyB,OARzB,kBAQ+BC,cAAK,kBAAMT,GAAsBC,OAAOM,EAAO1U,cAR9E,OAcQ,OAdR,SAQgB8T,EARhB,EAQgBA,KAGR7L,aAAa4M,QAAQ9P,GAAO+O,EAAKhO,QAAQgP,aACzC7M,aAAa4M,QAAQ7P,GAAYrD,KAAKuB,UAAU4Q,EAAKhO,UAZ7D,UAcc2N,aAAI,CACNzV,KAAMzE,EACNyG,UAAW8T,EAAKhO,UAhB5B,QAmBQyG,GAAQ1D,KAAK,sBAnBrB,kDAsBQkM,QAAQC,IAAR,MAtBR,QA0BI,OA1BJ,UA0BUvB,aAAI,CACNzV,KAAMkV,KA3Bd,uDAgCO,SAAUqB,KAAV,kEACH,OADG,SACGU,aAAW3b,EAAiBgb,IAD/B,wCAOP,SAAUE,GAAWE,GAArB,wEACI,OADJ,SACUjB,aAAI,CACNzV,KAAMiV,KAFd,OAII,OAJJ,SAIU0B,aAAM,KAJhB,OAQ2B,OAR3B,kBAQiCC,cAAK,kBAAMT,GAAsBE,OAAOK,EAAOzW,eARhF,qBAQgByL,SAEOzE,GAVvB,iBAWY,OAXZ,UAWkBwO,aAAI,CACNzV,KAAMvE,EACN8E,mBAAoB,IAbpC,gCAgBY,OAhBZ,UAgBkBkV,aAAI,CACNzV,KAAMvE,EACN8E,mBAAoB,IAlBpC,gCAuBQ,OAvBR,oCAuBckV,aAAI,CACNzV,KAAMvE,EACN8E,mBAAoB,IAzBhC,QA8BI,OA9BJ,UA8BUkV,aAAI,CACNzV,KAAMkV,KA/Bd,uDAoCO,SAAUuB,KAAV,kEACH,OADG,SACGQ,aAAWzb,EAAiBgb,IAD/B,wCCjFA,IAkCMU,GAAiB,IAlC9B,oDAGI,aAAe,IAAD,+BACV,gBAGJC,cAAgB,SAACxH,GACb,OAAO,EAAKqG,KAAL,iCAA4CrG,IALzC,EAQdyH,cAAgB,SAACpH,GACb,OAAO,EAAKyF,IAAL,0CAA4CzF,EAAcpP,IAAMoP,IAT7D,EAYdqH,sBAAwB,WACpB,OAAO,EAAKpB,IAAL,oBAbG,EAgBdqB,cAAgB,WACZ,OAAO,EAAKrB,IAAL,0BAjBG,EAoBdsB,cAAgB,SAAC3W,GACb,OAAO,EAAKsV,OAAL,0CAA+CtV,KArB5C,EAwBd4W,iBAAmB,SAAC5W,GAChB,OAAO,EAAKqV,IAAL,sCAAwCrV,KAzBrC,EAHlB,UAAoC4U,K,aCG1BiC,I,aAkBOC,IAlBjB,SAAUD,GAA0Bf,GAApC,4EAEiC,OAFjC,kBAEuCE,cAAK,kBAAMM,GAAeG,2BAFjE,mBAEgBvB,EAFhB,EAEgBA,KAFhB,EAEsBpK,SAECzE,GAJvB,gBAKY,OALZ,SAKkBwO,aAAI,CACNzV,KAAMrE,EACNma,KAAMA,EAAKhO,UAP3B,yDAaQiP,QAAQC,IAAR,MACAD,QAAQC,IAAR,UAAY,KAAIW,gBAAhB,aAAY,EAAc7B,MAdlC,uDAkBO,SAAU4B,KAAV,kEACH,OADG,SACGT,aAAWvb,EAA+B+b,IAD7C,wC,cCrBMG,GAAiB,SAAC5X,EAAM6X,GAA+B,IAAtB5R,EAAqB,uDAAP,GACxD6R,KAAa9X,GAAM,CACf6X,QAASA,EACT5R,YAAaA,K,aCIX8R,I,aAyBOC,I,aASPC,I,aAeOC,I,aAOPC,I,aA6BOC,I,aAQPC,I,aA0BOC,I,aAMPC,I,aAeOC,I,aAMPC,I,aA4BOC,IA9KjB,SAAUX,GAAkBrB,GAA5B,wEACI,OADJ,SACUjB,aAAI,CACNzV,KAAMiV,KAFd,OAII,OAJJ,SAIU0B,aAAM,KAJhB,OAO2B,OAP3B,kBAOiCC,cAAK,kBAAMM,GAAeC,cAAcT,EAAO/G,eAPhF,kBAOgBjE,SAEOzE,IACX2Q,GAAe,UAAW,iCAC1BrJ,GAAQ1D,KAAK,uBAEb+M,GAAe,QAAS,yBAbpC,kDAiBQA,GAAe,QAAS,yBAjBhC,QAoBI,OApBJ,UAoBUnC,aAAI,CACNzV,KAAMkV,KArBd,uDAyBO,SAAU8C,KAAV,kEACH,OADG,SACGf,aAAWrb,EAAqBmc,IADnC,wCASP,SAAUE,KAAV,0EAEiC,OAFjC,kBAEuCrB,cAAK,kBAAMM,GAAeI,mBAFjE,mBAEgBxB,EAFhB,EAEgBA,KAFhB,EAEsBpK,SAECzE,GAJvB,gBAKY,OALZ,SAKkBwO,aAAI,CACNzV,KAAMnE,EACNsU,YAAa2F,EAAKhO,UAPlC,gHAeO,SAAUoQ,KAAV,kEACH,OADG,SACGjB,aAAWnb,EAAuBmc,IADrC,wCAOP,SAAUE,GAAkBzB,GAA5B,wEACI,OADJ,SACUjB,aAAI,CACNzV,KAAMiV,KAFd,OAII,OAJJ,SAIU0B,aAAM,KAJhB,OAO2B,OAP3B,kBAOiCC,cAAK,kBAAMM,GAAeE,cAAcV,EAAO1G,kBAPhF,OAeQ,OAfR,WAOgBtE,SAEOzE,GACX2Q,GAAe,UAAW,iCAE1BA,GAAe,QAAS,yBAZpC,UAechB,aAAKqB,IAfnB,QAgBQ,OAhBR,UAgBcxC,aAAI,CACNzV,KAAM1D,IAjBlB,0DAoBQsb,GAAe,QAAS,yBApBhC,QAuBI,OAvBJ,UAuBUnC,aAAI,CACNzV,KAAMkV,KAxBd,uDA6BO,SAAUkD,KAAV,kEACH,OADG,SACGnB,aAAWlb,EAAqBoc,IADnC,wCAQP,SAAUE,GAAkB3B,GAA5B,wEACI,OADJ,SACUjB,aAAI,CACNzV,KAAMiV,KAFd,OAII,OAJJ,SAIU0B,aAAM,KAJhB,OAO2B,OAP3B,kBAOiCC,cAAK,kBAAMM,GAAeK,cAAcb,EAAOxI,cAPhF,OAeQ,OAfR,WAOgBxC,SAEOzE,GACX2Q,GAAe,UAAW,iCAE1BA,GAAe,QAAS,yBAZpC,UAechB,aAAKqB,IAfnB,0DAiBQL,GAAe,QAAS,yBAjBhC,QAoBI,OApBJ,UAoBUnC,aAAI,CACNzV,KAAMkV,KArBd,uDA0BO,SAAUoD,KAAV,kEACH,OADG,SACGrB,aAAWjb,EAAqBqc,IADnC,wCAMP,SAAUE,GAAqB7B,GAA/B,0EAEyB,OAFzB,kBAE+BE,cAAK,kBAAMM,GAAeM,iBAAiBd,EAAO5S,cAFjF,OAIQ,OAJR,SAEgBgS,EAFhB,EAEgBA,KAFhB,SAIcL,aAAI,CACNzV,KAAM9D,EACNqH,cAAeuS,EAAKhO,UANhC,uDAUQiP,QAAQC,IAAI,mBACZzI,GAAQ1D,KAAK,sBAXrB,sDAeO,SAAU2N,KAAV,kEACH,OADG,SACGvB,aAAWhb,EAAyBsc,IADvC,wCAMP,SAAUE,GAA2B/B,GAArC,0EACI,OADJ,SACUjB,aAAI,CACNzV,KAAMiV,KAFd,OAII,OAJJ,SAIU0B,aAAM,KAJhB,OAOyB,OAPzB,kBAO+BC,cAAK,kBAAMM,GAAeI,mBAPzD,OASQ,OATR,SAOgBxB,EAPhB,EAOgBA,KAPhB,UAScL,aAAI,CACNzV,KAAM5D,EACNiR,oBAAqByI,EAAKhO,UAXtC,QAcQ,OAdR,UAcc2N,aAAI,CACNzV,KAAM5C,GACN8Q,UAAW4H,EAAKhO,QAAQ,GAAGlH,KAhBvC,0DAoBQmW,QAAQC,IAAI,mBApBpB,QAuBI,OAvBJ,UAuBUvB,aAAI,CACNzV,KAAMkV,KAxBd,uDA4BO,SAAUwD,KAAV,kEACH,OADG,SACGzB,aAAW9a,EAAgCsc,IAD9C,wCCrLA,IA0BME,GAAc,IA1B3B,oDAGI,aAAe,IAAD,+BACV,gBAGJC,QAAU,SAACC,GACP,OAAO,EAAK5C,IAAL,gCAAkC4C,KAL/B,EAOdC,kBAAoB,SAACrH,GACjB,OAAO,EAAKuE,KAAL,4BAAuCvE,IARpC,EAUdsH,sBAAwB,SAACtH,GACrB,OAAO,EAAKuE,KAAL,gCAA2CvE,IAXxC,EAaduH,mBAAqB,SAAC9K,GAClB,OAAO,EAAK+H,IAAL,6CAA+C/H,KAd5C,EAgBd+K,eAAiB,SAACrN,GACd,OAAO,EAAKsK,OAAL,8BAAmCtK,KAjBhC,EAmBdsN,SAAW,SAAC7F,GACR,OAAO,EAAKoC,IAAI,iBAAkBpC,IApBxB,EAHlB,UAAiCmC,K,aCOvB2D,I,aAaOC,I,aAOPC,I,aAWOC,I,aAMPC,I,aAYOC,I,aAOPC,I,aA0BOC,I,aAOPC,I,aAgBOC,I,aAMPC,I,aA4BOC,I,aAMPC,I,aAiCOC,I,aAQPC,I,aAmCOC,IA7NjB,SAAUf,GAAYzC,GAAtB,0EAEyB,OAFzB,kBAE+BE,cAAK,kBAAM+B,GAAYC,QAAQlC,EAAO1I,YAFrE,OAGQ,OAHR,SAEgB8H,EAFhB,EAEgBA,KAFhB,SAGcL,aAAI,CACNzV,KAAM/C,EACNkd,cAAerE,EAAKhO,UALhC,uDASQiP,QAAQC,IAAR,MATR,sDAaO,SAAUoC,KAAV,kEACH,OADG,SACGnC,aAAWja,EAAemc,IAD7B,wCAOP,SAAUE,GAAmB3C,GAA7B,kEAEQ,OAFR,kBAEcE,cAAK,kBAAM+B,GAAYG,kBAAkBpC,EAAOjF,gBAF9D,OAGQ,OAHR,SAGcgE,aAAI,CACNzV,KAAMlE,IAJlB,uDAOQib,QAAQC,IAAR,MAPR,sDAWO,SAAUsC,KAAV,kEACH,OADG,SACGrC,aAAW/Z,EAAuBmc,IADrC,wCAMP,SAAUE,GAAsB7C,GAAhC,kEAEQ,OAFR,kBAEcE,cAAK,kBAAM+B,GAAYI,sBAAsBrC,EAAOjF,gBAFlE,OAGQ,OAHR,SAGcgE,aAAI,CACNzV,KAAMlE,IAJlB,uDAQQib,QAAQC,IAAR,MARR,sDAYO,SAAUwC,KAAV,kEACH,OADG,SACGvC,aAAW9Z,GAA0Boc,IADxC,wCAOP,SAAUE,GAAuB/C,GAAjC,gFAGiC,OAFrBxI,EAAcwI,EAAdxI,UADZ,kBAGuC0I,cAAK,kBAAM+B,GAAYK,mBAAmB9K,MAHjF,mBAGgB4H,EAHhB,EAGgBA,KAHhB,EAGsBpK,SAECzE,GALvB,iBAMY,OANZ,UAMkBwO,aAAI,CACNzV,KAAM3C,GACNoQ,QAASqI,EAAKhO,UAR9B,6DAaQiP,QAAQC,IAAR,MACAD,QAAQC,IAAR,UAAY,KAAIW,gBAAhB,aAAY,EAAc7B,OACtB,eAAI6B,gBAAJ,eAAc7B,KAAKsE,cAAenT,GAf9C,iBAgBY,OAhBZ,UAgBkBwO,aAAI,CACNzV,KAAM3C,GACNoQ,QAAS,KAlBzB,uDA0BO,SAAUiM,KAAV,kEACH,OADG,SACGzC,aAAW7Z,GAA6Bqc,IAD3C,wCAOP,SAAUE,GAAgBjD,GAA1B,0EAGiC,OAHjC,kBAGuCE,cAAK,kBAAM+B,GAAYC,QAAQlC,EAAOjD,gBAH7E,mBAGgBqC,EAHhB,EAGgBA,KAHhB,EAGsBpK,SAECzE,GALvB,gBAMY,OANZ,SAMkBwO,aAAI,CACNzV,KAAMzC,GACNiW,SAAUsC,EAAKhO,UAR/B,gHAgBO,SAAU8R,KAAV,kEACH,OADG,SACG3C,aAAW3Z,GAAoBqc,IADlC,wCAMP,SAAUE,GAAenD,GAAzB,wEACI,OADJ,SACUjB,aAAI,CACNzV,KAAMiV,KAFd,OAII,OAJJ,SAIU0B,aAAM,KAJhB,OAO2B,OAP3B,kBAOiCC,cAAK,kBAAM+B,GAAYM,eAAevC,EAAO/C,WAP9E,qBAOgBjI,SAEOzE,GATvB,iBAWY,OADA2Q,GAAe,UAAW,8BAVtC,UAWkBnC,aAAI,CACNzV,KAAM1C,GACNmW,YAAa,KAb7B,gCAgBYmE,GAAe,QAAS,sBAhBpC,0DAmBQA,GAAe,QAAS,sBAnBhC,QAsBI,OAtBJ,UAsBUnC,aAAI,CACNzV,KAAMkV,KAvBd,uDA4BO,SAAU4E,KAAV,kEACH,OADG,SACG7C,aAAWzZ,GAAkBqc,IADhC,wCAMP,SAAUE,GAAerD,GAAzB,wEACI,OADJ,SACUjB,aAAI,CACNzV,KAAMiV,KAFd,OAII,OAJJ,SAIU0B,aAAM,KAJhB,OAO2B,OAP3B,kBAOiCC,cAAK,kBAAM+B,GAAYO,SAASxC,EAAOrD,eAPxE,qBAOgB3H,SAEOzE,GATvB,iBAYY,OAFA2Q,GAAe,UAAW,8BAVtC,UAYkBnC,aAAI,CACNzV,KAAM1C,GACNmW,YAAa,KAd7B,gCAiBYmE,GAAe,QAAS,sBAjBpC,QAoBQ,OApBR,UAoBcnC,aAAI,CACNzV,KAAM1D,IArBlB,0DAwBQsb,GAAe,QAAS,sBAxBhC,QA2BI,OA3BJ,UA2BUnC,aAAI,CACNzV,KAAMkV,KA5Bd,uDAiCO,SAAU8E,KAAV,kEACH,OADG,SACG/C,aAAWxZ,GAAkBsc,IADhC,wCAQP,SAAUE,GAAevD,GAAzB,wEACI,OADJ,SACUjB,aAAI,CACNzV,KAAMiV,KAFd,OAII,OAJJ,SAIU0B,aAAM,KAJhB,OAQ2B,OAR3B,kBAQiCC,cAAK,kBAAMT,GAAsBE,OAAOK,EAAOzW,eARhF,qBAQgByL,SAEOzE,GAVvB,iBAaY,OAFA2Q,GAAe,UAAW,8BAXtC,UAakBnC,aAAI,CACNzV,KAAM1C,GACNmW,YAAa,KAf7B,gCAkBYmE,GAAe,QAAS,sBAlBpC,QAoBQ,OApBR,UAoBcnC,aAAI,CACNzV,KAAM1D,IArBlB,0DAyBQsb,GAAe,QAAS,sBAzBhC,QA6BI,OA7BJ,UA6BUnC,aAAI,CACNzV,KAAMkV,KA9Bd,uDAmCO,SAAUgF,KAAV,kEACH,OADG,SACGjD,aAAWtZ,GAAkBsc,IADhC,wCCpOA,IAQMI,GAAkB,IAR/B,+MAEIC,eAAiB,WACb,OAAO,EAAKrE,IAAL,oBAHf,YAAqCT,K,aCI3B8E,I,aAcOC,IAdjB,SAAUD,KAAV,0EAEiC,OAFjC,kBAEuC1D,cAAK,kBAAMyD,GAAgBC,oBAFlE,mBAEgBxE,EAFhB,EAEgBA,KAFhB,EAEsBpK,SACCzE,GAHvB,gBAIY,OAJZ,SAIkBwO,aAAI,CACNzV,KAAMjC,GACNwJ,YAAcuO,EAAKhO,UANnC,yDAUQiP,QAAQC,IAAI,KAAIW,SAAS7B,MAVjC,uDAcO,SAAUyE,KAAV,kEACH,OADG,SACGtD,aAAWnZ,GAAuBwc,IADrC,wCClBA,IA8CME,GAAc,IA9C3B,oDAGI,aAAe,IAAD,+BACV,gBAGJC,eAAiB,WACb,OAAO,EAAKxE,IAAI,oBALN,EAQdyE,WAAa,SAAClN,GACV,OAAO,EAAKwI,KAAK,qBAAsBxI,IAT7B,EAYdmN,cAAgB,SAAC5W,GACb,OAAO,EAAKkS,IAAL,uCAAyClS,KAbtC,EAgBd6W,WAAa,SAACC,GACV,OAAO,EAAK7E,KAAL,qBAAgC6E,IAjB7B,EAoBdC,iBAAmB,SAACC,GAChB,OAAO,EAAKtF,IAAL,uBAAgCsF,IArB7B,EAwBdC,cAAgB,WACZ,OAAO,EAAK/E,IAAI,mBAzBN,EA4BdgF,cAAgB,SAAC1Q,GACb,OAAO,EAAKyL,KAAK,wBAAyBzL,IA7BhC,EAgCd2Q,cAAgB,SAAC1P,GACb,OAAO,EAAK0K,OAAL,0CAA+C1K,KAjC5C,EAoCd2P,cAAgB,SAAC7R,GACb,OAAO,EAAKmM,IAAL,mCAAqCnM,EAAc1I,GAAnD,2BAAwE0I,EAAcC,kBArCnF,EAHlB,UAAiCiM,K,aCMvB4F,I,aAeOC,I,aAOPC,I,aA4BOC,I,aAMPC,I,aAqBOC,I,aAQAC,I,aAgEAC,I,aAOPC,I,aA2BOC,I,aAMPC,I,aAeOC,I,aAOPC,I,aAkBOC,I,aAMPC,I,aAkBOC,I,aAMPC,I,aA8BOC,IAjSjB,SAAUjB,GAAmB1E,GAA7B,4EAEyB,OAFzB,kBAE+BE,cAAK,kBAAM4D,GAAYC,oBAFtD,OAGQ,OAHR,SAEgB3E,EAFhB,EAEgBA,KAFhB,SAGcL,aAAI,CACNzV,KAAM/B,GACNwJ,YAAaqO,EAAKhO,UAL9B,uDASQiP,QAAQC,IAAR,MACAD,QAAQC,IAAR,UAAY,KAAIW,gBAAhB,aAAY,EAAc7B,MAVlC,sDAeO,SAAUuF,KAAV,kEACH,OADG,SACGpE,aAAWjZ,GAAwBod,IADtC,wCAOP,SAAUE,GAAe5E,GAAzB,wEAGQ,OAHR,kBAGcjB,aAAI,CACNzV,KAAMiV,KAJlB,OAM2B,OAN3B,SAMiC2B,cAAK,kBAAM4D,GAAYE,WAAWhE,EAAOlJ,eAN1E,OAcQ,OAdR,WAMgB9B,SAEOzE,GACX2Q,GAAe,UAAW,8BAE1BA,GAAe,QAAS,sBAXpC,UAccnC,aAAI,CACNzV,KAAM1D,IAflB,0DAmBQsb,GAAe,QAAS,sBAnBhC,QAsBI,OAtBJ,UAsBUnC,aAAI,CACNzV,KAAMkV,KAvBd,uDA4BO,SAAUqG,KAAV,kEACH,OADG,SACGtE,aAAW/Y,GAAkBod,IADhC,wCAMP,SAAUE,GAAkB9E,GAA5B,8EAIyB,OAHb3S,EAAW2S,EAAX3S,OADZ,kBAI+B6S,cAAK,kBAAM4D,GAAYG,cAAc5W,MAJpE,OAMQ,OANR,SAIgB+R,EAJhB,EAIgBA,KAJhB,SAMcL,aAAI,CACNzV,KAAM5B,GACN+I,gBAAiB2O,EAAKhO,UARlC,yDAaQiP,QAAQC,IAAR,MACAD,QAAQC,IAAR,UAAY,KAAIW,gBAAhB,aAAY,EAAc7B,MAdlC,uDAqBO,SAAU2F,GAAyB/E,GAAnC,kEAEH,OAFG,SAEGO,aAAW9Y,GAAsBqd,IAFpC,wCAQA,SAAUE,GAAoBhF,GAA9B,iGAEKA,EAAOhN,WAFZ,cAGMrL,GAHN,SAaMC,GAbN,SAsBMC,GAtBN,mBAMK,OAFQkL,EAAgBiN,EAAhBjN,MAAOtK,EAASuX,EAATvX,KAJpB,SAMWsW,aAAI,CACNzV,KAAM3B,GACNc,OACAsK,UATT,0CAeK,OADQ4C,EAAiBqK,EAAjBrK,aAdb,UAeWoJ,aAAI,CACNzV,KAAM1B,GACN+N,iBAjBT,4CAwBK,OADQT,EAAW8K,EAAX9K,OAvBb,UAwBW6J,aAAI,CACNzV,KAAMzB,GACNqN,WA1BT,oDAkCuB,OAlCvB,UAkC6B0Q,cAAO,SAAA7b,GAAK,OAAIA,EAAM2G,eAlCnD,QA4CoB,OA5CpB,SAkCGD,EAlCH,EAkCGA,gBAGAmG,EArCH,UAqCmBnG,EAAgB3B,iBArCnC,aAqCmB,EAA2BhB,KAAI,SAAC2B,EAAMjC,GACxD,OAAOiC,EAAKvF,MAIV2b,EA1CH,2BA0CwBpV,GA1CxB,IA0CyCmG,kBA1CzC,oBA4C0BsJ,cAAK,kBAAM4D,GAAYI,WAAW2B,MA5C5D,sBA4CS7Q,SAEOzE,GA9ChB,iBA+CK,OA/CL,UA+CWwO,aAAI,CACNzV,KAAM/D,EACN6H,UAAWyY,EAAczY,YAjDlC,QAoDK,OApDL,UAoDW2R,aAAI,CACNzV,KAAM7B,GACN4F,OAAQwY,EAAcxY,SAtD/B,2DA0DCgT,QAAQC,IAAR,UAAY,KAAIW,gBAAhB,aAAY,EAAc7B,MAC1BiB,QAAQC,IAAR,MA3DD,wDAgEA,SAAU2E,KAAV,kEACH,OADG,SACG1E,aAAWzY,GAA6Bkd,IAD3C,wCAOP,SAAUE,GAAqBlF,GAA/B,4EAM2B,OAJftS,EAAqBsS,EAArBtS,iBAFZ,kBAMiCwS,cAAK,kBAAM4D,GAAYM,iBAAiB1W,MANzE,qBAMgBsH,SAGOzE,GATvB,iBAUY,OAVZ,SAUkBwO,aAAI,CACNzV,KAAM/D,EACN6H,UAAWM,EAAiBN,YAZ5C,OAeY,OAfZ,UAekB2R,aAAI,CACNzV,KAAM7B,GACN4F,OAAQK,EAAiBL,SAjBzC,0DAqBQgT,QAAQC,IAAR,MACAD,QAAQC,IAAR,UAAY,KAAIW,gBAAhB,aAAY,EAAc7B,MAtBlC,uDA2BO,SAAU+F,KAAV,kEACH,OADG,SACG5E,aAAWxY,GAAyBmd,IADvC,wCAMP,SAAUE,GAAkBpF,GAA5B,4EAEyB,OAFzB,kBAE+BE,cAAK,kBAAM4D,GAAYQ,mBAFtD,OAGQ,OAHR,SAEgBlF,EAFhB,EAEgBA,KAFhB,SAGcL,aAAI,CACNzV,KAAMrB,GACNgM,WAAYmL,EAAKhO,UAL7B,uDASQiP,QAAQC,IAAR,MACAD,QAAQC,IAAR,UAAY,KAAIW,gBAAhB,aAAY,EAAc7B,MAVlC,sDAeO,SAAUiG,KAAV,kEACH,OADG,SACG9E,aAAWvY,GAAsBod,IADpC,wCAOP,SAAUE,GAAkBtF,GAA5B,0EAE2B,OAF3B,kBAEiCE,cAAK,kBAAM4D,GAAYS,cAAcvE,EAAOnM,kBAF7E,qBAEgBmB,SAEOzE,GAJvB,gBAKY,OALZ,SAKkBwO,aAAI,CACNzV,KAAM7B,GACN4F,OAAQ2S,EAAOnM,cAAcxG,SAP7C,yDAYQgT,QAAQC,IAAR,MACAD,QAAQC,IAAR,UAAY,KAAIW,gBAAhB,aAAY,EAAc7B,MAblC,uDAkBO,SAAUmG,KAAV,kEACH,OADG,SACGhF,aAAWrY,GAAqBod,IADnC,wCAMP,SAAUE,GAAkBxF,GAA5B,0EAE2B,OAF3B,kBAEiCE,cAAK,kBAAM4D,GAAYU,cAAcxE,EAAOnM,cAAciB,cAF3F,qBAEgBE,SAEOzE,GAJvB,gBAKY,OALZ,SAKkBwO,aAAI,CACNzV,KAAM7B,GACN4F,OAAQ2S,EAAOnM,cAAcxG,SAP7C,yDAYQgT,QAAQC,IAAR,MACAD,QAAQC,IAAR,UAAY,KAAIW,gBAAhB,aAAY,EAAc7B,MAblC,uDAkBO,SAAUqG,KAAV,kEACH,OADG,SACGlF,aAAWpY,GAAqBqd,IADnC,wCAMP,SAAUE,GAAkB1F,GAA5B,0EAG2B,OAH3B,kBAGiCE,cAAK,kBAAM4D,GAAYW,cAAczE,EAAOpN,kBAH7E,qBAGgBoC,SAEOzE,GALvB,iBAMY,OANZ,SAMkBwO,aAAI,CACNzV,KAAMlB,GACNoJ,YAAa,CACTtH,IAAK,EACLkH,QAAS,MAV7B,OAcY,OAdZ,UAckB2N,aAAI,CACNzV,KAAM7B,GACN4F,OAAQ2S,EAAOpN,cAAcvF,SAhB7C,0DAoBQgT,QAAQC,IAAR,MACAD,QAAQC,IAAR,UAAY,KAAIW,gBAAhB,aAAY,EAAc7B,MArBlC,QAwBI,OAxBJ,UAwBUL,aAAI,CACNzV,KAAMkV,KAzBd,uDA8BO,SAAUmH,KAAV,kEACH,OADG,SACGpF,aAAWlY,GAAqBqd,IADnC,wCCvSA,IAcMI,GAAgB,IAd7B,oDAGI,aAAe,IAAD,+BACV,gBAGJC,aAAe,WACX,OAAO,EAAKxG,IAAL,kBALG,EAHlB,UAAmCT,K,aCEzBkH,I,aAmBOC,IAnBjB,SAAUD,GAAiBhG,GAA3B,4EAGyB,OAHzB,kBAG+BE,cAAK,kBAAM4F,GAAcC,kBAHxD,OAIQ,OAJR,SAGgB3G,EAHhB,EAGgBA,KAHhB,SAIcL,aAAI,CACNzV,KAAMnC,GACNwJ,UAAWyO,EAAKhO,UAN5B,uDAWQiP,QAAQC,IAAR,MACAD,QAAQC,IAAR,UAAY,KAAIW,gBAAhB,aAAY,EAAc7B,MAZlC,sDAmBO,SAAU6G,KAAV,kEAEH,OAFG,SAEG1F,aAAWrZ,GAAqB8e,IAFnC,wC,iBCbUE,IAAV,SAAUA,KAAV,kEAEH,OAFG,SAEGC,aAAI,CACNC,KACAA,KAEAC,KACAC,KACAA,KACAA,KACAA,KACAA,KACAA,KAEAC,KACAA,KACAA,KACAA,KACAA,KACAA,KACAA,KACAA,KAEAC,KAEAC,KAEAC,KACAA,KACAA,KACAA,KACAA,KACAA,KACAA,KACAA,KACAA,OAnCD,wCCIP,IAAMC,GAAiBC,eAEjBC,GAAcC,aAAgB,CAChC1a,ezBX0B,WAAmC,IAAlCrC,EAAiC,uDAAzB0U,GAAcuB,EAAW,uCAC5D,OAAQA,EAAO1W,MAEX,KAAKiV,GAED,OADAxU,EAAMsC,WAAY,EACX,eAAKtC,GAChB,KAAKyU,GAED,OADAzU,EAAMsC,WAAY,EACX,eAAKtC,GAEhB,QACI,OAAOA,IyBCfC,sBxBFiC,WAAkC,IAAjCD,EAAgC,uDAAxB4U,GAAaqB,EAAW,uCAClE,OAAOA,EAAO1W,MACV,KAAKzE,EAED,OADAkF,EAAMuB,UAAY0U,EAAO1U,UAClB,eAAIvB,GAEf,KAAKhF,EAED,OADAgF,EAAMF,mBAAqBmW,EAAOnW,mBAC3B,eAAIE,GAEf,QAAU,OAAO,eAAIA,KwBPzBmP,uBvBZkC,WAAkC,IAAjCnP,EAAgC,uDAAxB4U,GAAaqB,EAAW,uCACnE,OAAOA,EAAO1W,MAEV,KAAKrE,EAED,OADA8E,EAAMiP,mBAAqBgH,EAAOZ,KAC3B,eAAIrV,GAIf,QAAU,OAAO,eAAIA,KuBIzB8R,uBtBXkC,WAAmC,IAAlC9R,EAAiC,uDAAzB0U,GAAcuB,EAAW,uCACpE,OAAQA,EAAO1W,MACX,KAAK3D,EACD,OAAO,2BAAKoE,GAAZ,IAAmB+R,SAAS,IAEhC,KAAKlW,EACD,OAAO,2BAAKmE,GAAZ,IAAmB+R,SAAS,IAEhC,KAAKjW,EAID,OAHAkE,EAAM+R,SAAU,EAChB/R,EAAM4K,MAAQqL,EAAOrL,MACrB5K,EAAMgS,uBAAyBiE,EAAO3b,UAC/B,eAAK0F,GAGhB,KAAKjE,EAED,OADAiE,EAAMiS,eAAiBgE,EAAOzI,eACvB,eAAKxN,GAGhB,KAAK/D,EAID,OAHA+D,EAAM+R,SAAU,EAChB/R,EAAM4K,MAAQqL,EAAOrL,MACrB5K,EAAMgS,uBAAyBiE,EAAO3b,UAC/B,eAAK0F,GAGhB,KAAK9D,EACD,OAAO,2BAAK8D,GAAZ,IAAmBiS,eAAgBgE,EAAOzI,iBAG9C,KAAKpR,EAID,OAHA4D,EAAM+R,SAAU,EAChB/R,EAAM4K,MAAQqL,EAAOrL,MACrB5K,EAAMgS,uBAAyBiE,EAAO3b,UAC/B,eAAK0F,GAGhB,KAAK7D,EAED,OADA6D,EAAMiS,eAAiBgE,EAAOzI,eACvB,eAAKxN,GAGhB,KAAK3D,EAID,OAHA2D,EAAM+R,SAAU,EAChB/R,EAAM4K,MAAQqL,EAAOrL,MACrB5K,EAAMgS,uBAAyBiE,EAAO3b,UAC/B,eAAK0F,GAGhB,KAAK1D,EAED,OADA0D,EAAMiS,eAAiBgE,EAAOzI,eACvB,eAAKxN,GAGhB,QACI,OAAOA,IsB5Cf8F,erBN0B,WAAmC,IAAlC9F,EAAiC,uDAAzB0U,GAAcuB,EAAW,uCAC5D,OAAQA,EAAO1W,MAEX,KAAKnE,EAED,OADA4E,EAAM0P,YAAcuG,EAAOvG,YACpB,eAAK1P,GAGhB,KAAKhE,EAED,OADAgE,EAAMsP,YAAc2G,EAAO3E,iBACpB,eAAKtR,GAIhB,KAAKvE,EAED,OADAuE,EAAM8C,cAAgBmT,EAAOnT,cACtB,eAAK9C,GAGhB,KAAKrE,EACD,OAAO,2BAAKqE,GAAZ,IAAmB4M,oBAAqBqJ,EAAOrJ,sBAGnD,QACI,OAAO5M,IqBjBfiN,YpBRuB,WAAmC,IAAlCjN,EAAiC,uDAAzB4U,GAAcqB,EAAW,uCACzD,OAAQA,EAAO1W,MACX,KAAK/C,EAED,OADAwD,EAAM2P,WAAasG,EAAOyD,cACnB,eAAK1Z,GAGhB,KAAKpD,GACD,OAAO,2BAAKoD,GAAZ,IAAmBgN,QAASiJ,EAAOjJ,UAGvC,KAAKlQ,GAED,OADAkD,EAAM+S,SAAWkD,EAAOlD,SACjB,eAAK/S,GAGhB,KAAK/C,GAED,OADA+C,EAAM2S,SAAWsD,EAAOhD,cACjB,eAAKjT,GAIhB,QAAS,OAAO,eAAKA,KoBbzB+G,gBnBjB4B,WAAmC,IAAlC/G,EAAiC,uDAAzB0U,GAAcuB,EAAW,uCAC9D,OAAQA,EAAO1W,MAEf,KAAKjC,GAED,OADA0C,EAAM8G,YAAcmP,EAAOnP,YACpB,eAAK9G,GAEhB,QACI,OAAOA,ImBUX6G,clBlByB,WAAmC,IAAlC7G,EAAiC,uDAAzB0U,GAAcuB,EAAW,uCAC3D,OAAQA,EAAO1W,MAEX,KAAKnC,GACD,OAAO,2BAAK4C,GAAZ,IAAmB4G,UAAWqP,EAAOrP,YAEzC,QACI,OAAO5G,IkBYf2G,YjBWuB,WAAmC,IAAlC3G,EAAiC,uDAAzB0U,GAAcuB,EAAW,uCACzD,OAAQA,EAAO1W,MAEX,KAAK/B,GACD,OAAO,2BAAKwC,GAAZ,IAAmBgH,YAAaiP,EAAOjP,cAE3C,KAAKrJ,GACD,OAAO,2BAAKqC,GAAZ,IAAmB0G,gBAAiBuP,EAAOvP,kBAG/C,KAAK9I,GACD,IAAQc,EAAgBuX,EAAhBvX,KAAMsK,EAAUiN,EAAVjN,MACd,OAAO,2BAAKhJ,GAAZ,IAAmB0G,gBAAgB,2BAAM1G,EAAM0G,iBAAb,mBAA+BhI,EAAOsK,MAG5E,KAAKnL,GAED,OADAmC,EAAM0G,gBAAgB3B,UAAtB,uBAAsC/E,EAAM0G,gBAAgB3B,WAA5D,CAAuEkR,EAAOrK,eACvE,eAAK5L,GAGhB,KAAKlC,GAED,OADAkC,EAAM0G,gBAAgB3B,UAAtB,aAAsC/E,EAAM0G,gBAAgB3B,UAAUuG,QAAO,SAAAE,GAAE,OAAIA,EAAGrL,KAAO8V,EAAO9K,WAC7F,eAAKnL,GAGhB,KAAK9B,GAED,OADA8B,EAAM0G,gBAAgBwD,WAAtB,uBAAuClK,EAAM0G,gBAAgB3B,WAA7D,CAAwEkR,EAAO/L,aACxE,eAAKlK,GAGhB,KAAK3B,GACD,OAAO,2BAAK2B,GAAZ,IAAmByH,YAAawO,EAAOxO,cAG3C,QACI,OAAOzH,MiB3Cbgd,GAAQC,aAAYH,GAAaI,aAAgBN,KAEvDA,GAAeO,IAAIhB,IAEJa,UCpBfI,IAAS5iB,OACP,cAAC,IAAD,CAAQsT,QAASA,GAAjB,SACE,cAAC,IAAD,CAAUkP,MAAOA,GAAjB,SACE,cAAC,GAAD,QAIJK,SAASC,eAAe,SAM1BvJ,O","file":"static/js/main.68f360ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bgLoading\":\"LoadingComponent_bgLoading__zeHac\"};","export default __webpack_public_path__ + \"static/media/loading.5e01ee79.gif\";","export default __webpack_public_path__ + \"static/media/download.ef0b58c7.jfif\";","import React, { useEffect, useState } from 'react'\r\nimport { Route } from 'react-router-dom';\r\nimport { Layout } from 'antd';\r\n\r\n\r\nconst { Sider, Content } = Layout;\r\n\r\n\r\nexport const UserLoginTemplate = (props) => {\r\n    const [{ width, height }, setSize] = useState({ width: Math.round(window.innerWidth), height: Math.round(window.innerHeight) });\r\n\r\n    useEffect(() => {\r\n        window.onresize = () => {\r\n            setSize({\r\n                width: Math.round(window.innerWidth),\r\n                height: Math.round(window.innerHeight)\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    let { Component, ...restRoute } = props;\r\n    return <Route {...restRoute} render={(propsRoute) => {\r\n        return <>\r\n            <Layout>\r\n                <Sider width={width / 2} style={{ height: height, backgroundImage: `url(https://picsum.photos/${Math.round(width / 2)}/${height})`, backgroundSize: '100%' }}>\r\n                </Sider>\r\n                <Content>\r\n                    <Component {...propsRoute} />\r\n                </Content>\r\n            </Layout>\r\n\r\n        </>\r\n    }} />\r\n\r\n}\r\n","//Login, sign up\r\nexport const USER_SIGNIN_API = 'USER_SIGNIN_API';\r\nexport const USLOGIN = 'USLOGIN';\r\nexport const USER_SIGNUP_API = 'USER_SIGNUP_API';\r\nexport const SIGN_UP_NOTIFICATION = 'SIGN_UP_NOTIFICATION';\r\n\r\n//Project management\r\nexport const GET_ALL_PROJECT_CATEGORY_SAGA = 'GET_ALL_PROJECT_CATEGORY_SAGA';\r\nexport const GET_ALL_PROJECT_CATEGORY = 'GET_ALL_PROJECT_CATEGORY';\r\nexport const CREATE_PROJECT_SAGA = 'CREATE_PROJECT_SAGA';\r\nexport const GET_LIST_PROJECT = 'GET_LIST_PROJECT';\r\nexport const GET_LIST_PROJECT_SAGA = 'GET_LIST_PROJECT_SAGA';\r\nexport const UPDATE_PROJECT_SAGA = 'UPDATE_PROJECT_SAGA';\r\nexport const DELETE_PROJECT_SAGA = 'DELETE_PROJECT_SAGA';\r\nexport const GET_PROJECT_DETAIL_SAGA = 'GET_PROJECT_DETAIL_SAGA';\r\nexport const PUT_PROJECT_DETAIL = 'PUT_PROJECT_DETAIL';\r\nexport const GET_PROJECT_DROPDOWN_LIST_SAGA = 'GET_PROJECT_DROPDOWN_LIST_SAGA';\r\nexport const GET_PROJECT_DROPDOWN_LIST = 'GET_PROJECT_DROPDOWN_LIST'\r\n\r\n//Drawer\r\nexport const OPEN_DRAWER = 'OPEN_DRAWER';\r\nexport const CLOSE_DRAWER = 'CLOSE_DRAWER';\r\nexport const OPEN_FORM_EDIT_PROJECT = 'OPEN_FORM_EDIT_PROJECT';\r\nexport const SET_SUBMIT_EDIT_PROJECT = 'SET_SUBMIT_EDIT_PROJECT';\r\nexport const EDIT_PROJECT = 'EDIT_PROJECT';\r\nexport const OPEN_FORM_CREATE_TASK = 'OPEN_FORM_CREATE_TASK';\r\nexport const SET_SUBMIT_CREATE_TASK = 'SET_SUBMIT_CREATE_TASK';\r\nexport const SET_SUBMIT_EDIT_USER = 'SET_SUBMIT_EDIT_USER';\r\nexport const OPEN_FORM_EDIT_USER = 'OPEN_FORM_EDIT_USER';\r\nexport const OPEN_FORM_CREATE_USER = 'OPEN_FORM_CREATE_USER';\r\nexport const SET_SUBMIT_CREATE_USER = 'SET_SUBMIT_CREATE_USER';\r\n\r\n//User management\r\nexport const GET_USER_SAGA = 'GET_USER_SAGA';\r\nexport const GET_USER_SEARCH = 'GET_USER_SEARCH';\r\nexport const ADD_USER_PROJECT_SAGA = 'ADD_USER_PROJECT_SAGA';\r\nexport const REMOVE_USER_PROJECT_SAGA = 'REMOVE_USER_PROJECT_SAGA';\r\nexport const GET_USER_BY_PROJECT_ID_SAGA = 'GET_USER_BY_PROJECT_ID_SAGA';\r\nexport const GET_USER_BY_PROJECT_ID = 'GET_USER_BY_PROJECT_ID';\r\nexport const GET_LIST_USER_SAGA = 'GET_LIST_USER_SAGA';\r\nexport const GET_LIST_USER = 'GET_LIST_USER';\r\nexport const DELETE_USER_SAGA = 'DELETE_USER_SAGA';\r\nexport const UPDATE_USER_SAGA = 'UPDATE_USER_SAGA';\r\nexport const EDIT_USER = 'EDIT_USER';\r\nexport const CREATE_USER_SAGA = 'CREATE_USER_SAGA';\r\n\r\n//Status\r\nexport const GET_ALL_STATUS_SAGA = 'GET_ALL_STATUS_SAGA';\r\nexport const GET_ALL_STATUS = 'GET_ALL_STATUS';\r\n\r\n//Priority\r\nexport const GET_ALL_PRIORITY_SAGA = 'GET_ALL_PRIORITY_SAGA';\r\nexport const GET_ALL_PRIORITY = 'GET_ALL_PRIORITY';\r\n\r\n//Task management\r\nexport const GET_ALL_TASK_TYPE_SAGA = 'GET_ALL_TASK_TYPE_SAGA';\r\nexport const GET_ALL_TASK_TYPE = 'GET_ALL_TASK_TYPE';\r\nexport const CREATE_TASK_SAGA = 'CREATE_TASK_SAGA';\r\nexport const GET_TASK_DETAIL_SAGA = 'GET_TASK_DETAIL_SAGA';\r\nexport const GET_TASK_DETAIL = 'GET_TASK_DETAIL';\r\nexport const CHANGE_TASK_MODAL = 'CHANGE_TASK_MODAL';\r\nexport const CHANGE_ASSIGNEES = 'CHANGE_ASSIGNEES';\r\nexport const REMOVE_USER_ASSIGN = 'REMOVE_USER_ASSIGN';\r\nexport const HANDLE_CHANGE_POST_API_SAGA = 'HANDLE_CHANGE_POST_API_SAGA';\r\nexport const UPDATE_STATUS_TASK_SAGA = 'UPDATE_STATUS_TASK_SAGA';\r\n//Comment\r\nexport const GET_ALL_COMMENT_SAGA = 'GET_ALL_COMMENT_SAGA';\r\nexport const GET_ALL_COMMENT = 'GET_ALL_COMMENT';\r\nexport const CREATE_COMMENT_SAGA = 'CREATE_COMMENT_SAGA';\r\nexport const DELETE_COMMENT_SAGA = 'DELETE_COMMENT_SAGA';\r\nexport const EDIT_COMMENT = 'EDIT_COMMENT';\r\nexport const UPDATE_COMMENT_SAGA = 'UPDATE_COMMENT_SAGA';\r\n","import React from 'react'\r\nimport { withFormik } from 'formik'\r\nimport * as Yup from 'yup';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport { signupCyberbugAction } from '../../redux/actions/CyberbugsActions';\r\n\r\nfunction ModalSignUp(props) {\r\n    const {\r\n        errors,\r\n        handleChange,\r\n        handleSubmit,\r\n    } = props;\r\n\r\n\r\n    //Get data from redux \r\n    const { signUpNotification } = useSelector(state => state.AuthenticationReducer);\r\n\r\n    const renderSignUpMessage = () => {\r\n        if (signUpNotification === 1) {\r\n            return <div className=\"text-success text-center mb-2\">Sign up success. Click <span\r\n                className=\"signUpButton text-dark font-weight-bold\" style={{ cursor: 'pointer' }}\r\n                data-dismiss=\"modal\" onClick={() => {}}>Login</span> to continue!</div>\r\n        }\r\n        else if (signUpNotification === 0) {\r\n            return <div className=\"text-danger text-center mb-2\">Sign up fail. Please try again!</div>\r\n        }\r\n        else {\r\n            return <div></div>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal fade\" id=\"signUpModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"signUpModal\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\">Sign Up</h5>\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">×</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <form onSubmit={handleSubmit} className=\"container\">\r\n                            <div className=\"form-group\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-6\">\r\n                                        <input placeholder=\"Name\" name=\"name\" className=\"form-control\" onChange={handleChange} />\r\n                                        <div className=\"text-danger\">{errors.name}</div>\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <input placeholder=\"Phone Number\" name=\"phoneNumber\" className=\"form-control\"\r\n                                            onKeyDown={(e) => {\r\n                                                if (!((e.key >= 0 && e.key <= 9)\r\n                                                    || (e.key === 'Backspace')\r\n                                                    || (e.key === 'ArrowLeft')\r\n                                                    || (e.key === 'ArrowRight')\r\n                                                    || (e.key === 'Tab')\r\n                                                    || (e.ctrlKey && (e.key === 'a' || e.key === 'c' || e.key === 'x' || e.key === 'v')))) {\r\n                                                    e.preventDefault();\r\n                                                }\r\n                                            }} onChange={handleChange} />\r\n                                        <div className=\"text-danger\">{errors.phoneNumber}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input placeholder=\"Email\" name=\"email\" className=\"form-control\" onChange={handleChange} />\r\n                                <div className=\"text-danger\">{errors.email}</div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input placeholder=\"Password\" name=\"password\" type=\"password\" className=\"form-control\" onChange={handleChange} />\r\n                                <div className=\"text-danger\">{errors.password}</div>\r\n                            </div>\r\n                            {renderSignUpMessage()}\r\n                            <div className=\"text-center\">\r\n                                <button type=\"submit\" style={{ marginTop: '7px', marginBottom: '7px', paddingLeft: 35, paddingRight: 35, fontWeight: 'bold' }} className=\"btn btn-success\">Sign Up</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst SignUpCyberBugsWithFormik = withFormik({\r\n    mapPropsToValues: () => ({\r\n        name: '',\r\n        phoneNumber: '',\r\n        email: '',\r\n        password: ''\r\n    }),\r\n    validationSchema: Yup.object().shape({\r\n        name: Yup.string().required('Name is required!'),\r\n        phoneNumber: Yup.string().required('Phone number is required!'),\r\n        email: Yup.string().required('Email is required!').email('Email is invalid!'),\r\n        password: Yup.string().min(6, 'Password must be at least 6 characters').max(32, 'Password must be at most 32 characters')\r\n    }),\r\n    handleSubmit: ({ name, phoneNumber, email, password }, { props, setSubmitting }) => {\r\n        setSubmitting(true);\r\n        props.dispatch(signupCyberbugAction(name, phoneNumber, email, password));\r\n    },\r\n    displayName: 'SignUp CyberBugs',\r\n})(ModalSignUp);\r\n\r\n\r\nexport default connect()(SignUpCyberBugsWithFormik);\r\n","import { USER_SIGNIN_API, USER_SIGNUP_API } from \"../constants/Cyberbugs/Cyberbugs\"\r\n\r\n\r\n\r\nexport const signinCyberbugAction = (email, password) => {\r\n    return {\r\n        type: USER_SIGNIN_API,\r\n        userLogin: {\r\n            email: email,\r\n            password: password\r\n        }\r\n    }\r\n}\r\n\r\nexport const signupCyberbugAction = (name, phoneNumber, email, password) => {\r\n    return {\r\n        type: USER_SIGNUP_API,\r\n        userSignup: {\r\n            email: email,\r\n            passWord: password,\r\n            name: name,\r\n            phoneNumber: phoneNumber\r\n        }\r\n    }\r\n}","import React from 'react'\nimport { Button, Input } from 'antd';\nimport { UserOutlined, LockOutlined, TwitterOutlined } from '@ant-design/icons';\nimport { withFormik } from 'formik'\nimport * as Yup from 'yup';\nimport { connect } from 'react-redux';\nimport { signinCyberbugAction } from '../../../redux/actions/CyberbugsActions';\nimport ModalSignUp from '../../../components/ModalSignUp/ModalSignUp'\n\nfunction LoginCyberBugs(props) {\n\n    const {\n        errors,\n        handleChange,\n        handleSubmit,\n    } = props;\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit} className=\"container\" style={{ height: window.innerHeight }} >\n                <div className=\"d-flex flex-column justify-content-center align-items-center\" style={{ height: window.innerHeight }} >\n                    <h3 className=\"text-center\" style={{ fontWeight: 300, fontSize: 35 }}>Login CyberBugs</h3>\n                    <div className=\"d-flex mt-3\" >\n                        <Input onChange={handleChange} style={{ width: '100%', minWidth: 300 }} name=\"email\" size=\"large\" placeholder=\"email\" prefix={<UserOutlined />} />\n                    </div>\n                    <div className=\"text-danger\">{errors.email}</div>\n                    <div className=\"d-flex mt-3\">\n                        <Input onChange={handleChange} style={{ width: '100%', minWidth: 300 }} type=\"password\" name=\"password\" size=\"large\" placeholder=\"password\" prefix={<LockOutlined />} />\n                    </div>\n                    <div className=\"text-danger\">{errors.password}</div>\n\n                    <Button htmlType=\"submit\" size=\"large\" style={{ minWidth: 300, backgroundColor: 'rgb(102,117,223)', color: '#fff' }} className=\"mt-5\">Log In</Button>\n\n\n                    <div className=\"social mt-4 d-flex\">\n                        <Button style={{ backgroundColor: 'rgb(59,89,152)' }} shape=\"circle\" size={\"large\"}>\n                            <span className=\"font-weight-bold\" style={{ color: '#fff', fontSize: '15px' }} >f</span>\n                        </Button>\n                        <Button type=\"primary ml-3\" shape=\"circle\" icon={<TwitterOutlined />} size={\"large\"}>\n\n                        </Button>\n                    </div>\n\n                    <div className=\"mt-4\" style={{ fontSize: '15px' }}>Don't have an account? <span\n                        className=\"signUpButton text-dark font-weight-bold\" style={{ cursor: 'pointer' }}\n                        data-toggle=\"modal\" data-target=\"#signUpModal\" onClick={() => { }}>Sign Up</span>\n                    </div>\n                </div>\n            </form>\n            <ModalSignUp />\n        </div>\n    )\n}\n\nconst LoginCyberBugsWithFormik = withFormik({\n    mapPropsToValues: () => ({\n        email: '',\n        password: ''\n    }),\n    validationSchema: Yup.object().shape({\n        email: Yup.string().required('Email is required!').email('email is invalid!'),\n        password: Yup.string().min(6, 'password must have min 6 characters').max(32, 'password  have max 32 characters')\n\n    }),\n    handleSubmit: ({ email, password }, { props, setSubmitting }) => {\n        setSubmitting(true);\n        props.dispatch(signinCyberbugAction(email, password));\n    },\n    displayName: 'Login CyberBugs',\n})(LoginCyberBugs);\n\n\nexport default connect()(LoginCyberBugsWithFormik);\n","import React from 'react'\nimport styleLoading from './LoadingComponent.module.css';\nimport { useSelector } from 'react-redux'\n\nexport default function LoadingComponent() {\n\n    const { isLoading } = useSelector(state => state.LoadingReducer)\n\n    if (isLoading) {\n        return (\n            <div className={styleLoading.bgLoading}>\n                <img src={require('../../../assets/imgLoading/loading.gif').default} alt=\"loading.gif\" />\n            </div>\n        )\n    } else {\n        return ''\n    }\n}\n","import { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { GET_TASK_DETAIL_SAGA, UPDATE_STATUS_TASK_SAGA } from \"../../../redux/constants/Cyberbugs/Cyberbugs\";\r\n\r\nexport default function ContentMain(props) {\r\n\r\n    const { projectDetail } = props;\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDragEnd = (result) => {\r\n        let { projectId, taskId } = JSON.parse(result.draggableId); //Lấy ra chuỗi sau mỗi lần draggable\r\n\r\n        let { source, destination } = result;\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n        if (source.index === destination.index && source.droppableId === destination.droppableId) {\r\n            return;\r\n        }\r\n\r\n\r\n\r\n        //gọi api cập nhật lại status\r\n        dispatch({\r\n            type: UPDATE_STATUS_TASK_SAGA,\r\n            taskUpdateStatus: {\r\n                \"taskId\": taskId,\r\n                \"statusId\": destination.droppableId,\r\n                \"projectId\": projectId\r\n            }\r\n        })\r\n    }\r\n\r\n    const renderCardTaskList = () => {\r\n        return <DragDropContext onDragEnd={handleDragEnd}>\r\n            {\r\n                projectDetail.lstTask?.map((taskListDetail, index) => {\r\n                    return <Droppable key={index} droppableId={taskListDetail.statusId}>\r\n                        {(provided) => {\r\n                            return <div className=\"card pb-2\" style={{ width: '17rem', height: 'auto' }} >\r\n                                <div className=\"card-header\">\r\n                                    {taskListDetail.statusName}\r\n                                </div>\r\n                                <div\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.droppableProps}\r\n                                    key={index}\r\n                                    className=\"list-group list-group-flush\" style={{ height: '100%' }}>\r\n                                    {taskListDetail.lstTaskDeTail.map((task, index) => {\r\n                                        return <Draggable key={task.taskId.toString()} index={index} draggableId={JSON.stringify({ projectId: task.projectId, taskId: task.taskId })}>\r\n                                            {(provided) => {\r\n                                                return <div\r\n                                                    ref={provided.innerRef}\r\n                                                    {...provided.draggableProps}\r\n                                                    {...provided.dragHandleProps}\r\n                                                    key={index} className=\"list-group-item\" data-toggle=\"modal\" data-target=\"#infoModal\" onClick={() => {\r\n                                                        dispatch({ type: GET_TASK_DETAIL_SAGA, taskId: task.taskId });\r\n\r\n                                                    }}>\r\n                                                    <p className=\"font-weight-300\">\r\n                                                        {task.taskName}\r\n                                                    </p>\r\n                                                    <div className=\"block\" style={{ display: 'flex' }}>\r\n                                                        <div className=\"block-left\">\r\n                                                            <p className=\"text-danger\">{task.priorityTask.priority}</p>\r\n                                                        </div>\r\n                                                        <div className=\"block-right\">\r\n                                                            <div className=\"avatar-group\" style={{ display: 'flex' }}>\r\n                                                                {task.assigness.map((mem, index) => {\r\n                                                                    return <div className=\"avatar\" key={index}>\r\n                                                                        <img src={mem.avatar} alt={mem.avatar} />\r\n                                                                    </div>\r\n                                                                })}\r\n\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            }}\r\n                                        </Draggable>\r\n                                    })}\r\n\r\n                                    {provided.placeholder}\r\n\r\n                                </div>\r\n\r\n\r\n\r\n                            </div>\r\n                        }}\r\n\r\n                    </Droppable>\r\n                })}\r\n\r\n        </DragDropContext>\r\n    }\r\n\r\n    return (\r\n        <div className=\"content\" style={{ display: 'flex' }}>\r\n\r\n            {renderCardTaskList()}\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function HeaderMain(props) {\r\n\r\n    const { projectDetail } = props;\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <nav aria-label=\"breadcrumb\">\r\n                <ol className=\"breadcrumb\" style={{ backgroundColor: 'white' }}>\r\n                    <li className=\"breadcrumb-item\">Project</li>\r\n                    <li className=\"breadcrumb-item\">CyberLearn</li>\r\n                    <li className=\"breadcrumb-item\">Project management</li>\r\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n                        {projectDetail.projectName}\r\n                    </li>\r\n                </ol>\r\n            </nav>\r\n        </div>\r\n\r\n\r\n    )\r\n}","import React from 'react'\r\nimport ReactHtmlParser from \"react-html-parser\";\r\n\r\n\r\nexport default function InfoMain(props) {\r\n    const { projectDetail } = props;\r\n    const renderAvatar = () => {\r\n\r\n        return projectDetail.members?.map((user, index) => {\r\n            return <div key={index} className=\"avatar\">\r\n                <img src={user.avatar} alt={user.avatar} />\r\n            </div>\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>{projectDetail.projectName}</h3>\r\n\r\n            <section>\r\n                {ReactHtmlParser(projectDetail.description)}\r\n            </section>\r\n            <div className=\"info\" style={{ display: 'flex' }}>\r\n                <div className=\"search-block\">\r\n                    <input className=\"search\" />\r\n                    <i className=\"fa fa-search\" />\r\n                </div>\r\n                <div className=\"avatar-group\" style={{ display: 'flex' }}>\r\n                    {renderAvatar()}\r\n                </div>\r\n                <div style={{ marginLeft: 20 }} className=\"text\">Only My Issues</div>\r\n                <div style={{ marginLeft: 20 }} className=\"text\">Recently Updated</div>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ContentMain from '../../components/Cyberbugs/Main/ContentMain'\r\nimport HeaderMain from '../../components/Cyberbugs/Main/HeaderMain'\r\nimport InfoMain from '../../components/Cyberbugs/Main/InfoMain'\r\nimport { GET_PROJECT_DETAIL_SAGA } from '../../redux/constants/Cyberbugs/Cyberbugs';\r\n\r\nexport default function ProjectDetail(props) {\r\n    let { projectDetail } = useSelector(state => state.ProjectReducer);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        const { projectId } = props.match.params;\r\n        dispatch({\r\n            type: GET_PROJECT_DETAIL_SAGA,\r\n            projectId: projectId\r\n        })\r\n    }, [dispatch, props.match.params])\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <HeaderMain projectDetail={projectDetail} />\r\n            <InfoMain projectDetail={projectDetail} />\r\n            <ContentMain projectDetail={projectDetail} />\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport default function MenuCyberbugs() {\r\n    return (\r\n        <div className=\"menu\">\r\n            <div className=\"account\">\r\n                <div className=\"avatar\">\r\n                    <img src={require(\"../../assets/img/download.jfif\").default} alt=\"\" />\r\n                </div>\r\n                <div className=\"account-info\">\r\n                    <p>CyberLearn.vn</p>\r\n                    <p>Report bugs</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"control\">\r\n                <div>\r\n                    <i className=\"fa fa-credit-card mr-1\" />\r\n                    <span>Cyber Board</span>\r\n                </div>\r\n                <div>\r\n                    <i className=\"fa fa-cog mr-1\" />\r\n                    <NavLink className=\"text-dark\" activeStyle={{ color: 'blue' }} to='/projectmanagement' activeClassName=\"active font-weight-bold  text-primary\" >Project management</NavLink>\r\n                </div>\r\n                <div>\r\n                    <i className=\"fa fa-cog mr-1\" />\r\n                    <NavLink className=\"text-dark\" activeStyle={{ color: 'blue' }} to=\"/createproject\" activeClassName=\"active font-weight-bold text-primary\" >Create project</NavLink>\r\n                </div>\r\n                <div>\r\n                    <i className=\"fas fa-user mr-1\" />\r\n                    <NavLink className=\"text-dark\" activeStyle={{ color: 'blue' }} to='/usermanagement' activeClassName=\"active font-weight-bold  text-primary\" >User management</NavLink>\r\n                </div>\r\n            </div>\r\n            <div className=\"feature\">\r\n                <div>\r\n                    <i className=\"fa fa-truck mr-1\" />\r\n                    <span> Releases</span>\r\n                </div>\r\n                <div>\r\n                    <i className=\"fa fa-equals mr-1\" />\r\n                    <span> Issues and filters</span>\r\n                </div>\r\n                <div>\r\n                    <i className=\"fa fa-paste mr-1\" />\r\n                    <span> Pages</span>\r\n                </div>\r\n                <div>\r\n                    <i className=\"fa fa-location-arrow mr-1\" />\r\n                    <span> Reports</span>\r\n                </div>\r\n                <div>\r\n                    <i className=\"fa fa-box mr-1\" />\r\n                    <span> Components</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export const DOMAIN = 'http://svcy.myclass.vn/api';\r\n\r\nexport const DOMAIN_CYBERBUG = 'http://casestudy.cyberlearn.vn/api';\r\n\r\nexport const TOKEN = 'access_token';\r\nexport const USER_LOGIN = 'USER_LOGIN';\r\n\r\nexport const STATUS_CODE = {\r\n    SUCCESS : 200,\r\n    NOT_FOUND: 404,\r\n    SERVER_ERROR:500\r\n}","import React, { useEffect, useRef, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport { CHANGE_ASSIGNEES, CHANGE_TASK_MODAL, CREATE_COMMENT_SAGA, DELETE_COMMENT_SAGA, EDIT_COMMENT, GET_ALL_COMMENT_SAGA, GET_ALL_PRIORITY_SAGA, GET_ALL_STATUS_SAGA, GET_ALL_TASK_TYPE_SAGA, HANDLE_CHANGE_POST_API_SAGA, REMOVE_USER_ASSIGN, UPDATE_COMMENT_SAGA } from '../../../redux/constants/Cyberbugs/Cyberbugs';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport { USER_LOGIN } from '../../../util/constants/settingSystem';\r\nimport { Select, List, Avatar } from 'antd';\r\n\r\nexport default function ModalCyberbugs() {\r\n    const { taskDetailModal } = useSelector(state => state.TaskReducer);\r\n    const { arrStatus } = useSelector(state => state.StatusReducer);\r\n    const { arrPriority } = useSelector(state => state.PriorityReducer);\r\n    const { arrTaskType } = useSelector(state => state.TaskReducer);\r\n    const { projectDetail } = useSelector(state => state.ProjectReducer);\r\n    const [visibleEditor, setVisibleEditor] = useState(false);\r\n    const [historyContent, setHistoryContent] = useState(taskDetailModal.description);\r\n    const [content, setContent] = useState(taskDetailModal.description);\r\n\r\n    const [visibleCommentEditor, setVisibleCommentEditor] = useState(false);\r\n    const { commentEdit } = useSelector(state => state.TaskReducer);\r\n    const [commmentEditContent, setCommmentEditContent] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const editorRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: GET_ALL_STATUS_SAGA });\r\n        dispatch({ type: GET_ALL_PRIORITY_SAGA });\r\n        dispatch({ type: GET_ALL_TASK_TYPE_SAGA });\r\n        dispatch({ type: GET_ALL_COMMENT_SAGA });\r\n    }, [dispatch])\r\n\r\n    const renderCommentContent = (item) => {\r\n        if (item.id !== commentEdit.id) {\r\n            return <div>{ReactHtmlParser(item.commentContent)}</div>\r\n        }\r\n        else {\r\n            return <div><Editor\r\n                onInit={(evt, editor) => editorRef.current = editor}\r\n                initialValue={commentEdit.content}\r\n                init={{\r\n                    height: 150,\r\n                    menubar: false,\r\n                    plugins: [\r\n                        'advlist autolink lists link image charmap print preview anchor',\r\n                        'searchreplace visualblocks code fullscreen',\r\n                        'insertdatetime media table paste code help wordcount'\r\n                    ],\r\n                    toolbar: 'undo redo | formatselect | ' +\r\n                        'bold italic backcolor | alignleft aligncenter ' +\r\n                        'alignright alignjustify | bullist numlist outdent indent | ' +\r\n                        'removeformat | help',\r\n                    content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\r\n                }}\r\n                onEditorChange={(newValue, editor) => setCommmentEditContent(newValue)}\r\n            />\r\n                <button className=\"btn btn-primary\" onClick={() => {\r\n                    dispatch({\r\n                        type: UPDATE_COMMENT_SAGA,\r\n                        commentUpdate: {\r\n                            taskId: taskDetailModal.taskId,\r\n                            id: item.id,\r\n                            contentComment: commmentEditContent\r\n                        }\r\n                    })\r\n                }}>Save</button>\r\n                <button className=\"btn cancelCommentButton m-2\" onClick={() => {\r\n                    dispatch({\r\n                        type: EDIT_COMMENT,\r\n                        commentEdit: {\r\n                            id: -1,\r\n                            content: ''\r\n                        }\r\n                    })\r\n                }}>Cancel</button>\r\n            </div>\r\n        }\r\n    }\r\n\r\n    const renderListComment = () => {\r\n        const listReOrderedComment = [];\r\n        for (let i = taskDetailModal.lstComment.length - 1; i >= 0; i--) {\r\n            listReOrderedComment.push({\r\n                id: taskDetailModal.lstComment[i].id,\r\n                name: taskDetailModal.lstComment[i].name,\r\n                avatar: taskDetailModal.lstComment[i].avatar,\r\n                commentContent: taskDetailModal.lstComment[i].commentContent\r\n            })\r\n        }\r\n\r\n        return <List\r\n            itemLayout=\"vertical\"\r\n            size=\"large\"\r\n            pagination={{\r\n                pageSize: 3,\r\n            }}\r\n            dataSource={listReOrderedComment}\r\n\r\n            renderItem={item => (\r\n                <List.Item key={item.id} >\r\n                    <List.Item.Meta\r\n                        avatar={<Avatar src={item.avatar} />}\r\n                        title={<a style={{ fontWeight: 'bold' }} href={item.href}>{item.name}</a>}\r\n                        description={<div className=\"text-dark\" style={{ fontSize: '14px' }}>\r\n                            {renderCommentContent(item)}\r\n                            <div>\r\n                                <span className=\"editCommentButton\" style={{ marginRight: 8 }}\r\n                                    onClick={() => {\r\n                                        setCommmentEditContent(item.commentContent)\r\n                                        dispatch({\r\n                                            type: EDIT_COMMENT,\r\n                                            commentEdit: {\r\n                                                id: item.id,\r\n                                                content: item.commentContent\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                >Edit</span>\r\n                                •\r\n                                <span className=\"editCommentButton\" style={{ marginLeft: 8 }}\r\n                                    onClick={() => {\r\n                                        dispatch({\r\n                                            type: DELETE_COMMENT_SAGA,\r\n                                            commentObject: {\r\n                                                taskId: taskDetailModal.taskId,\r\n                                                idComment: item.id\r\n                                            }\r\n                                        })\r\n                                    }}>Delete</span>\r\n                            </div>\r\n                        </div>}\r\n                    />\r\n                </List.Item>\r\n            )}\r\n        />\r\n    }\r\n\r\n\r\n    const renderCommentEditor = () => {\r\n        let commentDescription = <span className=\"text-secondary\"\r\n            style={{\r\n                padding: '10px 400px 16px 12px',\r\n                border: '1px solid rgb(223, 225, 230)',\r\n                borderRadius: '4px',\r\n                cursor: 'pointer'\r\n            }}>Add a comment...</span>;\r\n\r\n        return <div>\r\n            {visibleCommentEditor ? <div> <Editor\r\n                name=\"comment\"\r\n                initialValue=\"\"\r\n                init={{\r\n                    selector: 'textarea#myTextArea',\r\n                    height: 150,\r\n                    menubar: false,\r\n                    plugins: [\r\n                        'advlist autolink lists link image charmap print preview anchor',\r\n                        'searchreplace visualblocks code fullscreen',\r\n                        'insertdatetime media table paste code help wordcount'\r\n                    ],\r\n                    toolbar: 'undo redo | formatselect | ' +\r\n                        'bold italic backcolor | alignleft aligncenter ' +\r\n                        'alignright alignjustify | bullist numlist outdent indent | ' +\r\n                        'removeformat | help',\r\n                    content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\r\n                }}\r\n\r\n                onEditorChange={(content, editor) => {\r\n                    setContent(content);\r\n                }}\r\n            />\r\n                <button className=\"btn btn-primary\" onClick={() => {\r\n                    setVisibleCommentEditor(!visibleCommentEditor);\r\n\r\n                    dispatch({\r\n                        type: CREATE_COMMENT_SAGA,\r\n                        commentObject: {\r\n                            taskId: taskDetailModal.taskId,\r\n                            contentComment: content\r\n                        }\r\n                    })\r\n\r\n                }}>Save</button>\r\n                <button className=\"btn cancelCommentButton m-2\" onClick={() => {\r\n                    setVisibleCommentEditor(!visibleCommentEditor);\r\n                }}>Cancel</button>\r\n            </div> : <div onClick={() => {\r\n                setVisibleCommentEditor(!visibleCommentEditor);\r\n            }}>{commentDescription}</div>}\r\n\r\n\r\n        </div>\r\n    }\r\n\r\n    const renderDescription = () => {\r\n        let jsxDescription = <span className=\"text-secondary\">Add a description...</span>;\r\n        if (taskDetailModal.description) {\r\n            jsxDescription = <span>{ReactHtmlParser(taskDetailModal.description)}</span>;\r\n        }\r\n\r\n        return <div>\r\n            {visibleEditor ? <div> <Editor\r\n                name=\"description\"\r\n                initialValue={taskDetailModal.description}\r\n                init={{\r\n                    initialValue: '',\r\n                    selector: 'textarea#myTextArea',\r\n                    height: 500,\r\n                    menubar: false,\r\n                    plugins: [\r\n                        'advlist autolink lists link image charmap print preview anchor',\r\n                        'searchreplace visualblocks code fullscreen',\r\n                        'insertdatetime media table paste code help wordcount'\r\n                    ],\r\n                    toolbar: 'undo redo | formatselect | ' +\r\n                        'bold italic backcolor | alignleft aligncenter ' +\r\n                        'alignright alignjustify | bullist numlist outdent indent | ' +\r\n                        'removeformat | help',\r\n                    content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\r\n                }}\r\n                onEditorChange={(content, editor) => {\r\n                    setContent(content);\r\n                }}\r\n            />\r\n\r\n                <button className=\"btn btn-primary m-2\" onClick={() => {\r\n                    dispatch({\r\n                        type: HANDLE_CHANGE_POST_API_SAGA,\r\n                        actionType: CHANGE_TASK_MODAL,\r\n                        name: 'description',\r\n                        value: content\r\n                    })\r\n                    setVisibleEditor(false);\r\n                }}>Save</button>\r\n                <button className=\"btn btn-primary m-2\" onClick={() => {\r\n                    dispatch({\r\n                        type: HANDLE_CHANGE_POST_API_SAGA,\r\n                        actionType: CHANGE_TASK_MODAL,\r\n                        name: 'description',\r\n                        value: historyContent\r\n                    })\r\n                    setVisibleEditor(false)\r\n                }}>Close</button>\r\n            </div> : <div onClick={() => {\r\n\r\n                setHistoryContent(taskDetailModal.description);\r\n                setVisibleEditor(!visibleEditor);\r\n\r\n            }}>{jsxDescription}</div>}\r\n\r\n\r\n        </div>\r\n    }\r\n\r\n    const renderTimeTracking = () => {\r\n\r\n        const { timeTrackingSpent, timeTrackingRemaining } = taskDetailModal;\r\n\r\n        const max = Number(timeTrackingSpent) + Number(timeTrackingRemaining);\r\n        const percent = Math.round(Number(timeTrackingSpent) / max * 100)\r\n\r\n        return <div>\r\n            <div style={{ display: 'flex' }}>\r\n                <i className=\"fa fa-clock\" />\r\n                <div style={{ width: '100%' }}>\r\n\r\n                    <div className=\"progress\">\r\n                        <div className=\"progress-bar\" role=\"progressbar\" style={{ width: `${percent}%` }} aria-valuenow={Number(timeTrackingSpent)} aria-valuemin={Number(timeTrackingRemaining)} aria-valuemax={max} />\r\n                    </div>\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                        <p className=\"logged\">{Number(timeTrackingRemaining)}h logged</p>\r\n                        <p className=\"estimate-time\">{Number(timeTrackingRemaining)}h remaining</p>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-6\">\r\n                    <input className=\"form-control\" name=\"timeTrackingSpent\" onChange={handleChange} />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <input className=\"form-control\" name=\"timeTrackingRemaining\" onChange={handleChange} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        dispatch({\r\n            type: HANDLE_CHANGE_POST_API_SAGA,\r\n            actionType: CHANGE_TASK_MODAL,\r\n            name,\r\n            value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal fade\" id=\"infoModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"infoModal\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog modal-info\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <div className=\"task-title\">\r\n                            <i className=\"fa fa-bookmark mr-2\" />\r\n                            <select name=\"typeId\" value={taskDetailModal.typeId} onChange={handleChange}>\r\n                                {arrTaskType.map((tp, index) => {\r\n                                    return <option key={index} value={tp.id}>{tp.taskType}</option>\r\n                                })}\r\n                            </select>\r\n\r\n                            <span>{taskDetailModal.taskName}</span>\r\n                        </div>\r\n                        <div style={{ display: 'flex' }} className=\"task-click\">\r\n                            <div>\r\n                                <i className=\"fab fa-telegram-plane\" />\r\n                                <span style={{ paddingRight: 20 }}> Give feedback</span>\r\n                            </div>\r\n                            <div>\r\n                                <i className=\"fa fa-link\" />\r\n                                <span style={{ paddingRight: 20 }}> Copy link</span>\r\n                            </div>\r\n                            <i className=\"fa fa-trash-alt='xyz'\" style={{ cursor: 'pointer' }} />\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">×</span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-8\">\r\n                                    <p className=\"issue\">This is an issue of type: Task.</p>\r\n                                    <div className=\"description\">\r\n                                        <p style={{ fontWeight: 'bold' }}>Description</p>\r\n                                        {renderDescription()}\r\n                                    </div>\r\n                                    <div className=\"comment\">\r\n                                        <p style={{ fontWeight: 'bold', marginTop: '20px' }}>Comments</p>\r\n                                        <div className=\"block-comment\" style={{ display: 'flex' }}>\r\n                                            <div className=\"avatar\">\r\n                                                <img src={JSON.parse(localStorage.getItem(USER_LOGIN))?.avatar} alt='xyz' />\r\n                                            </div>\r\n                                            <div className=\"input-comment\">\r\n                                                {renderCommentEditor()}\r\n                                            </div>\r\n                                        </div>\r\n                                        {renderListComment()}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-4\">\r\n                                    <div className=\"status\">\r\n                                        <p style={{ fontWeight: 'bold', marginBottom: '5px' }}>STATUS</p>\r\n                                        <select style={{ fontSize: '15px' }} name=\"statusId\" className=\"custom-select\" value={taskDetailModal.statusId}\r\n                                            onChange={(e) => { handleChange(e) }}>\r\n                                            {arrStatus.map((status, index) => {\r\n                                                return <option value={status.statusId} key={index}>{status.statusName}</option>\r\n                                            })}\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"assignees\" style={{ marginBottom: 20 }}>\r\n                                        <p style={{ fontWeight: 'bold', marginBottom: '5px' }}>ASSIGNEES</p>\r\n                                        <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n                                            {\r\n                                                taskDetailModal.assigness.map((user, index) => {\r\n                                                    return <div key={index} className=\"item\">\r\n                                                        <div className=\"avatar\">\r\n                                                            <img src={user.avatar} alt={user.avatar} />\r\n                                                        </div>\r\n                                                        <p className=\"name mt-1 ml-1\">\r\n                                                            {user.name}\r\n                                                            <i className=\"fa fa-times\" style={{ marginLeft: 5 }} onClick={() => {\r\n                                                                dispatch({\r\n                                                                    type: HANDLE_CHANGE_POST_API_SAGA,\r\n                                                                    actionType: REMOVE_USER_ASSIGN,\r\n                                                                    userId: user.id\r\n                                                                })\r\n                                                            }} />\r\n                                                        </p>\r\n                                                    </div>\r\n                                                })\r\n                                            }\r\n                                            <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Select\r\n                                                    options={projectDetail.members?.filter(mem => {\r\n                                                        let index = taskDetailModal.assigness?.findIndex(us => us.id === mem.userId);\r\n                                                        if (index !== -1) {\r\n                                                            return false;\r\n                                                        }\r\n                                                        return true;\r\n                                                    }).map((mem, index) => {\r\n                                                        return { value: mem.userId, label: mem.name };\r\n                                                    })}\r\n                                                    optionFilterProp=\"label\"\r\n                                                    style={{ width: '100%' }}\r\n                                                    name=\"lstUser\"\r\n                                                    value=\"+ Add more\"\r\n                                                    className=\"form-control\"\r\n                                                    onSelect={(value) => {\r\n                                                        if (value === '0') {\r\n                                                            return;\r\n                                                        }\r\n                                                        let userSelected = projectDetail.members.find(mem => mem.userId === parseInt(value));\r\n                                                        userSelected = { ...userSelected, id: userSelected.userId };\r\n                                                        //dispatchReducer\r\n                                                        dispatch({\r\n                                                            type: HANDLE_CHANGE_POST_API_SAGA,\r\n                                                            actionType: CHANGE_ASSIGNEES,\r\n                                                            userSelected\r\n                                                        })\r\n                                                    }}>\r\n\r\n\r\n                                                </Select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"priority\" style={{ marginBottom: 20 }}>\r\n                                        <p style={{ fontWeight: 'bold', marginBottom: '5px' }}>PRIORITY</p>\r\n                                        <select name=\"priorityId\" className=\"form-control\" value={taskDetailModal.priorityId} onChange={(e) => {\r\n                                            handleChange(e);\r\n                                        }}>\r\n                                            {arrPriority.map((item, index) => {\r\n                                                return <option key={index} value={item.priorityId}>{item.priority}</option>\r\n                                            })}\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"estimate\">\r\n                                        <p style={{ fontWeight: 'bold', marginBottom: '5px' }}>ORIGINAL ESTIMATE (HOURS)</p>\r\n                                        <input name=\"originalEstimate\" type=\"text\" className=\"estimate-hours\" value={taskDetailModal.originalEstimate} onChange={(e) => {\r\n                                            handleChange(e);\r\n                                        }} />\r\n                                    </div>\r\n                                    <div className=\"time-tracking\">\r\n                                        <h6>TIME TRACKING</h6>\r\n                                        {renderTimeTracking()}\r\n                                    </div>\r\n                                    <div style={{ color: '#929398' }}>Create at a month ago</div>\r\n                                    <div style={{ color: '#929398' }}>Update at a few seconds ago</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { Editor } from '@tinymce/tinymce-react'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Select, Slider } from 'antd';\r\nimport { useSelector, useDispatch, connect } from 'react-redux'\r\nimport { CREATE_TASK_SAGA, GET_ALL_PRIORITY_SAGA, GET_ALL_STATUS_SAGA, GET_ALL_TASK_TYPE_SAGA, GET_PROJECT_DROPDOWN_LIST_SAGA, GET_USER_BY_PROJECT_ID_SAGA, GET_USER_SAGA, SET_SUBMIT_CREATE_TASK } from '../../../redux/constants/Cyberbugs/Cyberbugs';\r\nimport { withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst children = [];\r\n\r\nfor (let i = 10; i < 36; i++) {\r\n    children.push(<Option key={i.toString(36) + i}>{i.toString(36) + i}</Option>);\r\n}\r\n\r\nfunction FormCreateTask(props) {\r\n\r\n    //Get data from redux \r\n    const { projectDropDownList } = useSelector(state => state.ProjectReducer);\r\n    const { arrTaskType } = useSelector(state => state.TaskReducer);\r\n    const { arrPriority } = useSelector(state => state.PriorityReducer);\r\n    const { arrStatus } = useSelector(state => state.StatusReducer);\r\n    const { arrUser } = useSelector(state => state.UserReducer);\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //Hàm biến đổi options cho thẻ select\r\n    const userOptions = arrUser.map((item, index) => {\r\n        return { value: item.userId, label: item.name }\r\n    })\r\n\r\n    const {\r\n        handleChange,\r\n        handleSubmit,\r\n        setFieldValue\r\n    } = props;\r\n\r\n    const [size] = React.useState('default');\r\n\r\n    const [timeTracking, setTimetracking] = useState({\r\n        timeTrackingSpent: 0,\r\n        timeTrackingRemaining: 0\r\n    })\r\n\r\n\r\n\r\n    //hook\r\n    useEffect(() => {\r\n        dispatch({ type: GET_PROJECT_DROPDOWN_LIST_SAGA });\r\n        dispatch({ type: GET_ALL_TASK_TYPE_SAGA });\r\n        dispatch({ type: GET_ALL_PRIORITY_SAGA });\r\n        dispatch({ type: GET_ALL_STATUS_SAGA });\r\n        dispatch({ type: GET_USER_SAGA, keyWord: '' });\r\n\r\n        //Load sự kiện submit lên drawer nút submit\r\n        dispatch({ type: SET_SUBMIT_CREATE_TASK, submitFunction: handleSubmit });\r\n    }, [dispatch, handleSubmit])\r\n\r\n\r\n    const children = [];\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"form-group\" onSubmit={handleSubmit}>\r\n                <p>Project</p>\r\n                <select name=\"projectId\" className=\"form-control\" onChange={(e) => {\r\n                    //Dispatch giá trị làm thay đổi arrUser\r\n                    let { value } = e.target;\r\n                    dispatch({\r\n                        type: GET_USER_BY_PROJECT_ID_SAGA,\r\n                        idProject: value\r\n                    })\r\n                    //Cập nhật giá trị cho project Id\r\n                    setFieldValue('projectId', e.target.value);\r\n                }}>\r\n                    {projectDropDownList.map((project, index) => {\r\n                        return <option key={index} value={project.id}>{project.projectName}</option>\r\n                    })}\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <p>Task name</p>\r\n                <input name=\"taskName\" className=\"form-control\" onChange={handleChange} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <p>Status</p>\r\n                <select name=\"statusId\" className=\"form-control\" onChange={handleChange}>\r\n                    {arrStatus.map((statusItem, index) => {\r\n                        return <option key={index} value={statusItem.statusId}>{statusItem.statusName}</option>\r\n                    })}\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <p>Priority</p>\r\n                        <select name=\"priorityId\" className=\"form-control\" onChange={handleChange}>\r\n                            {arrPriority.map((priority, index) => {\r\n                                return <option key={index} value={priority.priorityId}>\r\n                                    {priority.priority}\r\n                                </option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <p>Task type</p>\r\n                        <select className=\"form-control\" name=\"typeId\" onChange={handleChange}>\r\n                            {arrTaskType.map((taskType, index) => {\r\n                                return <option key={index} value={taskType.id}>{taskType.taskType}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <p>Assignees</p>\r\n                        <Select\r\n                            mode=\"multiple\"\r\n                            size={size}\r\n                            options={userOptions}\r\n                            placeholder=\"Please select\"\r\n                            optionFilterProp=\"label\"\r\n                            onChange={(values) => {\r\n                                setFieldValue('listUserAsign', values);\r\n                            }}\r\n                            onSelect={(value) => {\r\n                            }}\r\n                            style={{ width: '100%' }}\r\n                        >\r\n                            {children}\r\n                        </Select>\r\n                        <div className=\"row mt-3\">\r\n                            <div className=\"col-12\">\r\n                                <p>Original Estimate</p>\r\n                                <input type=\"number\" min=\"0\" name=\"originalEstimate\" defaultValue=\"0\" className=\"form-control\" height=\"30\" onChange={handleChange} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <p>Time tracking</p>\r\n\r\n                        <Slider defaultValue={30} value={timeTracking.timeTrackingSpent} max={Number(timeTracking.timeTrackingSpent) + Number(timeTracking.timeTrackingRemaining)} />\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 text-left font-weight-bold\">{timeTracking.timeTrackingSpent}h logged</div>\r\n                            <div className=\"col-6 text-right font-weight-bold\">{timeTracking.timeTrackingRemaining}h remaining</div>\r\n                        </div>\r\n                        <div className=\"row\" style={{ marginTop: 5 }}>\r\n                            <div className=\"col-6\">\r\n                                <p>Time spent</p>\r\n                                <input type=\"number\" defaultValue=\"0\" min=\"0\" className=\"form-control\" name=\"timeTrackingSpent\" onChange={(e) => {\r\n                                    setTimetracking({\r\n                                        ...timeTracking,\r\n                                        timeTrackingSpent: e.target.value\r\n                                    });\r\n\r\n                                    setFieldValue('timeTrackingSpent', e.target.value);\r\n                                }} />\r\n                            </div>\r\n\r\n                            <div className=\"col-6\">\r\n                                <p>Time remaining</p>\r\n                                <input type=\"number\" defaultValue=\"0\" min=\"0\" className=\"form-control\" name=\"timeTrackingRemaining\" onChange={(e) => {\r\n                                    setTimetracking({\r\n                                        ...timeTracking,\r\n                                        timeTrackingRemaining: e.target.value\r\n                                    });\r\n\r\n                                    setFieldValue('timeTrackingRemaining', e.target.value);\r\n                                }} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <p>Description</p>\r\n                <Editor\r\n                    name=\"description\"\r\n                    initialValue=\"\"\r\n                    init={{\r\n                        selector: 'textarea#myTextArea',\r\n                        height: 500,\r\n                        menubar: false,\r\n                        plugins: [\r\n                            'advlist autolink lists link image charmap print preview anchor',\r\n                            'searchreplace visualblocks code fullscreen',\r\n                            'insertdatetime media table paste code help wordcount'\r\n                        ],\r\n                        toolbar: 'undo redo | formatselect | ' +\r\n                            'bold italic backcolor | alignleft aligncenter ' +\r\n                            'alignright alignjustify | bullist numlist outdent indent | ' +\r\n                            'removeformat | help',\r\n                        content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\r\n                    }}\r\n\r\n                    onEditorChange={(content, editor) => {\r\n                        setFieldValue('description', content);\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst frmCreateTask = withFormik({\r\n    enableReinitialize: true,\r\n    mapPropsToValues: (props) => {\r\n        const { projectDropDownList, arrTaskType, arrPriority, arrStatus } = props;\r\n\r\n        return {\r\n            taskName: '',\r\n            description: '',\r\n            statusId: arrStatus[0]?.statusId,\r\n            originalEstimate: 0,\r\n            timeTrackingSpent: 0,\r\n            timeTrackingRemaining: 0,\r\n            projectId: projectDropDownList[0]?.id,\r\n            typeId: arrTaskType[0]?.id,\r\n            priorityId: arrPriority[0]?.priorityId,\r\n            listUserAsign: []\r\n        }\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n\r\n\r\n    }),\r\n    handleSubmit: (values, { props, setSubmitting }) => {\r\n        props.dispatch({\r\n            type: CREATE_TASK_SAGA,\r\n            taskObject: values\r\n        })\r\n    },\r\n    displayName: 'createTaskForm',\r\n})(FormCreateTask);\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        projectDropDownList: state.ProjectReducer.projectDropDownList,\r\n        arrTaskType: state.TaskReducer.arrTaskType,\r\n        arrPriority: state.PriorityReducer.arrPriority,\r\n        arrStatus: state.StatusReducer.arrStatus,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(frmCreateTask);","import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();","import React, { useState } from 'react'\r\nimport { Avatar, Layout, Menu } from 'antd';\r\nimport {\r\n    BarsOutlined,\r\n    SearchOutlined,\r\n    LogoutOutlined,\r\n    LoginOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\nimport { OPEN_FORM_CREATE_TASK } from '../../redux/constants/Cyberbugs/Cyberbugs';\r\nimport FormCreateTask from '../Forms/FormCreateTask/FormCreateTask';\r\nimport { useDispatch } from 'react-redux';\r\nimport { history } from '../../util/history';\r\nimport { TOKEN, USER_LOGIN } from '../../util/constants/settingSystem';\r\nimport { UserOutlined } from '@ant-design/icons';\r\n\r\nconst { Sider } = Layout;\r\nexport default function SidebarCyberbugs() {\r\n    let dispatch = useDispatch();\r\n    const [state, setState] = useState({\r\n        collapsed: false,\r\n    })\r\n    const toggle = () => {\r\n        setState({\r\n            collapsed: !state.collapsed,\r\n        });\r\n    };\r\n\r\n    const renderAuthenticationItem = () => {\r\n        if (localStorage.getItem(USER_LOGIN) && localStorage.getItem(TOKEN)) {\r\n            return <Menu.Item key=\"3\" icon={<LogoutOutlined style={{ fontSize: 20 }} />}\r\n                onClick={() => {\r\n                    localStorage.removeItem(USER_LOGIN);\r\n                    localStorage.removeItem(TOKEN);\r\n                    history.push('/login');\r\n                }}>\r\n                Logout\r\n            </Menu.Item>\r\n        }\r\n        else {\r\n            return <Menu.Item key=\"3\" icon={<LoginOutlined style={{ fontSize: 20 }} />}\r\n                onClick={() => { history.push('/login'); }}>\r\n                Login\r\n            </Menu.Item>\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <Sider trigger={null} collapsible collapsed={state.collapsed} style={{ height: '133vh' }}>\r\n                <div className=\"text-right pr-2\" onClick={toggle} ><BarsOutlined style={{ cursor: 'pointer', color: '#fff', fontSize: 25 }} /></div>\r\n                <div className=\"ml-2 mb-3\">\r\n                    {localStorage.getItem(USER_LOGIN) ?\r\n                        <Avatar src={JSON.parse(localStorage.getItem(USER_LOGIN))?.avatar} alt='avatar' />\r\n                        : <Avatar icon={<UserOutlined />} />}\r\n\r\n                    <span className=\"ml-2\" style={{ fontWeight: 'bold', color: 'white' }}>{JSON.parse(localStorage.getItem(USER_LOGIN))?.name}</span>\r\n                </div>\r\n                <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\r\n                    <Menu.Item key=\"1\" icon={<PlusOutlined style={{ fontSize: 20 }} />}\r\n                        onClick={() => {\r\n                            if (localStorage.getItem(USER_LOGIN) && localStorage.getItem(TOKEN)) {\r\n                                dispatch({\r\n                                    type: OPEN_FORM_CREATE_TASK,\r\n                                    Component: <FormCreateTask />,\r\n                                    title: 'Create task'\r\n                                })\r\n                            } else {\r\n                                history.push('/login');\r\n                            }\r\n                        }}>\r\n                        <span className=\"mb-2\">Create issue</span>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"2\" icon={<SearchOutlined style={{ fontSize: 20 }} />}>\r\n                        Search\r\n                    </Menu.Item>\r\n                    {renderAuthenticationItem()}\r\n                </Menu>\r\n            </Sider>\r\n        </div>\r\n    )\r\n}","import React, { Fragment } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport MenuCyberbugs from '../../components/Cyberbugs/MenuCyberbugs';\r\nimport ModalCyberbugs from '../../components/Cyberbugs/ModalCyberbugs/ModalCyberbugs';\r\nimport SidebarCyberbugs from '../../components/Cyberbugs/SidebarCyberbugs';\r\n\r\nimport '../../index.css';\r\n\r\n\r\n\r\nexport const CyberbugsTemplate = (props) => {\r\n\r\n    const { Component, ...restParam } = props;\r\n    return <Route {...restParam} render={(propsRoute) => {\r\n        return <>\r\n            <div className=\"jira\">\r\n                <SidebarCyberbugs />\r\n                <MenuCyberbugs />\r\n                    <Component {...propsRoute} />\r\n                <ModalCyberbugs />\r\n            </div>\r\n        </>\r\n    }} />\r\n\r\n}","import React, { useEffect } from 'react'\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { connect } from 'react-redux';\r\nimport { withFormik } from 'formik'\r\nimport * as Yup from 'yup';\r\nimport { CREATE_PROJECT_SAGA, GET_ALL_PROJECT_CATEGORY_SAGA } from '../../../redux/constants/Cyberbugs/Cyberbugs';\r\nimport { TOKEN, USER_LOGIN } from '../../../util/constants/settingSystem';\r\nimport { history } from '../../../util/history';\r\n\r\nfunction CreateProject(props) {\r\n    const arrProjectCategory = useSelector(state => state.ProjectCategoryReducer.arrProjectCategory);\r\n    const dispatch = useDispatch();\r\n\r\n    const {\r\n        handleChange,\r\n        setFieldValue,\r\n        handleSubmit,\r\n    } = props;\r\n\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(USER_LOGIN) && localStorage.getItem(TOKEN)) {\r\n            //Gọi api để lấy dữ liệu thẻ select\r\n            dispatch({ type: GET_ALL_PROJECT_CATEGORY_SAGA })\r\n        } else {\r\n            history.push('/login');\r\n        }\r\n    });\r\n\r\n    const handleEditorChange = (content, editor) => {\r\n        setFieldValue('description', content)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container m-5\">\r\n            <h3>CreateProject</h3>\r\n            <form className=\"container\" onSubmit={handleSubmit} onChange={handleChange}>\r\n                <div className=\"form-group\">\r\n                    <p>Name</p>\r\n                    <input className=\"form-control\" name=\"projectName\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <p>Description</p>\r\n                    <Editor\r\n                        name=\"description\"\r\n                        initialValue=\"\"\r\n                        init={{\r\n                            selector: 'textarea#myTextArea',\r\n                            height: 500,\r\n                            menubar: false,\r\n                            plugins: [\r\n                                'advlist autolink lists link image charmap print preview anchor',\r\n                                'searchreplace visualblocks code fullscreen',\r\n                                'insertdatetime media table paste code help wordcount'\r\n                            ],\r\n                            toolbar: 'undo redo | formatselect | ' +\r\n                                'bold italic backcolor | alignleft aligncenter ' +\r\n                                'alignright alignjustify | bullist numlist outdent indent | ' +\r\n                                'removeformat | help',\r\n                            content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\r\n                        }}\r\n                        onEditorChange={handleEditorChange}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <select name=\"categoryId\" className=\"form-control\" onChange={handleChange}>\r\n                        {arrProjectCategory.map((item, index) => {\r\n                            return <option value={item.id} key={index}>{item.projectCategoryName}</option>\r\n                        })}\r\n                    </select>\r\n                </div>\r\n                <button className=\"btn btn-outline-primary\" type=\"submit\">Create project</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst createProjectForm = withFormik({\r\n    mapPropsToValues: (props) => {\r\n        return {\r\n            projectName: '',\r\n            description: '',\r\n            categoryId: props.arrProjectCategory[0]?.id\r\n        }\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n\r\n\r\n    }),\r\n    handleSubmit: (values, { props, setSubmitting }) => {\r\n        props.dispatch({\r\n            type: CREATE_PROJECT_SAGA,\r\n            newProject: values\r\n        })\r\n    },\r\n    displayName: 'CreateProjectFormik',\r\n})(CreateProject);\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n    arrProjectCategory: state.ProjectCategoryReducer.arrProjectCategory\r\n\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps)(createProjectForm);\r\n","import { Editor } from '@tinymce/tinymce-react'\r\nimport { withFormik } from 'formik';\r\nimport React, { useEffect } from 'react'\r\nimport { useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { connect } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport { GET_ALL_PROJECT_CATEGORY_SAGA, SET_SUBMIT_EDIT_PROJECT, UPDATE_PROJECT_SAGA } from '../../../redux/constants/Cyberbugs/Cyberbugs';\r\n\r\n\r\nfunction FormEditProject(props) {\r\n    const editorRef = useRef(null);\r\n    const arrProjectCategory = useSelector(state => state.ProjectCategoryReducer.arrProjectCategory);\r\n    const dispatch = useDispatch();\r\n\r\n    const {\r\n        values,\r\n        handleChange,\r\n        handleSubmit\r\n    } = props;\r\n\r\n\r\n    //componentdidmount\r\n    useEffect(() => {\r\n        //Call api load project category \r\n        dispatch({ type: GET_ALL_PROJECT_CATEGORY_SAGA })\r\n\r\n        //Load sự kiện submit lên drawer nút submit\r\n        dispatch({ type: SET_SUBMIT_EDIT_PROJECT, submitFunction: handleSubmit });\r\n\r\n\r\n    }, [dispatch, handleSubmit])\r\n\r\n    return (\r\n        <form className=\"container-fluid\" onSubmit={handleSubmit}>\r\n            <div className=\"row\">\r\n                <div className=\"col-4\">\r\n\r\n                    <div className=\"form-group\">\r\n                        <p className=\"font-weight-bold\">Project id</p>\r\n                        <input value={values.id} disabled className=\"form-control\" name=\"id\" />\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group\">\r\n                        <p className=\"font-weight-bold\">Project name</p>\r\n                        <input value={values.projectName} className=\"form-control\" name=\"projectName\" onChange={handleChange} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group\">\r\n                        <p className=\"font-weight-bold\">Project Category</p>\r\n                        <select className=\"form-control\" name=\"categoryId\" value={values.categoryId} onChange={handleChange}>\r\n                            {arrProjectCategory?.map((item, index) => {\r\n                                return <option key={index} value={item.id}>\r\n                                    {item.projectCategoryName}\r\n                                </option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <div className=\"form-group\">\r\n                        <p className=\"font-weight-bold\">Description</p>\r\n                        <Editor\r\n                            onInit={(evt, editor) => editorRef.current = editor}\r\n                            initialValue={values.description}\r\n                            init={{\r\n                                height: 500,\r\n                                menubar: false,\r\n                                plugins: [\r\n                                    'advlist autolink lists link image charmap print preview anchor',\r\n                                    'searchreplace visualblocks code fullscreen',\r\n                                    'insertdatetime media table paste code help wordcount'\r\n                                ],\r\n                                toolbar: 'undo redo | formatselect | ' +\r\n                                    'bold italic backcolor | alignleft aligncenter ' +\r\n                                    'alignright alignjustify | bullist numlist outdent indent | ' +\r\n                                    'removeformat | help',\r\n                                content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\r\n                            }}\r\n                            onEditorChange={(newValue, editor) => values.description = newValue}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form >\r\n    )\r\n}\r\n\r\nconst EditProjectForm = withFormik({\r\n    enableReinitialize: true,\r\n    mapPropsToValues: (props) => {\r\n        const { projectEdit } = props;\r\n\r\n        return {\r\n            id: projectEdit?.id,\r\n            projectName: projectEdit.projectName,\r\n            description: projectEdit.description,\r\n            categoryId: projectEdit.categoryId\r\n        }\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n\r\n\r\n    }),\r\n    handleSubmit: (values, { props, setSubmitting }) => {\r\n        props.dispatch({\r\n            type: UPDATE_PROJECT_SAGA,\r\n            projectUpdate: values\r\n        })\r\n    },\r\n    displayName: 'EditProjectForm',\r\n})(FormEditProject);\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n    projectEdit: state.ProjectReducer.projectEdit\r\n\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(EditProjectForm);","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Table, Tag, Button, Popconfirm, Popover, AutoComplete } from 'antd';\r\nimport { FormOutlined, DeleteOutlined } from '@ant-design/icons'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { DELETE_PROJECT_SAGA, EDIT_PROJECT, GET_LIST_PROJECT_SAGA, GET_USER_SAGA, ADD_USER_PROJECT_SAGA, OPEN_FORM_EDIT_PROJECT, REMOVE_USER_PROJECT_SAGA } from '../../redux/constants/Cyberbugs/Cyberbugs';\r\nimport FormEditProject from '../../components/Forms/FormEditProject/FormEditProject';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport default function ProjectManagement() {\r\n    const projectList = useSelector(state => state.ProjectReducer.projectList);\r\n    const { userSearch } = useSelector(state => state.UserReducer)\r\n    const dispatch = useDispatch();\r\n\r\n    const searchRef = useRef(null);\r\n    const [value, setValue] = useState(\"\");\r\n    useEffect(() => {\r\n        dispatch({ type: GET_LIST_PROJECT_SAGA })\r\n\r\n    }, [dispatch])\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: 'ID',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            sorter: (item2, item1) => {\r\n                return item2.id - item1.id;\r\n            },\r\n            sortDirections: ['descend'],\r\n\r\n        },\r\n        {\r\n            title: 'Project',\r\n            dataIndex: 'projectName',\r\n            key: 'projectName',\r\n            render: (text, record, index) => {\r\n                return <NavLink to={`/projectdetail/${record.id}`}>{text}</NavLink>\r\n            },\r\n            sorter: (item2, item1) => {\r\n                let projectName1 = item1.projectName?.trim().toLowerCase();\r\n                let projectName2 = item2.projectName?.trim().toLowerCase();\r\n                if (projectName2 < projectName1) {\r\n                    return -1;\r\n                }\r\n                return 1;\r\n            },\r\n\r\n\r\n        },\r\n\r\n        {\r\n            title: 'Category',\r\n            dataIndex: 'categoryName',\r\n            key: 'categoryName',\r\n            sorter: (item2, item1) => {\r\n                let categoryName1 = item1.categoryName?.trim().toLowerCase();\r\n                let categoryName2 = item2.categoryName?.trim().toLowerCase();\r\n                if (categoryName2 < categoryName1) {\r\n                    return -1;\r\n                }\r\n                return 1;\r\n            },\r\n\r\n        },\r\n        {\r\n            title: 'Creator',\r\n            key: 'creator',\r\n            render: (text, record, index) => {\r\n                return <Tag color=\"green\">{record.creator?.name}</Tag>\r\n            },\r\n            sorter: (item2, item1) => {\r\n                let creator1 = item1.creator?.name.trim().toLowerCase();\r\n                let creator2 = item2.creator?.name.trim().toLowerCase();\r\n                if (creator2 < creator1) {\r\n                    return -1;\r\n                }\r\n                return 1;\r\n            },\r\n\r\n        },\r\n        {\r\n            title: 'Members',\r\n            key: 'members',\r\n            render: (text, record, index) => {\r\n                return <div>\r\n                    {record.members?.slice(0, 3).map((member, index) => {\r\n                        return (\r\n                            <Popover key={index} placement=\"top\" title=\"members\" content={() => {\r\n                                return <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>ID</th>\r\n                                            <th>Avatar</th>\r\n                                            <th>Name</th>\r\n                                            <th></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {record.members?.map((item, index) => {\r\n                                            return <tr key={index}>\r\n                                                <td>{item.userId}</td>\r\n                                                <td><img src={item.avatar} width=\"30\" height=\"30\" style={{ borderRadius: '15px' }} alt=\"\" /></td>\r\n                                                <td>{item.name}</td>\r\n                                                <td>\r\n                                                    <Button onClick={() => {\r\n                                                        dispatch({\r\n                                                            type: REMOVE_USER_PROJECT_SAGA,\r\n                                                            userProject: {\r\n                                                                userId: item.userId,\r\n                                                                projectId: record.id\r\n                                                            }\r\n                                                        })\r\n\r\n                                                    }} className=\"bg-danger text-white\" shape=\"circle\">×</Button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        })}\r\n                                    </tbody>\r\n                                </table>\r\n                            }}>\r\n                                <Avatar key={index} src={member.avatar} />\r\n                            </Popover>\r\n                        )\r\n                    })}\r\n\r\n                    {record.members?.length > 3 ? <Avatar>...</Avatar> : ''}\r\n\r\n                    <Popover placement=\"rightTop\" title={\"Add user\"} content={() => {\r\n                        return <AutoComplete\r\n\r\n                            options={userSearch?.map((user, index) => {\r\n                                return { label: user.name, value: user.userId.toString() }\r\n                            })}\r\n\r\n                            value={value}\r\n\r\n                            onChange={(text) => {\r\n                                setValue(text);\r\n                            }}\r\n\r\n                            onSelect={(valueSelect, option) => {\r\n                                setValue(option.label);\r\n                                dispatch({\r\n                                    type: ADD_USER_PROJECT_SAGA,\r\n                                    userProject: {\r\n                                        \"projectId\": record.id,\r\n                                        \"userId\": valueSelect\r\n                                    }\r\n                                })\r\n\r\n\r\n                            }}\r\n                            style={{ width: '100%' }} onSearch={(value) => {\r\n                                if (searchRef.current) {\r\n                                    clearTimeout(searchRef.current);\r\n                                }\r\n                                searchRef.current = setTimeout(() => {\r\n                                    dispatch({\r\n                                        type: GET_USER_SAGA,\r\n                                        keyWord: value\r\n                                    })\r\n\r\n                                }, 300)\r\n                            }} />\r\n                    }} trigger=\"click\">\r\n                        <Button shape=\"circle\">+</Button>\r\n                    </Popover>\r\n                </div>\r\n            }\r\n\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '',\r\n            key: 'x',\r\n            render: (text, record, index) => {\r\n                return <div>\r\n                    <button className=\"btn mr-2 btn-primary\" onClick={() => {\r\n                        const action = {\r\n                            type: OPEN_FORM_EDIT_PROJECT,\r\n                            Component: <FormEditProject />,\r\n                            title: \"Edit project\"\r\n                        }\r\n\r\n                        //dispatch lên reducer nội dung drawer\r\n                        dispatch(action);\r\n                        //dispatch dữ liệu dòng hiện tai lên reducer\r\n                        const actionEditProject = {\r\n                            type: EDIT_PROJECT,\r\n                            projectEditModel: record\r\n                        }\r\n                        dispatch(actionEditProject);\r\n                    }}>\r\n                        <FormOutlined style={{ fontSize: 17 }} />\r\n                    </button>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this project?\"\r\n                        onConfirm={() => {\r\n                            dispatch({ type: DELETE_PROJECT_SAGA, idProject: record.id })\r\n                        }}\r\n\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <button className=\"btn btn-danger\">\r\n                            <DeleteOutlined style={{ fontSize: 17 }} />\r\n                        </button>\r\n                    </Popconfirm>\r\n\r\n                </div>\r\n            },\r\n        }\r\n\r\n    ];\r\n    return (\r\n        <div className=\"container-fluid m-5\">\r\n            <h3>Project management</h3>\r\n            <Table columns={columns} rowKey={\"id\"} dataSource={projectList} onChange={() => { }} />\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Drawer, Button } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { CLOSE_DRAWER } from '../../redux/constants/Cyberbugs/Cyberbugs';\r\n\r\n\r\n\r\nexport default function DrawerCyberBugs(props) {\r\n    const { visible, ComponentContentDrawer, callBackSubmit, title } = useSelector(state => state.DrawerCyberbugsReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    const onClose = () => {\r\n        dispatch({ type: CLOSE_DRAWER });\r\n\r\n    };\r\n    return (\r\n        <>\r\n            <Drawer\r\n                title={title}\r\n                width={720}\r\n                onClose={onClose}\r\n                visible={visible}\r\n                bodyStyle={{ paddingBottom: 80 }}\r\n\r\n                footer={\r\n                    <div\r\n                        style={{\r\n                            textAlign: 'right',\r\n                        }}\r\n                    >\r\n                        <Button onClick={onClose} style={{ marginRight: 8 }}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={callBackSubmit} type=\"primary\">\r\n                            Submit\r\n                        </Button>\r\n                    </div>\r\n                }\r\n            >\r\n                {/* Nội dung thay đổi của drawer */}\r\n                {ComponentContentDrawer}\r\n            </Drawer>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Result, Button } from 'antd';\r\nimport { history } from '../../util/history';\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <Result\r\n            status=\"404\"\r\n            title=\"404\"\r\n            subTitle=\"Sorry, the page you visited does not exist.\"\r\n            extra={<Button type=\"primary\" onClick={() => { history.push('/projectmanagement'); }}>Back Home</Button>}\r\n        />\r\n    )\r\n}","import { withFormik } from 'formik';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { connect } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport { SET_SUBMIT_EDIT_USER, UPDATE_USER_SAGA } from '../../../redux/constants/Cyberbugs/Cyberbugs';\r\n\r\n\r\nfunction FormEditUser(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const {\r\n        errors,\r\n        values,\r\n        handleChange,\r\n        handleSubmit\r\n    } = props;\r\n\r\n\r\n    useEffect(() => {\r\n        //Load submit event to drawer\r\n        dispatch({ type: SET_SUBMIT_EDIT_USER, submitFunction: handleSubmit });\r\n    }, [dispatch, handleSubmit])\r\n\r\n    return (\r\n        <form className=\"container-fluid\" onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-4\">\r\n                        <p className=\"font-weight-bold\">User id</p>\r\n                        <input value={values.id} disabled className=\"form-control\" name=\"id\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <p className=\"font-weight-bold\">Name</p>\r\n                        <input value={values.name} className=\"form-control\" name=\"name\" onChange={handleChange} />\r\n                        <div className=\"text-danger\">{errors.name}</div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <p className=\"font-weight-bold\">Phone number</p>\r\n                        <input value={values.phoneNumber} name=\"phoneNumber\" className=\"form-control\"\r\n                            onKeyDown={(e) => {\r\n                                if (!((e.key >= 0 && e.key <= 9)\r\n                                    || (e.key === 'Backspace')\r\n                                    || (e.key === 'ArrowLeft')\r\n                                    || (e.key === 'ArrowRight')\r\n                                    || (e.key === 'Tab')\r\n                                    || (e.ctrlKey && (e.key === 'a' || e.key === 'c' || e.key === 'x' || e.key === 'v')))) {\r\n                                    e.preventDefault();\r\n                                }\r\n                            }} onChange={handleChange} />\r\n                        <div className=\"text-danger\">{errors.phoneNumber}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <p className=\"font-weight-bold\">Email</p>\r\n                <input value={values.email} name=\"email\" className=\"form-control\" onChange={handleChange} />\r\n                <div className=\"text-danger\">{errors.email}</div>\r\n            </div>\r\n\r\n        </form >\r\n    )\r\n}\r\n\r\nconst EditUserForm = withFormik({\r\n    enableReinitialize: true,\r\n    mapPropsToValues: (props) => {\r\n        const { userEdit } = props;\r\n\r\n        return {\r\n            id: userEdit?.userId,\r\n            passWord: userEdit?.passWord,\r\n            email: userEdit?.email,\r\n            name: userEdit?.name,\r\n            phoneNumber: userEdit?.phoneNumber\r\n        }\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n        name: Yup.string().required('Name is required!'),\r\n        phoneNumber: Yup.string().required('Phone number is required!'),\r\n        email: Yup.string().required('Email is required!').email('Email is invalid!')\r\n    }),\r\n    handleSubmit: (values, { props, setSubmitting }) => {\r\n        setSubmitting(true);\r\n        props.dispatch({\r\n            type: UPDATE_USER_SAGA,\r\n            userUpdate: values\r\n        })\r\n    },\r\n    displayName: 'EditUserForm',\r\n})(FormEditUser);\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n    userEdit: state.UserReducer.userEdit\r\n\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(EditUserForm);","import { withFormik } from 'formik';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { connect } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport { CREATE_USER_SAGA, SET_SUBMIT_CREATE_USER } from '../../../redux/constants/Cyberbugs/Cyberbugs';\r\n\r\n\r\nfunction FormCreateUser(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const {\r\n        errors,\r\n        handleChange,\r\n        handleSubmit,\r\n    } = props;\r\n\r\n\r\n    useEffect(() => {\r\n        //Load submit event to drawer\r\n        dispatch({ type: SET_SUBMIT_CREATE_USER, submitFunction: handleSubmit });\r\n    }, [dispatch, handleSubmit])\r\n\r\n    return (\r\n        <form className=\"container-fluid\" onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <input placeholder=\"Name\" name=\"name\" className=\"form-control\" onChange={handleChange} />\r\n                        <div className=\"text-danger\">{errors.name}</div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <input placeholder=\"Phone Number\" name=\"phoneNumber\" className=\"form-control\"\r\n                            onKeyDown={(e) => {\r\n                                if (!((e.key >= 0 && e.key <= 9)\r\n                                    || (e.key === 'Backspace')\r\n                                    || (e.key === 'ArrowLeft')\r\n                                    || (e.key === 'ArrowRight')\r\n                                    || (e.key === 'Tab')\r\n                                    || (e.ctrlKey && (e.key === 'a' || e.key === 'c' || e.key === 'x' || e.key === 'v')))) {\r\n                                    e.preventDefault();\r\n                                }\r\n                            }} onChange={handleChange} />\r\n                        <div className=\"text-danger\">{errors.phoneNumber}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input placeholder=\"Email\" name=\"email\" className=\"form-control\" onChange={handleChange} />\r\n                <div className=\"text-danger\">{errors.email}</div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input placeholder=\"Password\" name=\"password\" type=\"password\" className=\"form-control\" onChange={handleChange} />\r\n                <div className=\"text-danger\">{errors.password}</div>\r\n            </div>\r\n        </form >\r\n    )\r\n}\r\n\r\nconst CreateUserForm = withFormik({\r\n    mapPropsToValues: () => ({\r\n        name: '',\r\n        phoneNumber: '',\r\n        email: '',\r\n        password: ''\r\n    }),\r\n    validationSchema: Yup.object().shape({\r\n        name: Yup.string().required('Name is required!'),\r\n        phoneNumber: Yup.string().required('Phone number is required!'),\r\n        email: Yup.string().required('Email is required!').email('Email is invalid!'),\r\n        password: Yup.string().min(6, 'Password must be at least 6 characters').max(32, 'Password must be at most 32 characters')\r\n    }),\r\n    handleSubmit: ({ name, phoneNumber, email, password }, { props, setSubmitting }) => {\r\n        setSubmitting(true);\r\n        props.dispatch({\r\n            type: CREATE_USER_SAGA,\r\n            userSignup: {\r\n                email: email,\r\n                passWord: password,\r\n                name: name,\r\n                phoneNumber: phoneNumber\r\n            }\r\n        })\r\n    },\r\n    displayName: 'CreateUser',\r\n})(FormCreateUser);\r\n\r\n\r\nexport default connect()(CreateUserForm);","import React, { useEffect } from 'react'\r\nimport { Popconfirm, Table, Input, Button } from 'antd';\r\nimport { FormOutlined, DeleteOutlined, UserAddOutlined } from '@ant-design/icons'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { DELETE_USER_SAGA, EDIT_USER, GET_LIST_USER_SAGA, OPEN_FORM_CREATE_USER, OPEN_FORM_EDIT_USER } from '../../redux/constants/Cyberbugs/Cyberbugs';\r\nimport FormEditUser from '../../components/Forms/FormEditUser/FormEditUser';\r\nimport FormCreateUser from '../../components/Forms/FormCreateUser/FormCreateUser';\r\n\r\nexport default function UserManagement() {\r\n    const userList = useSelector(state => state.UserReducer.userList)\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: GET_LIST_USER_SAGA,\r\n            userKeyword: ''\r\n        })\r\n    }, [dispatch])\r\n\r\n    const onSearch = (value) => {\r\n        dispatch({\r\n            type: GET_LIST_USER_SAGA,\r\n            userKeyword: value\r\n        })\r\n    }\r\n\r\n    const renderSearchBox = () => {\r\n        const { Search } = Input;\r\n        \r\n        return <div className=\"mt-3 mb-3\">\r\n            <Search placeholder=\"Search...\" allowClear enterButton=\"Search\" size=\"large\" onSearch={onSearch} />\r\n        </div>\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'ID',\r\n            dataIndex: 'userId',\r\n            key: 'userId',\r\n            sorter: (item2, item1) => {\r\n                return item2.userId - item1.userId;\r\n            },\r\n            sortDirections: ['descend'],\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            key: 'email',\r\n            sorter: (item2, item1) => {\r\n                let email1 = item1.email?.trim().toLowerCase();\r\n                let email2 = item2.email?.trim().toLowerCase();\r\n                if (email1 < email2) {\r\n                    return -1;\r\n                }\r\n                return 1;\r\n            },\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            sorter: (item2, item1) => {\r\n                let name1 = item1.email?.trim().toLowerCase();\r\n                let name2 = item2.email?.trim().toLowerCase();\r\n                if (name1 < name2) {\r\n                    return -1;\r\n                }\r\n                return 1;\r\n            },\r\n        },\r\n\r\n        {\r\n            title: 'Phone',\r\n            dataIndex: 'phoneNumber',\r\n            key: 'phoneNumber',\r\n            sorter: (item2, item1) => {\r\n                let phoneNumber1 = item1.phoneNumber;\r\n                let phoneNumber2 = item2.phoneNumber;\r\n                if (phoneNumber1 < phoneNumber2) {\r\n                    return -1;\r\n                }\r\n                return 1;\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '',\r\n            key: 'x',\r\n            render: (text, record, index) => {\r\n                return <div>\r\n                    <button className=\"btn mr-2 btn-primary\" onClick={() => {\r\n                        const action = {\r\n                            type: OPEN_FORM_EDIT_USER,\r\n                            Component: <FormEditUser />,\r\n                            title: \"Edit user\"\r\n                        }\r\n                        dispatch(action);\r\n\r\n                        const actionEditUser = {\r\n                            type: EDIT_USER,\r\n                            userEditModel: record\r\n                        }\r\n                        dispatch(actionEditUser);\r\n                    }}>\r\n                        <FormOutlined style={{ fontSize: 17 }} />\r\n                    </button>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this user?\"\r\n                        onConfirm={() => {\r\n                            dispatch({ type: DELETE_USER_SAGA, idUser: record.userId })\r\n                        }}\r\n\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <button className=\"btn btn-danger\">\r\n                            <DeleteOutlined style={{ fontSize: 17 }} />\r\n                        </button>\r\n                    </Popconfirm>\r\n\r\n                </div>\r\n            },\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <div className=\"container-fluid m-5\">\r\n            <h3>User management</h3>\r\n            <Button shape=\"round\" className=\"bg-success text-white mt-4\" icon={<UserAddOutlined />}\r\n            onClick={()=>{\r\n                const action = {\r\n                    type: OPEN_FORM_CREATE_USER,\r\n                    Component: <FormCreateUser />,\r\n                    title: \"Create user\"\r\n                }\r\n                dispatch(action);\r\n            }}>Create User</Button>\r\n            {renderSearchBox()}\r\n            <Table columns={columns} rowKey={\"userId\"} dataSource={userList} onChange={() => { }} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\n\r\n\r\nexport const HomeTemplate = (props) => {\r\n\r\n    const {Component,...restParam} = props;\r\n    return <Route {...restParam} render={(propsRoute)=>{\r\n        return <>\r\n            <Component {...propsRoute} />\r\n        </>\r\n    }} />\r\n\r\n}","import { Switch } from \"react-router-dom\";\nimport { UserLoginTemplate } from \"./templates/HomeTemplate/UserLoginTemplate\";\nimport LoginCyberBugs from \"./pages/CyberBugs/LoginCyberBugs/LoginCyberBugs\";\nimport LoadingComponent from \"./components/GlobalSetting/LoadingComponent/LoadingComponent\";\nimport ProjectDetail from \"./pages/ProjectDetail/ProjectDetail\";\nimport { CyberbugsTemplate } from \"./templates/HomeTemplate/CyberbugsTemplate\";\nimport CreateProject from \"./pages/CyberBugs/CreateProject/CreateProject\";\nimport ProjectManagement from \"./pages/ProjectManagement/ProjectManagement\";\nimport DrawerCyberBugs from './HOC/CyberbugsHOC/DrawerCyberBugs';\nimport NotFound from \"./pages/NotFound/NotFound\";\nimport UserManagement from \"./pages/UserManagement/UserManagement\";\nimport { HomeTemplate } from \"./templates/HomeTemplate/HomeTemplate\";\n\nfunction App() {\n  return (\n    <>\n      <LoadingComponent />\n      <DrawerCyberBugs />\n      <Switch>\n        <UserLoginTemplate exact path='/login' Component={LoginCyberBugs} />\n        <CyberbugsTemplate exact path='/createproject' Component={CreateProject} />\n        <CyberbugsTemplate exact path='/projectmanagement' Component={ProjectManagement} />\n        <CyberbugsTemplate exact path='/projectdetail/:projectId' Component={ProjectDetail} />\n        <CyberbugsTemplate exact path='/usermanagement' Component={UserManagement} />\n        <CyberbugsTemplate exact path='/' Component={ProjectManagement} />\n        <HomeTemplate exact path='*' Component={NotFound} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const DISPLAY_LOADING = 'DISPLAY_LOADING';\nexport const HIDE_LOADING = 'HIDE_LOADING';","import { DISPLAY_LOADING, HIDE_LOADING } from \"../constants/LoadingConst\";\n\nconst initialState = {\n    isLoading: false\n}\n\nexport const LoadingReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case DISPLAY_LOADING:\n            state.isLoading = true;\n            return { ...state }\n        case HIDE_LOADING: {\n            state.isLoading = false;\n            return { ...state }\n        }\n        default:\n            return state\n    }\n}\n","import { USER_LOGIN } from \"../../util/constants/settingSystem\";\r\nimport { SIGN_UP_NOTIFICATION, USLOGIN } from \"../constants/Cyberbugs/Cyberbugs\";\r\n\r\nlet usLogin = {};\r\n\r\nif(localStorage.getItem(USER_LOGIN)) {\r\n    usLogin = JSON.parse(localStorage.getItem(USER_LOGIN));\r\n}\r\n\r\n\r\nconst stateDefault =  {\r\n    userLogin : usLogin,\r\n    signUpNotification : -1\r\n}\r\n\r\n\r\nexport const AuthenticationReducer = (state = stateDefault,action) => {\r\n    switch(action.type) {\r\n        case USLOGIN: {\r\n            state.userLogin = action.userLogin;\r\n            return {...state}\r\n        }\r\n        case SIGN_UP_NOTIFICATION: {\r\n            state.signUpNotification = action.signUpNotification;\r\n            return {...state}\r\n        }\r\n        default : return {...state};\r\n    }\r\n}","import { GET_ALL_PROJECT_CATEGORY } from \"../constants/Cyberbugs/Cyberbugs\";\r\n\r\nconst stateDefault = {\r\n    arrProjectCategory : []\r\n}\r\n\r\n\r\nexport const ProjectCategoryReducer = (state = stateDefault,action) => {\r\n    switch(action.type){\r\n\r\n        case GET_ALL_PROJECT_CATEGORY: {\r\n            state.arrProjectCategory = action.data;\r\n            return {...state}\r\n        }\r\n\r\n\r\n        default : return {...state}\r\n    }\r\n}","import React from 'react'\r\nimport { CLOSE_DRAWER, OPEN_DRAWER, OPEN_FORM_CREATE_TASK, OPEN_FORM_CREATE_USER, OPEN_FORM_EDIT_PROJECT, OPEN_FORM_EDIT_USER, SET_SUBMIT_CREATE_TASK, SET_SUBMIT_CREATE_USER, SET_SUBMIT_EDIT_PROJECT, SET_SUBMIT_EDIT_USER } from '../constants/Cyberbugs/Cyberbugs'\r\nconst initialState = {\r\n    visible: false,\r\n    title: \"\",\r\n    ComponentContentDrawer: <p>default</p>,\r\n    callBackSubmit: (propsValue) => { alert('click demo!') },\r\n}\r\n\r\nexport const DrawerCyberbugsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case OPEN_DRAWER:\r\n            return { ...state, visible: true }\r\n\r\n        case CLOSE_DRAWER:\r\n            return { ...state, visible: false }\r\n\r\n        case OPEN_FORM_EDIT_PROJECT: {\r\n            state.visible = true;\r\n            state.title = action.title;\r\n            state.ComponentContentDrawer = action.Component;\r\n            return { ...state }\r\n        }\r\n\r\n        case SET_SUBMIT_EDIT_PROJECT: {\r\n            state.callBackSubmit = action.submitFunction;\r\n            return { ...state };\r\n        }\r\n\r\n        case OPEN_FORM_CREATE_TASK: {\r\n            state.visible = true;\r\n            state.title = action.title;\r\n            state.ComponentContentDrawer = action.Component;\r\n            return { ...state };\r\n        }\r\n\r\n        case SET_SUBMIT_CREATE_TASK: {\r\n            return { ...state, callBackSubmit: action.submitFunction }\r\n        }\r\n\r\n        case OPEN_FORM_EDIT_USER: {\r\n            state.visible = true;\r\n            state.title = action.title;\r\n            state.ComponentContentDrawer = action.Component;\r\n            return { ...state }\r\n        }\r\n\r\n        case SET_SUBMIT_EDIT_USER: {\r\n            state.callBackSubmit = action.submitFunction;\r\n            return { ...state };\r\n        }\r\n\r\n        case OPEN_FORM_CREATE_USER: {\r\n            state.visible = true;\r\n            state.title = action.title;\r\n            state.ComponentContentDrawer = action.Component;\r\n            return { ...state }\r\n        }\r\n\r\n        case SET_SUBMIT_CREATE_USER: {\r\n            state.callBackSubmit = action.submitFunction;\r\n            return { ...state };\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { EDIT_PROJECT, GET_LIST_PROJECT, GET_PROJECT_DROPDOWN_LIST, PUT_PROJECT_DETAIL } from \"../constants/Cyberbugs/Cyberbugs\";\r\n\r\nconst initialState = {\r\n    projectList: [],\r\n    projectEdit: {\r\n        \"userId\": 0,\r\n        \"projectName\": \"string\",\r\n        \"creator\": 0,\r\n        \"description\": \"string\",\r\n        \"categoryId\": \"1\"\r\n    },\r\n    projectDetail: {},\r\n    projectDropDownList: []\r\n}\r\n\r\nexport const ProjectReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case GET_LIST_PROJECT: {\r\n            state.projectList = action.projectList;\r\n            return { ...state };\r\n        }\r\n\r\n        case EDIT_PROJECT: {\r\n            state.projectEdit = action.projectEditModel;\r\n            return { ...state }\r\n\r\n        }\r\n\r\n        case PUT_PROJECT_DETAIL: {\r\n            state.projectDetail = action.projectDetail;\r\n            return { ...state }\r\n        }\r\n\r\n        case GET_PROJECT_DROPDOWN_LIST: {\r\n            return { ...state, projectDropDownList: action.projectDropDownList }\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { EDIT_USER, GET_LIST_USER, GET_USER_BY_PROJECT_ID, GET_USER_SEARCH } from \"../constants/Cyberbugs/Cyberbugs\";\r\n\r\nconst stateDefault = {\r\n    userSearch: [],\r\n    arrUser: [],//Array user cho thẻ select create task\r\n    userList: [],\r\n    userEdit: {\r\n        \"id\": 0,\r\n        \"name\": \"\",\r\n        \"phoneNumber\": 0,\r\n        \"email\": \"\"\r\n    },\r\n}\r\n\r\nexport const UserReducer = (state = stateDefault, action) => {\r\n    switch (action.type) {\r\n        case GET_USER_SEARCH: {\r\n            state.userSearch = action.lstUserSearch;\r\n            return { ...state }\r\n        }\r\n\r\n        case GET_USER_BY_PROJECT_ID: {\r\n            return { ...state, arrUser: action.arrUser }\r\n        }\r\n\r\n        case GET_LIST_USER: {\r\n            state.userList = action.userList;\r\n            return { ...state };\r\n        }\r\n\r\n        case EDIT_USER: {\r\n            state.userEdit = action.userEditModel;\r\n            return { ...state }\r\n\r\n        }\r\n\r\n        default: return { ...state };\r\n    }\r\n}","import { GET_ALL_PRIORITY } from \"../constants/Cyberbugs/Cyberbugs\";\r\n\r\nconst initialState = {\r\n    arrPriority: []\r\n}\r\n\r\nexport const PriorityReducer =  (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n    case GET_ALL_PRIORITY:\r\n        state.arrPriority = action.arrPriority; \r\n        return { ...state }\r\n\r\n    default:\r\n        return state\r\n    }\r\n}","import { GET_ALL_STATUS } from \"../constants/Cyberbugs/Cyberbugs\"\r\n\r\nconst initialState = {\r\n    arrStatus: []\r\n}\r\n\r\nexport const StatusReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case GET_ALL_STATUS:\r\n            return { ...state, arrStatus: action.arrStatus }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { CHANGE_ASSIGNEES, CHANGE_TASK_MODAL, EDIT_COMMENT, GET_ALL_COMMENT, GET_ALL_TASK_TYPE, GET_TASK_DETAIL, REMOVE_USER_ASSIGN } from \"../constants/Cyberbugs/Cyberbugs\"\r\n\r\nconst initialState = {\r\n    arrTaskType: [],\r\n    taskDetailModal: {\r\n        \"priorityTask\": {\r\n            \"priorityId\": 1,\r\n            \"priority\": \"High\"\r\n        },\r\n        \"taskTypeDetail\": {\r\n            \"id\": 1,\r\n            \"taskType\": \"bug\"\r\n        },\r\n        \"assigness\": [],\r\n        \"lstComment\": [],\r\n        \"taskId\": 1,\r\n        \"taskName\": \"\",\r\n        \"alias\": \"\",\r\n        \"description\": \"\",\r\n        \"statusId\": \"1\",\r\n        \"originalEstimate\": 0,\r\n        \"timeTrackingSpent\": 0,\r\n        \"timeTrackingRemaining\": 0,\r\n        \"typeId\": 1,\r\n        \"priorityId\": 1,\r\n        \"projectId\": 1\r\n    },\r\n    commentEdit : {\r\n        id: -1,\r\n        content: ''\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const TaskReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case GET_ALL_TASK_TYPE:\r\n            return { ...state, arrTaskType: action.arrTaskType }\r\n\r\n        case GET_TASK_DETAIL: {\r\n            return { ...state, taskDetailModal: action.taskDetailModal }\r\n        }\r\n\r\n        case CHANGE_TASK_MODAL: {\r\n            const { name, value } = action;\r\n            return { ...state, taskDetailModal: { ...state.taskDetailModal, [name]: value } }\r\n        }\r\n\r\n        case CHANGE_ASSIGNEES: {\r\n            state.taskDetailModal.assigness = [...state.taskDetailModal.assigness, action.userSelected];\r\n            return { ...state }\r\n        }\r\n\r\n        case REMOVE_USER_ASSIGN: {\r\n            state.taskDetailModal.assigness = [...state.taskDetailModal.assigness.filter(us => us.id !== action.userId)]\r\n            return { ...state }\r\n        }\r\n\r\n        case GET_ALL_COMMENT: {\r\n            state.taskDetailModal.lstComment = [...state.taskDetailModal.assigness, action.lstComment];\r\n            return { ...state }\r\n        }\r\n\r\n        case EDIT_COMMENT: {\r\n            return { ...state, commentEdit: action.commentEdit }\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import Axios from \"axios\"\r\nimport { DOMAIN_CYBERBUG, TOKEN } from \"../util/constants/settingSystem\"\r\n\r\nexport class baseService {\r\n    put = (url, model) => {\r\n        return Axios({\r\n            url: `${DOMAIN_CYBERBUG}/${url}`,\r\n            method: 'PUT',\r\n            data: model,\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(TOKEN) }\r\n        })\r\n    }\r\n\r\n    post = (url, model) => {\r\n        return Axios({\r\n            url: `${DOMAIN_CYBERBUG}/${url}`,\r\n            method: 'POST',\r\n            data: model,\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(TOKEN) }\r\n        })\r\n    }\r\n\r\n\r\n    get = (url) => {\r\n        return Axios({\r\n            url: `${DOMAIN_CYBERBUG}/${url}`,\r\n            method: 'GET',\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(TOKEN) }\r\n        })\r\n    }\r\n\r\n    delete = (url) => {\r\n        return Axios({\r\n            url: `${DOMAIN_CYBERBUG}/${url}`,\r\n            method: 'DELETE',\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(TOKEN) }\r\n        })\r\n    }\r\n}","import { baseService } from \"./baseService\";\r\n\r\nexport class AuthenticationService extends baseService {\r\n\r\n    // eslint-disable-next-line no-useless-constructor\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    signIn = (userLogin) => {\r\n        return this.post(`users/signin`, userLogin);\r\n    }\r\n\r\n    signUp = (userSignup) => {\r\n        return this.post(`Users/signup`, userSignup);\r\n    }\r\n}\r\n\r\n\r\nexport const authenticationService = new AuthenticationService();","import { call, delay, takeLatest, put } from 'redux-saga/effects';\r\nimport { SIGN_UP_NOTIFICATION, USER_SIGNIN_API, USER_SIGNUP_API, USLOGIN } from '../../constants/Cyberbugs/Cyberbugs';\r\nimport { authenticationService } from '../../../services/AuthenticationService';\r\nimport { STATUS_CODE, TOKEN, USER_LOGIN } from '../../../util/constants/settingSystem';\r\nimport { DISPLAY_LOADING, HIDE_LOADING } from '../../constants/LoadingConst';\r\nimport { history } from '../../../util/history';\r\n\r\n//Login --->\r\nfunction* signinSaga(action) {\r\n    yield put({\r\n        type: DISPLAY_LOADING\r\n    })\r\n    yield delay(500);\r\n\r\n    //Call api \r\n    try {\r\n        const { data } = yield call(() => authenticationService.signIn(action.userLogin));\r\n\r\n        //Save login information to localstorage when login success\r\n        localStorage.setItem(TOKEN, data.content.accessToken);\r\n        localStorage.setItem(USER_LOGIN, JSON.stringify(data.content));\r\n\r\n        yield put({\r\n            type: USLOGIN,\r\n            userLogin: data.content\r\n        })\r\n\r\n        history.push('/projectmanagement');\r\n\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n\r\n\r\n    yield put({\r\n        type: HIDE_LOADING\r\n    })\r\n\r\n}\r\n\r\nexport function* theoDoiSignin() {\r\n    yield takeLatest(USER_SIGNIN_API, signinSaga);\r\n}\r\n//Login <---\r\n\r\n\r\n//Sign up --->\r\nfunction* signUpSaga(action) {\r\n    yield put({\r\n        type: DISPLAY_LOADING\r\n    })\r\n    yield delay(500);\r\n\r\n    //Call api \r\n    try {\r\n        const { status } = yield call(() => authenticationService.signUp(action.userSignup));\r\n\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            yield put({\r\n                type: SIGN_UP_NOTIFICATION,\r\n                signUpNotification: 1\r\n            })\r\n        } else {\r\n            yield put({\r\n                type: SIGN_UP_NOTIFICATION,\r\n                signUpNotification: 0\r\n            })\r\n        }\r\n\r\n    } catch (err) {\r\n        yield put({\r\n            type: SIGN_UP_NOTIFICATION,\r\n            signUpNotification: 0\r\n        })\r\n    }\r\n\r\n\r\n    yield put({\r\n        type: HIDE_LOADING\r\n    })\r\n\r\n}\r\n\r\nexport function* theoDoiSignUp() {\r\n    yield takeLatest(USER_SIGNUP_API, signUpSaga);\r\n}\r\n//Sign up <---","import { baseService } from \"./baseService\";\r\n\r\nexport class ProjectService extends baseService {\r\n\r\n    // eslint-disable-next-line no-useless-constructor\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    createProject = (newProject) => {\r\n        return this.post(`Project/createProjectAuthorize`, newProject);\r\n    }\r\n\r\n    updateProject = (projectUpdate) => {\r\n        return this.put(`Project/updateProject?projectId=${projectUpdate.id}`, projectUpdate)\r\n    }\r\n\r\n    getAllProjectCategory = () => {\r\n        return this.get(`ProjectCategory`)\r\n    }\r\n\r\n    getAllProject = () => {\r\n        return this.get(`Project/getAllProject`)\r\n    }\r\n\r\n    deleteProject = (id) => {\r\n        return this.delete(`Project/deleteProject?projectId=${id}`);\r\n    }\r\n\r\n    getProjectDetail = (id) => {\r\n        return this.get(`Project/getProjectDetail?id=${id}`)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const projectService = new ProjectService();","import { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport { projectService } from \"../../../services/ProjectService\";\r\nimport { STATUS_CODE } from \"../../../util/constants/settingSystem\";\r\nimport { GET_ALL_PROJECT_CATEGORY, GET_ALL_PROJECT_CATEGORY_SAGA } from \"../../constants/Cyberbugs/Cyberbugs\";\r\n\r\nfunction* getAllProjectCategorySaga(action) {\r\n    try {\r\n        const { data, status } = yield call(() => projectService.getAllProjectCategory());\r\n\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            yield put({\r\n                type: GET_ALL_PROJECT_CATEGORY,\r\n                data: data.content\r\n            });\r\n        }\r\n\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n        console.log(err.response?.data)\r\n    }\r\n}\r\n\r\nexport function* theoDoigetAllProjectCategory() {\r\n    yield takeLatest(GET_ALL_PROJECT_CATEGORY_SAGA, getAllProjectCategorySaga);\r\n}","import { notification } from \"antd\"\r\n\r\nexport const notifiFunction = (type, message, description = '') => {\r\n    notification[type]({ //action.typeNotification = success | warning | info | error,\r\n        message: message,\r\n        description: description\r\n    })\r\n}","import { call, delay, put, takeLatest } from \"redux-saga/effects\";\r\nimport { projectService } from \"../../../services/ProjectService\";\r\nimport { STATUS_CODE } from \"../../../util/constants/settingSystem\";\r\nimport { history } from \"../../../util/history\";\r\nimport { CLOSE_DRAWER, CREATE_PROJECT_SAGA, DELETE_PROJECT_SAGA, GET_LIST_PROJECT, GET_LIST_PROJECT_SAGA, GET_PROJECT_DETAIL_SAGA, GET_PROJECT_DROPDOWN_LIST, GET_PROJECT_DROPDOWN_LIST_SAGA, GET_USER_BY_PROJECT_ID_SAGA, PUT_PROJECT_DETAIL, UPDATE_PROJECT_SAGA } from \"../../constants/Cyberbugs/Cyberbugs\";\r\nimport { DISPLAY_LOADING, HIDE_LOADING } from \"../../constants/LoadingConst\";\r\nimport { notifiFunction } from \"../../../util/Notification/notificationCyberbugs\";\r\n\r\n//Create project --->\r\nfunction* createProjectSaga(action) {\r\n    yield put({\r\n        type: DISPLAY_LOADING\r\n    })\r\n    yield delay(500);\r\n\r\n    try {\r\n        const { status } = yield call(() => projectService.createProject(action.newProject));\r\n\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            notifiFunction('success', 'Create project successfully !')\r\n            history.push('/projectmanagement');\r\n        } else {\r\n            notifiFunction('error', 'Create project fail !')\r\n        }\r\n\r\n    } catch (err) {\r\n        notifiFunction('error', 'Create project fail !')\r\n    }\r\n\r\n    yield put({\r\n        type: HIDE_LOADING\r\n    })\r\n}\r\n\r\nexport function* theoDoiCreateProjectSaga() {\r\n    yield takeLatest(CREATE_PROJECT_SAGA, createProjectSaga);\r\n}\r\n//Create project <---\r\n\r\n\r\n\r\n\r\n//Get list project --->\r\nfunction* getListProjectSaga() {\r\n    try {\r\n        const { data, status } = yield call(() => projectService.getAllProject());\r\n\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            yield put({\r\n                type: GET_LIST_PROJECT,\r\n                projectList: data.content\r\n            })\r\n        }\r\n    } catch (err) {\r\n    }\r\n\r\n}\r\n\r\nexport function* theoDoiGetListProjectSaga() {\r\n    yield takeLatest(GET_LIST_PROJECT_SAGA, getListProjectSaga);\r\n}\r\n//Get list project <---\r\n\r\n\r\n//Update Project --->\r\nfunction* updateProjectSaga(action) {\r\n    yield put({\r\n        type: DISPLAY_LOADING\r\n    })\r\n    yield delay(500);\r\n\r\n    try {\r\n        const { status } = yield call(() => projectService.updateProject(action.projectUpdate));\r\n\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            notifiFunction('success', 'Update project successfully !')\r\n        } else {\r\n            notifiFunction('error', 'Update project fail !')\r\n        }\r\n\r\n        yield call(getListProjectSaga);\r\n        yield put({\r\n            type: CLOSE_DRAWER\r\n        })\r\n    } catch (err) {\r\n        notifiFunction('error', 'Update project fail !')\r\n    }\r\n\r\n    yield put({\r\n        type: HIDE_LOADING\r\n    })\r\n}\r\n\r\n\r\nexport function* theoDoiUpdateProjectSaga() {\r\n    yield takeLatest(UPDATE_PROJECT_SAGA, updateProjectSaga);\r\n}\r\n\r\n//Update Project <---\r\n\r\n\r\n//Delete project --->\r\nfunction* deleteProjectSaga(action) {\r\n    yield put({\r\n        type: DISPLAY_LOADING\r\n    })\r\n    yield delay(500);\r\n\r\n    try {\r\n        const { status } = yield call(() => projectService.deleteProject(action.idProject));\r\n        //Gọi api thành công thì dispatch lên reducer thông qua put\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            notifiFunction('success', 'Delete project successfully !')\r\n        } else {\r\n            notifiFunction('error', 'Delete project fail !')\r\n        }\r\n\r\n        yield call(getListProjectSaga);\r\n    } catch (err) {\r\n        notifiFunction('error', 'Delete project fail !')\r\n    }\r\n\r\n    yield put({\r\n        type: HIDE_LOADING\r\n    })\r\n}\r\n\r\n\r\nexport function* theoDoiDeleteProject() {\r\n    yield takeLatest(DELETE_PROJECT_SAGA, deleteProjectSaga);\r\n}\r\n//Delete project <---\r\n\r\n//Get project detail --->\r\nfunction* getProjectDetailSaga(action) {\r\n    try {\r\n        const { data } = yield call(() => projectService.getProjectDetail(action.projectId));\r\n\r\n        yield put({\r\n            type: PUT_PROJECT_DETAIL,\r\n            projectDetail: data.content\r\n        })\r\n\r\n    } catch (err) {\r\n        console.log('404 not found !')\r\n        history.push('/projectmanagement');\r\n    }\r\n}\r\n\r\nexport function* theoDoiGetProjectDetail() {\r\n    yield takeLatest(GET_PROJECT_DETAIL_SAGA, getProjectDetailSaga);\r\n}\r\n//Get project detail <---\r\n\r\n//Get projects to display in dropdown list <---\r\nfunction* getProjectDropdownListSaga(action) {\r\n    yield put({\r\n        type: DISPLAY_LOADING\r\n    })\r\n    yield delay(500);\r\n\r\n    try {\r\n        const { data } = yield call(() => projectService.getAllProject());\r\n\r\n        yield put({\r\n            type: GET_PROJECT_DROPDOWN_LIST,\r\n            projectDropDownList: data.content\r\n        })\r\n\r\n        yield put({\r\n            type: GET_USER_BY_PROJECT_ID_SAGA,\r\n            idProject: data.content[0].id\r\n        })\r\n\r\n    } catch (err) {\r\n        console.log('404 not found !');\r\n    }\r\n\r\n    yield put({\r\n        type: HIDE_LOADING\r\n    })\r\n}\r\n\r\nexport function* theoDoiGetProjectDropdownListSaga() {\r\n    yield takeLatest(GET_PROJECT_DROPDOWN_LIST_SAGA, getProjectDropdownListSaga);\r\n}\r\n//Get projects to display in dropdown list <---","import { baseService } from \"./baseService\";\r\n\r\nexport class UserService extends baseService {\r\n\r\n    // eslint-disable-next-line no-useless-constructor\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    getUser = (keyword) => {\r\n        return this.get(`Users/getUser?keyword=${keyword}`)\r\n    }\r\n    assignUserProject = (userProject) => {\r\n        return this.post(`Project/assignUserProject`, userProject);\r\n    }\r\n    deleteUserFromProject = (userProject) => {\r\n        return this.post(`Project/removeUserFromProject`, userProject)\r\n    }\r\n    getUserByProjectId = (idProject) => {\r\n        return this.get(`Users/getUserByProjectId?idProject=${idProject}`)\r\n    }\r\n    deleteUserById = (userId) => {\r\n        return this.delete(`Users/deleteUser?id=${userId}`)\r\n    }\r\n    editUser = (userUpdate) => {\r\n        return this.put(\"Users/editUser\", userUpdate)\r\n    }\r\n}\r\nexport const userService = new UserService()","import { call, delay, takeLatest, put } from 'redux-saga/effects';\r\nimport { authenticationService } from '../../../services/AuthenticationService';\r\nimport { userService } from '../../../services/UserService';\r\nimport { STATUS_CODE } from '../../../util/constants/settingSystem';\r\nimport { notifiFunction } from '../../../util/Notification/notificationCyberbugs';\r\nimport { ADD_USER_PROJECT_SAGA, CLOSE_DRAWER, CREATE_USER_SAGA, DELETE_USER_SAGA, GET_LIST_PROJECT_SAGA, GET_LIST_USER, GET_LIST_USER_SAGA, GET_USER_BY_PROJECT_ID, GET_USER_BY_PROJECT_ID_SAGA, GET_USER_SAGA, GET_USER_SEARCH, REMOVE_USER_PROJECT_SAGA, UPDATE_USER_SAGA } from '../../constants/Cyberbugs/Cyberbugs';\r\nimport { DISPLAY_LOADING, HIDE_LOADING } from '../../constants/LoadingConst';\r\n\r\n//Get user --->\r\nfunction* getUserSaga(action) {\r\n    try {\r\n        const { data } = yield call(() => userService.getUser(action.keyWord));\r\n        yield put({\r\n            type: GET_USER_SEARCH,\r\n            lstUserSearch: data.content\r\n        })\r\n\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nexport function* theoDoiGetUser() {\r\n    yield takeLatest(GET_USER_SAGA, getUserSaga);\r\n}\r\n//Get user <---\r\n\r\n\r\n//Add user --->\r\nfunction* addUserProjectSaga(action) {\r\n    try {\r\n        yield call(() => userService.assignUserProject(action.userProject));\r\n        yield put({\r\n            type: GET_LIST_PROJECT_SAGA\r\n        })\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nexport function* theoDoiAddUserProject() {\r\n    yield takeLatest(ADD_USER_PROJECT_SAGA, addUserProjectSaga);\r\n}\r\n//Add user <---\r\n\r\n//Delete user --->\r\nfunction* removeUserProjectSaga(action) {\r\n    try {\r\n        yield call(() => userService.deleteUserFromProject(action.userProject));\r\n        yield put({\r\n            type: GET_LIST_PROJECT_SAGA\r\n        })\r\n\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nexport function* theoDoiRemoveUserProject() {\r\n    yield takeLatest(REMOVE_USER_PROJECT_SAGA, removeUserProjectSaga);\r\n}\r\n//Delete user <---\r\n\r\n\r\n//Get user by project ID --->\r\nfunction* getUserByProjectIdSaga(action) {\r\n    const { idProject } = action;\r\n    try {\r\n        const { data, status } = yield call(() => userService.getUserByProjectId(idProject));\r\n\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            yield put({\r\n                type: GET_USER_BY_PROJECT_ID,\r\n                arrUser: data.content\r\n            })\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n        console.log(err.response?.data);\r\n        if (err.response?.data.statusCode === STATUS_CODE.NOT_FOUND) {\r\n            yield put({\r\n                type: GET_USER_BY_PROJECT_ID,\r\n                arrUser: []\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function* theoDoiGetUserByProjectIdSaga() {\r\n    yield takeLatest(GET_USER_BY_PROJECT_ID_SAGA, getUserByProjectIdSaga)\r\n}\r\n\r\n//Get user by project ID <---\r\n\r\n//Get list user --->\r\nfunction* getListUserSaga(action) {\r\n\r\n    try {\r\n        const { data, status } = yield call(() => userService.getUser(action.userKeyword));\r\n\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            yield put({\r\n                type: GET_LIST_USER,\r\n                userList: data.content\r\n            })\r\n        }\r\n    } catch (err) {\r\n    }\r\n\r\n}\r\n\r\nexport function* theoDoiGetListUserSaga() {\r\n    yield takeLatest(GET_LIST_USER_SAGA, getListUserSaga);\r\n}\r\n//Get list user <---\r\n\r\n//Delete user --->\r\nfunction* deleteUserSaga(action) {\r\n    yield put({\r\n        type: DISPLAY_LOADING\r\n    })\r\n    yield delay(500);\r\n\r\n    try {\r\n        const { status } = yield call(() => userService.deleteUserById(action.idUser));\r\n\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            notifiFunction('success', 'Delete user successfully !')\r\n            yield put({\r\n                type: GET_LIST_USER_SAGA,\r\n                userKeyword: ''\r\n            })\r\n        } else {\r\n            notifiFunction('error', 'Delete user fail !')\r\n        }\r\n    } catch (err) {\r\n        notifiFunction('error', 'Delete user fail !')\r\n    }\r\n\r\n    yield put({\r\n        type: HIDE_LOADING\r\n    })\r\n}\r\n\r\n\r\nexport function* theoDoiDeleteUserSaga() {\r\n    yield takeLatest(DELETE_USER_SAGA, deleteUserSaga);\r\n}\r\n//Delete user <---\r\n\r\n//Update user --->\r\nfunction* updateUserSaga(action) {\r\n    yield put({\r\n        type: DISPLAY_LOADING\r\n    })\r\n    yield delay(500);\r\n\r\n    try {\r\n        const { status } = yield call(() => userService.editUser(action.userUpdate));\r\n\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            notifiFunction('success', 'Update user successfully !');\r\n\r\n            yield put({\r\n                type: GET_LIST_USER_SAGA,\r\n                userKeyword: ''\r\n            })\r\n        } else {\r\n            notifiFunction('error', 'Update user fail !')\r\n        }\r\n\r\n        yield put({\r\n            type: CLOSE_DRAWER\r\n        })\r\n    } catch (err) {\r\n        notifiFunction('error', 'Update user fail !')\r\n    }\r\n\r\n    yield put({\r\n        type: HIDE_LOADING\r\n    })\r\n}\r\n\r\n\r\nexport function* theoDoiUpdateUserSaga() {\r\n    yield takeLatest(UPDATE_USER_SAGA, updateUserSaga);\r\n}\r\n\r\n//Update user <---\r\n\r\n\r\n//Create user --->\r\nfunction* createUserSaga(action) {\r\n    yield put({\r\n        type: DISPLAY_LOADING\r\n    })\r\n    yield delay(500);\r\n\r\n    //Call api \r\n    try {\r\n        const { status } = yield call(() => authenticationService.signUp(action.userSignup));\r\n\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            notifiFunction('success', 'Create user successfully !');\r\n\r\n            yield put({\r\n                type: GET_LIST_USER_SAGA,\r\n                userKeyword: ''\r\n            })\r\n        } else {\r\n            notifiFunction('error', 'Create user fail !')\r\n        }\r\n        yield put({\r\n            type: CLOSE_DRAWER\r\n        })\r\n\r\n    } catch (err) {\r\n        notifiFunction('error', 'Create user fail !')\r\n    }\r\n\r\n\r\n    yield put({\r\n        type: HIDE_LOADING\r\n    })\r\n\r\n}\r\n\r\nexport function* theoDoiCreateUserSage() {\r\n    yield takeLatest(CREATE_USER_SAGA, createUserSaga);\r\n}\r\n//Create user <---","import { baseService } from \"./baseService\";\r\n\r\nexport class PriorityService extends baseService{\r\n\r\n    getAllPriority = () => {\r\n        return this.get(`Priority/getAll`)\r\n     }\r\n   \r\n\r\n}\r\nexport const priorityService = new PriorityService()","import { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport { priorityService } from \"../../../services/PriorityService\";\r\nimport { STATUS_CODE } from \"../../../util/constants/settingSystem\";\r\nimport { GET_ALL_PRIORITY, GET_ALL_PRIORITY_SAGA } from \"../../constants/Cyberbugs/Cyberbugs\";\r\n\r\n\r\nfunction* getAllPriority() {\r\n    try {\r\n        const { data, status } = yield call(() => priorityService.getAllPriority());\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            yield put({\r\n                type: GET_ALL_PRIORITY, \r\n                arrPriority : data.content\r\n            })\r\n        }\r\n    } catch (err) {\r\n        console.log(err.response.data);}\r\n}\r\n\r\n\r\nexport function* theoDoiGetAllPriority() {\r\n    yield takeLatest(GET_ALL_PRIORITY_SAGA, getAllPriority);\r\n}","import { baseService } from \"./baseService\";\r\n\r\nexport class TaskService extends baseService {\r\n\r\n    // eslint-disable-next-line no-useless-constructor\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    getAllTaskType = () => {\r\n        return this.get('TaskType/getAll');\r\n    }\r\n\r\n    createTask = (taskObject) => {\r\n        return this.post('Project/createTask', taskObject);\r\n    }\r\n\r\n    getTaskDetail = (taskId) => {\r\n        return this.get(`Project/getTaskDetail?taskId=${taskId}`)\r\n    }\r\n\r\n    updateTask = (taskUpdate) => {\r\n        return this.post(`Project/updateTask`, taskUpdate);\r\n    }\r\n\r\n    updateStatusTask = (taskStatusUpdate) => {\r\n        return this.put(`Project/updateStatus`,taskStatusUpdate);\r\n    }\r\n\r\n    getAllComment = () => {\r\n        return this.get('Comment/getAll');\r\n    }\r\n\r\n    createComment = (commentObject) => {\r\n        return this.post('Comment/insertComment', commentObject);\r\n    }\r\n\r\n    deleteComment = (idComment) => {\r\n        return this.delete(`Comment/deleteComment?idComment=${idComment}`);\r\n    }\r\n\r\n    updateComment = (commentUpdate) => {\r\n        return this.put(`Comment/updateComment?id=${commentUpdate.id}&contentComment=${commentUpdate.contentComment}`);\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const taskService = new TaskService();","import { call, put, select, takeLatest } from \"redux-saga/effects\";\r\nimport { taskService } from \"../../../services/TaskService\";\r\nimport { STATUS_CODE } from \"../../../util/constants/settingSystem\";\r\nimport { notifiFunction } from \"../../../util/Notification/notificationCyberbugs\";\r\nimport { CHANGE_ASSIGNEES, CHANGE_TASK_MODAL, CLOSE_DRAWER, CREATE_COMMENT_SAGA, CREATE_TASK_SAGA, DELETE_COMMENT_SAGA, EDIT_COMMENT, GET_ALL_COMMENT, GET_ALL_COMMENT_SAGA, GET_ALL_TASK_TYPE, GET_ALL_TASK_TYPE_SAGA, GET_PROJECT_DETAIL_SAGA, GET_TASK_DETAIL, GET_TASK_DETAIL_SAGA, HANDLE_CHANGE_POST_API_SAGA, REMOVE_USER_ASSIGN, UPDATE_COMMENT_SAGA, UPDATE_STATUS_TASK_SAGA } from \"../../constants/Cyberbugs/Cyberbugs\";\r\nimport { DISPLAY_LOADING, HIDE_LOADING } from \"../../constants/LoadingConst\";\r\n\r\n//Get all task type --->\r\nfunction* getAllTaskTypeSaga(action) {\r\n    try {\r\n        const { data } = yield call(() => taskService.getAllTaskType());\r\n        yield put({\r\n            type: GET_ALL_TASK_TYPE,\r\n            arrTaskType: data.content\r\n        })\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n        console.log(err.response?.data)\r\n    }\r\n\r\n}\r\n\r\nexport function* theoDoiGetAllTaskTypeSaga() {\r\n    yield takeLatest(GET_ALL_TASK_TYPE_SAGA, getAllTaskTypeSaga)\r\n}\r\n//Get all task type <---\r\n\r\n\r\n//Create task --->\r\nfunction* createTaskSaga(action) {\r\n\r\n    try {\r\n        yield put({\r\n            type: DISPLAY_LOADING\r\n        })\r\n        const { status } = yield call(() => taskService.createTask(action.taskObject));\r\n\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            notifiFunction('success', 'Create task successfully !');\r\n        } else {\r\n            notifiFunction('error', 'Create task fail !')\r\n        }\r\n\r\n        yield put({\r\n            type: CLOSE_DRAWER\r\n        })\r\n    }\r\n    catch (err) {\r\n        notifiFunction('error', 'Create task fail !');\r\n    }\r\n\r\n    yield put({\r\n        type: HIDE_LOADING\r\n    })\r\n}\r\n\r\n\r\nexport function* theoDoiCreateTaskSaga() {\r\n    yield takeLatest(CREATE_TASK_SAGA, createTaskSaga);\r\n}\r\n//Create task <---\r\n\r\n//Get task detail --->\r\nfunction* getTaskDetailSaga(action) {\r\n    const { taskId } = action;\r\n\r\n    try {\r\n        const { data } = yield call(() => taskService.getTaskDetail(taskId));\r\n\r\n        yield put({\r\n            type: GET_TASK_DETAIL,\r\n            taskDetailModal: data.content\r\n        })\r\n\r\n    } catch (err) {\r\n\r\n        console.log(err);\r\n        console.log(err.response?.data);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function* theoDoiGetTaskDetailSaga(action) {\r\n\r\n    yield takeLatest(GET_TASK_DETAIL_SAGA, getTaskDetailSaga)\r\n\r\n}\r\n//Get task detail <---\r\n\r\n//Handle change in task modal and update task --->\r\nexport function* handelChangePostApi(action) {\r\n    //Gọi action làm thay đổi taskDetail modal\r\n    switch (action.actionType) {\r\n        case CHANGE_TASK_MODAL: {\r\n            const { value, name } = action;\r\n\r\n            yield put({\r\n                type: CHANGE_TASK_MODAL,\r\n                name,\r\n                value\r\n            });\r\n        }; break;\r\n\r\n        case CHANGE_ASSIGNEES: {\r\n            const { userSelected } = action;\r\n            yield put({\r\n                type: CHANGE_ASSIGNEES,\r\n                userSelected\r\n            })\r\n\r\n        }; break;\r\n\r\n        case REMOVE_USER_ASSIGN: {\r\n            const { userId } = action;\r\n            yield put({\r\n                type: REMOVE_USER_ASSIGN,\r\n                userId\r\n            })\r\n        } break;\r\n        default: break;\r\n    }\r\n\r\n    //Save qua api updateTaskSaga\r\n    //Lấy dữ liệu từ state.taskDetailModal \r\n    let { taskDetailModal } = yield select(state => state.TaskReducer);\r\n\r\n    //Biến đổi dữ liệu state.taskDetailModal thành dữ liệu api cần\r\n    const listUserAsign = taskDetailModal.assigness?.map((user, index) => {\r\n        return user.id;\r\n    });\r\n\r\n\r\n    const taskUpdateApi = { ...taskDetailModal, listUserAsign }\r\n    try {\r\n        const { status } = yield call(() => taskService.updateTask(taskUpdateApi));\r\n\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            yield put({\r\n                type: GET_PROJECT_DETAIL_SAGA,\r\n                projectId: taskUpdateApi.projectId\r\n            })\r\n\r\n            yield put({\r\n                type: GET_TASK_DETAIL_SAGA,\r\n                taskId: taskUpdateApi.taskId\r\n            })\r\n        }\r\n    } catch (err) {\r\n        console.log(err.response?.data);\r\n        console.log(err);\r\n    }\r\n\r\n}\r\n\r\nexport function* theoDoiHandleChangePostApi() {\r\n    yield takeLatest(HANDLE_CHANGE_POST_API_SAGA, handelChangePostApi);\r\n}\r\n//Handle change in task modal and update task <---\r\n\r\n\r\n// Update task status --->\r\nfunction* updateTaskStatusSaga(action) {\r\n\r\n    const { taskUpdateStatus } = action;\r\n    try {\r\n\r\n        //Cập nhật api status cho task hiện tại (Task đang mở modal)\r\n        const { status } = yield call(() => taskService.updateStatusTask(taskUpdateStatus));\r\n\r\n        //Sau khi thành công gọi lại getProjectDetail saga để sắp xếp lại thông tin các task \r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            yield put({\r\n                type: GET_PROJECT_DETAIL_SAGA,\r\n                projectId: taskUpdateStatus.projectId\r\n            })\r\n\r\n            yield put({\r\n                type: GET_TASK_DETAIL_SAGA,\r\n                taskId: taskUpdateStatus.taskId\r\n            })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        console.log(err.response?.data);\r\n\r\n    }\r\n}\r\n\r\nexport function* theoDoiUpdateTaskStatusSaga() {\r\n    yield takeLatest(UPDATE_STATUS_TASK_SAGA, updateTaskStatusSaga)\r\n}\r\n// Update task status <---\r\n\r\n//Get all comment --->\r\nfunction* getAllCommentSaga(action) {\r\n    try {\r\n        const { data } = yield call(() => taskService.getAllComment());\r\n        yield put({\r\n            type: GET_ALL_COMMENT,\r\n            lstComment: data.content\r\n        })\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n        console.log(err.response?.data)\r\n    }\r\n\r\n}\r\n\r\nexport function* theoDoiGetAllCommentSaga() {\r\n    yield takeLatest(GET_ALL_COMMENT_SAGA, getAllCommentSaga)\r\n}\r\n//Get all comment <---\r\n\r\n\r\n//Create comment --->\r\nfunction* createCommentSaga(action) {\r\n    try {\r\n        const { status } = yield call(() => taskService.createComment(action.commentObject));\r\n\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            yield put({\r\n                type: GET_TASK_DETAIL_SAGA,\r\n                taskId: action.commentObject.taskId\r\n            })\r\n        }\r\n    }\r\n    catch (err) {\r\n        console.log(err);\r\n        console.log(err.response?.data)\r\n    }\r\n}\r\n\r\n\r\nexport function* theoDoiCreateCommentSaga() {\r\n    yield takeLatest(CREATE_COMMENT_SAGA, createCommentSaga);\r\n}\r\n//Create comment <---\r\n\r\n//Delete comment --->\r\nfunction* deleteCommentSaga(action) {\r\n    try {\r\n        const { status } = yield call(() => taskService.deleteComment(action.commentObject.idComment));\r\n\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            yield put({\r\n                type: GET_TASK_DETAIL_SAGA,\r\n                taskId: action.commentObject.taskId\r\n            })\r\n        }\r\n    }\r\n    catch (err) {\r\n        console.log(err);\r\n        console.log(err.response?.data)\r\n    }\r\n}\r\n\r\n\r\nexport function* theoDoiDeleteCommentSaga() {\r\n    yield takeLatest(DELETE_COMMENT_SAGA, deleteCommentSaga);\r\n}\r\n//Delete comment <---\r\n\r\n//Update comment --->\r\nfunction* updateCommentSaga(action) {\r\n\r\n    try {\r\n        const { status } = yield call(() => taskService.updateComment(action.commentUpdate));\r\n\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            yield put({\r\n                type: EDIT_COMMENT,\r\n                commentEdit: {\r\n                    id: -1,\r\n                    content: ''\r\n                }\r\n            })\r\n\r\n            yield put({\r\n                type: GET_TASK_DETAIL_SAGA,\r\n                taskId: action.commentUpdate.taskId\r\n            })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        console.log(err.response?.data)\r\n    }\r\n\r\n    yield put({\r\n        type: HIDE_LOADING\r\n    })\r\n}\r\n\r\n\r\nexport function* theoDoiUpdateCommentSaga() {\r\n    yield takeLatest(UPDATE_COMMENT_SAGA, updateCommentSaga);\r\n}\r\n\r\n//Update comment <---","import { baseService } from \"./baseService\";\r\n\r\nexport class StatusService extends baseService {\r\n\r\n    // eslint-disable-next-line no-useless-constructor\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    getAllStatus = () => {\r\n        return this.get(`Status/getAll`)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const statusService = new StatusService();","import { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport { statusService } from \"../../../services/StatusService\";\r\nimport { GET_ALL_STATUS, GET_ALL_STATUS_SAGA } from \"../../constants/Cyberbugs/Cyberbugs\";\r\n\r\nfunction* getAllStatusSaga(action) {\r\n\r\n    try {\r\n        const { data } = yield call(() => statusService.getAllStatus());\r\n        yield put({\r\n            type: GET_ALL_STATUS,\r\n            arrStatus: data.content\r\n        })\r\n\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n        console.log(err.response?.data)\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function* theoDoiGetAllStatusSaga() {\r\n\r\n    yield takeLatest(GET_ALL_STATUS_SAGA, getAllStatusSaga)\r\n\r\n}","import { all } from \"redux-saga/effects\";\r\nimport * as AuthenticationSaga from './Cyberbugs/AuthenticationSaga';\r\nimport * as ProjectCategorySaga from './Cyberbugs/ProjectCategorySaga';\r\nimport * as ProjectSaga from './Cyberbugs/ProjectSaga';\r\nimport * as UserSaga from './Cyberbugs/UserSaga';\r\nimport * as PrioritySaga from './Cyberbugs/PrioritySaga';\r\nimport * as TaskSaga from './Cyberbugs/TaskSaga';\r\nimport * as StatusSaga from './Cyberbugs/StatusSaga';\r\n\r\n\r\nexport function* rootSaga() {\r\n\r\n    yield all([\r\n        AuthenticationSaga.theoDoiSignin(),\r\n        AuthenticationSaga.theoDoiSignUp(),\r\n\r\n        ProjectCategorySaga.theoDoigetAllProjectCategory(),\r\n        ProjectSaga.theoDoiCreateProjectSaga(),\r\n        ProjectSaga.theoDoiGetListProjectSaga(),\r\n        ProjectSaga.theoDoiUpdateProjectSaga(),\r\n        ProjectSaga.theoDoiDeleteProject(),\r\n        ProjectSaga.theoDoiGetProjectDetail(),\r\n        ProjectSaga.theoDoiGetProjectDropdownListSaga(),\r\n\r\n        UserSaga.theoDoiGetUser(),\r\n        UserSaga.theoDoiAddUserProject(),\r\n        UserSaga.theoDoiRemoveUserProject(),\r\n        UserSaga.theoDoiGetUserByProjectIdSaga(),\r\n        UserSaga.theoDoiGetListUserSaga(),\r\n        UserSaga.theoDoiDeleteUserSaga(),\r\n        UserSaga.theoDoiUpdateUserSaga(),\r\n        UserSaga.theoDoiCreateUserSage(),\r\n\r\n        StatusSaga.theoDoiGetAllStatusSaga(),\r\n\r\n        PrioritySaga.theoDoiGetAllPriority(),\r\n\r\n        TaskSaga.theoDoiGetAllTaskTypeSaga(),\r\n        TaskSaga.theoDoiCreateTaskSaga(),\r\n        TaskSaga.theoDoiGetTaskDetailSaga(),\r\n        TaskSaga.theoDoiHandleChangePostApi(),\r\n        TaskSaga.theoDoiUpdateTaskStatusSaga(),\r\n        TaskSaga.theoDoiGetAllCommentSaga(),\r\n        TaskSaga.theoDoiCreateCommentSaga(),\r\n        TaskSaga.theoDoiDeleteCommentSaga(),\r\n        TaskSaga.theoDoiUpdateCommentSaga()\r\n    ])\r\n}","import { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport { LoadingReducer } from '../redux/reducers/LoadingReducer';\r\nimport { AuthenticationReducer } from './reducers/AuthenticationReducer';\r\nimport { ProjectCategoryReducer } from './reducers/ProjectCategoryReducer';\r\nimport { DrawerCyberbugsReducer } from './reducers/DrawerCyberbugsReducer';\r\nimport { ProjectReducer } from './reducers/ProjectReducer';\r\nimport { UserReducer } from './reducers/UserReducer';\r\nimport { PriorityReducer } from './reducers/PriorityReducer';\r\nimport { StatusReducer } from './reducers/StatusReducer';\r\nimport { TaskReducer } from './reducers/TaskReducer';\r\n\r\n//middleware saga\r\nimport createMiddleWareSaga from 'redux-saga';\r\nimport { rootSaga } from './sagas/rootSaga';\r\nconst middleWareSaga = createMiddleWareSaga();\r\n\r\nconst rootReducer = combineReducers({\r\n    LoadingReducer,\r\n    AuthenticationReducer,\r\n    ProjectCategoryReducer,\r\n    DrawerCyberbugsReducer,\r\n    ProjectReducer,\r\n    UserReducer,\r\n    PriorityReducer,\r\n    StatusReducer,\r\n    TaskReducer\r\n})\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(middleWareSaga));\r\n\r\nmiddleWareSaga.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\n//setup redux\nimport store from './redux/configStore'\nimport { Provider } from 'react-redux';\nimport { history } from './util/history';\nimport { Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router history={history}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}